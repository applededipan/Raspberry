!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BUFFER_LENGTH	src/task1_mavdata.h	27;"	d
BUFFER_LENGTH_TASK3	src/task3_mavpddl.h	30;"	d
CC	src/Makefile	/^CC=arm-linux-gnueabihf-gcc$/;"	m
COMMON_H	lib/mavlink/1.0/common/common.h	6;"	d
ETH0_UP	src/task2_videodata.h	15;"	d
ETHTOOL_GLINK	src/task2_videodata.h	13;"	d
FENCE_ACTION	lib/mavlink/1.0/common/common.h	/^enum FENCE_ACTION {$/;"	g
FENCE_ACTION_ENUM_END	lib/mavlink/1.0/common/common.h	/^    FENCE_ACTION_ENUM_END = 4, \/*  | *\/$/;"	e	enum:FENCE_ACTION
FENCE_ACTION_GUIDED	lib/mavlink/1.0/common/common.h	/^    FENCE_ACTION_GUIDED = 1, \/* Switched to guided mode to return point (fence point 0) | *\/$/;"	e	enum:FENCE_ACTION
FENCE_ACTION_GUIDED_THR_PASS	lib/mavlink/1.0/common/common.h	/^    FENCE_ACTION_GUIDED_THR_PASS = 3, \/* Switched to guided mode to return point (fence point 0) with manual throttle control | *\/$/;"	e	enum:FENCE_ACTION
FENCE_ACTION_NONE	lib/mavlink/1.0/common/common.h	/^    FENCE_ACTION_NONE = 0, \/* Disable fenced mode | *\/$/;"	e	enum:FENCE_ACTION
FENCE_ACTION_REPORT	lib/mavlink/1.0/common/common.h	/^    FENCE_ACTION_REPORT = 2, \/* Report fence breach, but don't take action | *\/$/;"	e	enum:FENCE_ACTION
FENCE_BREACH	lib/mavlink/1.0/common/common.h	/^enum FENCE_BREACH {$/;"	g
FENCE_BREACH_BOUNDARY	lib/mavlink/1.0/common/common.h	/^    FENCE_BREACH_BOUNDARY = 3, \/* Breached fence boundary | *\/$/;"	e	enum:FENCE_BREACH
FENCE_BREACH_ENUM_END	lib/mavlink/1.0/common/common.h	/^    FENCE_BREACH_ENUM_END = 4, \/*  | *\/$/;"	e	enum:FENCE_BREACH
FENCE_BREACH_MAXALT	lib/mavlink/1.0/common/common.h	/^    FENCE_BREACH_MAXALT = 2, \/* Breached maximum altitude | *\/$/;"	e	enum:FENCE_BREACH
FENCE_BREACH_MINALT	lib/mavlink/1.0/common/common.h	/^    FENCE_BREACH_MINALT = 1, \/* Breached minimum altitude | *\/$/;"	e	enum:FENCE_BREACH
FENCE_BREACH_NONE	lib/mavlink/1.0/common/common.h	/^    FENCE_BREACH_NONE = 0, \/* No last fence breach | *\/$/;"	e	enum:FENCE_BREACH
FlagEth0Uped	src/task2_videodata.h	/^    int FlagEth0Uped=0;$/;"	v
FlagUsb0Uped	src/task2_videodata.h	/^    int FlagUsb0Uped=0;$/;"	v
GLOBAL_H	src/global.h	2;"	d
HAVE_ENUM_FENCE_ACTION	lib/mavlink/1.0/common/common.h	258;"	d
HAVE_ENUM_FENCE_BREACH	lib/mavlink/1.0/common/common.h	270;"	d
HAVE_ENUM_MAVLINK_DATA_STREAM_TYPE	lib/mavlink/1.0/common/common.h	244;"	d
HAVE_ENUM_MAV_AUTOPILOT	lib/mavlink/1.0/common/common.h	34;"	d
HAVE_ENUM_MAV_CMD	lib/mavlink/1.0/common/common.h	305;"	d
HAVE_ENUM_MAV_CMD_ACK	lib/mavlink/1.0/common/common.h	391;"	d
HAVE_ENUM_MAV_COMPONENT	lib/mavlink/1.0/common/common.h	166;"	d
HAVE_ENUM_MAV_DATA_STREAM	lib/mavlink/1.0/common/common.h	359;"	d
HAVE_ENUM_MAV_DISTANCE_SENSOR	lib/mavlink/1.0/common/common.h	295;"	d
HAVE_ENUM_MAV_FRAME	lib/mavlink/1.0/common/common.h	229;"	d
HAVE_ENUM_MAV_GOTO	lib/mavlink/1.0/common/common.h	118;"	d
HAVE_ENUM_MAV_MISSION_RESULT	lib/mavlink/1.0/common/common.h	439;"	d
HAVE_ENUM_MAV_MODE	lib/mavlink/1.0/common/common.h	131;"	d
HAVE_ENUM_MAV_MODE_FLAG	lib/mavlink/1.0/common/common.h	86;"	d
HAVE_ENUM_MAV_MODE_FLAG_DECODE_POSITION	lib/mavlink/1.0/common/common.h	102;"	d
HAVE_ENUM_MAV_MOUNT_MODE	lib/mavlink/1.0/common/common.h	282;"	d
HAVE_ENUM_MAV_PARAM_TYPE	lib/mavlink/1.0/common/common.h	408;"	d
HAVE_ENUM_MAV_POWER_STATUS	lib/mavlink/1.0/common/common.h	478;"	d
HAVE_ENUM_MAV_RESULT	lib/mavlink/1.0/common/common.h	426;"	d
HAVE_ENUM_MAV_ROI	lib/mavlink/1.0/common/common.h	378;"	d
HAVE_ENUM_MAV_SEVERITY	lib/mavlink/1.0/common/common.h	462;"	d
HAVE_ENUM_MAV_STATE	lib/mavlink/1.0/common/common.h	150;"	d
HAVE_ENUM_MAV_SYS_STATUS_SENSOR	lib/mavlink/1.0/common/common.h	200;"	d
HAVE_ENUM_MAV_TYPE	lib/mavlink/1.0/common/common.h	59;"	d
HAVE_ENUM_SERIAL_CONTROL_DEV	lib/mavlink/1.0/common/common.h	492;"	d
HAVE_ENUM_SERIAL_CONTROL_FLAG	lib/mavlink/1.0/common/common.h	504;"	d
IFSTATUS_DOWN	src/task2_videodata.h	20;"	d
IFSTATUS_UP	src/task2_videodata.h	19;"	d
INIT_H	src/init.h	3;"	d
MAVLINK_ALIGNED_FIELDS	lib/mavlink/1.0/common/mavlink.h	17;"	d
MAVLINK_ASSERT	lib/mavlink/1.0/protocol.h	26;"	d
MAVLINK_AVOID_GCC_STACK_BUG	lib/mavlink/1.0/protocol.h	22;"	d
MAVLINK_BIG_ENDIAN	lib/mavlink/1.0/mavlink_types.h	153;"	d
MAVLINK_BUILD_DATE	lib/mavlink/1.0/common/version.h	8;"	d
MAVLINK_COMM_0	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_COMM_0, MAVLINK_COMM_1, MAVLINK_COMM_2, MAVLINK_COMM_3$/;"	e	enum:__anon3
MAVLINK_COMM_1	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_COMM_0, MAVLINK_COMM_1, MAVLINK_COMM_2, MAVLINK_COMM_3$/;"	e	enum:__anon3
MAVLINK_COMM_2	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_COMM_0, MAVLINK_COMM_1, MAVLINK_COMM_2, MAVLINK_COMM_3$/;"	e	enum:__anon3
MAVLINK_COMM_3	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_COMM_0, MAVLINK_COMM_1, MAVLINK_COMM_2, MAVLINK_COMM_3$/;"	e	enum:__anon3
MAVLINK_COMM_NUM_BUFFERS	lib/mavlink/1.0/mavlink_types.h	122;"	d
MAVLINK_COMM_NUM_BUFFERS	lib/mavlink/1.0/mavlink_types.h	124;"	d
MAVLINK_CORE_HEADER_LEN	lib/mavlink/1.0/mavlink_types.h	11;"	d
MAVLINK_CRC_EXTRA	lib/mavlink/1.0/common/mavlink.h	21;"	d
MAVLINK_DATA_STREAM_IMG_BMP	lib/mavlink/1.0/common/common.h	/^    MAVLINK_DATA_STREAM_IMG_BMP = 2, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_JPEG	lib/mavlink/1.0/common/common.h	/^    MAVLINK_DATA_STREAM_IMG_JPEG = 1, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_PGM	lib/mavlink/1.0/common/common.h	/^    MAVLINK_DATA_STREAM_IMG_PGM = 5, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_PNG	lib/mavlink/1.0/common/common.h	/^    MAVLINK_DATA_STREAM_IMG_PNG = 6, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_RAW32U	lib/mavlink/1.0/common/common.h	/^    MAVLINK_DATA_STREAM_IMG_RAW32U = 4, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_RAW8U	lib/mavlink/1.0/common/common.h	/^    MAVLINK_DATA_STREAM_IMG_RAW8U = 3, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_TYPE	lib/mavlink/1.0/common/common.h	/^enum MAVLINK_DATA_STREAM_TYPE {$/;"	g
MAVLINK_DATA_STREAM_TYPE_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAVLINK_DATA_STREAM_TYPE_ENUM_END = 7, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_ENABLED_COMMON	lib/mavlink/1.0/common/common.h	28;"	d
MAVLINK_ENDIAN	lib/mavlink/1.0/common/mavlink.h	13;"	d
MAVLINK_END_UART_SEND	lib/mavlink/1.0/protocol.h	34;"	d
MAVLINK_EXTENDED_HEADER_LEN	lib/mavlink/1.0/mavlink_types.h	19;"	d
MAVLINK_H	lib/mavlink/1.0/common/mavlink.h	6;"	d
MAVLINK_HELPER	lib/mavlink/1.0/mavlink_helpers.h	10;"	d
MAVLINK_HELPER	lib/mavlink/1.0/protocol.h	38;"	d
MAVLINK_HELPER	lib/mavlink/1.0/protocol.h	40;"	d
MAVLINK_LITTLE_ENDIAN	lib/mavlink/1.0/mavlink_types.h	154;"	d
MAVLINK_MAX_DIALECT_PAYLOAD_SIZE	lib/mavlink/1.0/common/version.h	10;"	d
MAVLINK_MAX_EXTENDED_PACKET_LEN	lib/mavlink/1.0/mavlink_types.h	23;"	d
MAVLINK_MAX_EXTENDED_PACKET_LEN	lib/mavlink/1.0/mavlink_types.h	26;"	d
MAVLINK_MAX_EXTENDED_PAYLOAD_LEN	lib/mavlink/1.0/mavlink_types.h	29;"	d
MAVLINK_MAX_FIELDS	lib/mavlink/1.0/mavlink_types.h	85;"	d
MAVLINK_MAX_PACKET_LEN	lib/mavlink/1.0/mavlink_types.h	16;"	d
MAVLINK_MAX_PAYLOAD_LEN	lib/mavlink/1.0/mavlink_types.h	8;"	d
MAVLINK_MESSAGE_CRC	lib/mavlink/1.0/mavlink_helpers.h	240;"	d
MAVLINK_MESSAGE_CRCS	lib/mavlink/1.0/common/common.h	19;"	d
MAVLINK_MESSAGE_INFO	lib/mavlink/1.0/common/common.h	23;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE	lib/mavlink/1.0/common/mavlink_msg_attitude.h	21;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE_QUATERNION	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	22;"	d
MAVLINK_MESSAGE_INFO_AUTH_KEY	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	17;"	d
MAVLINK_MESSAGE_INFO_BATTERY_STATUS	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	25;"	d
MAVLINK_MESSAGE_INFO_CHANGE_OPERATOR_CONTROL	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	20;"	d
MAVLINK_MESSAGE_INFO_CHANGE_OPERATOR_CONTROL_ACK	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	17;"	d
MAVLINK_MESSAGE_INFO_COMMAND_ACK	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	16;"	d
MAVLINK_MESSAGE_INFO_COMMAND_LONG	lib/mavlink/1.0/common/mavlink_msg_command_long.h	25;"	d
MAVLINK_MESSAGE_INFO_DATA_STREAM	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	17;"	d
MAVLINK_MESSAGE_INFO_DATA_TRANSMISSION_HANDSHAKE	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	21;"	d
MAVLINK_MESSAGE_INFO_DEBUG	lib/mavlink/1.0/common/mavlink_msg_debug.h	17;"	d
MAVLINK_MESSAGE_INFO_DEBUG_VECT	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	21;"	d
MAVLINK_MESSAGE_INFO_DISTANCE_SENSOR	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	22;"	d
MAVLINK_MESSAGE_INFO_ENCAPSULATED_DATA	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	18;"	d
MAVLINK_MESSAGE_INFO_FILE_TRANSFER_DIR_LIST	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	19;"	d
MAVLINK_MESSAGE_INFO_FILE_TRANSFER_RES	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	16;"	d
MAVLINK_MESSAGE_INFO_FILE_TRANSFER_START	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	21;"	d
MAVLINK_MESSAGE_INFO_GLOBAL_POSITION_INT	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	23;"	d
MAVLINK_MESSAGE_INFO_GLOBAL_POSITION_SETPOINT_INT	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	19;"	d
MAVLINK_MESSAGE_INFO_GLOBAL_VISION_POSITION_ESTIMATE	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	21;"	d
MAVLINK_MESSAGE_INFO_GPS2_RAW	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	26;"	d
MAVLINK_MESSAGE_INFO_GPS_GLOBAL_ORIGIN	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	17;"	d
MAVLINK_MESSAGE_INFO_GPS_INJECT_DATA	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	20;"	d
MAVLINK_MESSAGE_INFO_GPS_RAW_INT	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	24;"	d
MAVLINK_MESSAGE_INFO_GPS_STATUS	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	26;"	d
MAVLINK_MESSAGE_INFO_HEARTBEAT	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	20;"	d
MAVLINK_MESSAGE_INFO_HIGHRES_IMU	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	29;"	d
MAVLINK_MESSAGE_INFO_HIL_CONTROLS	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	25;"	d
MAVLINK_MESSAGE_INFO_HIL_GPS	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	27;"	d
MAVLINK_MESSAGE_INFO_HIL_OPTICAL_FLOW	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	22;"	d
MAVLINK_MESSAGE_INFO_HIL_RC_INPUTS_RAW	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	28;"	d
MAVLINK_MESSAGE_INFO_HIL_SENSOR	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	29;"	d
MAVLINK_MESSAGE_INFO_HIL_STATE	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	30;"	d
MAVLINK_MESSAGE_INFO_HIL_STATE_QUATERNION	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	32;"	d
MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	21;"	d
MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	21;"	d
MAVLINK_MESSAGE_INFO_LOCAL_POSITION_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	19;"	d
MAVLINK_MESSAGE_INFO_LOG_DATA	lib/mavlink/1.0/common/mavlink_msg_log_data.h	20;"	d
MAVLINK_MESSAGE_INFO_LOG_ENTRY	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	19;"	d
MAVLINK_MESSAGE_INFO_LOG_ERASE	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	16;"	d
MAVLINK_MESSAGE_INFO_LOG_REQUEST_DATA	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	19;"	d
MAVLINK_MESSAGE_INFO_LOG_REQUEST_END	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	16;"	d
MAVLINK_MESSAGE_INFO_LOG_REQUEST_LIST	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	18;"	d
MAVLINK_MESSAGE_INFO_MANUAL_CONTROL	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	20;"	d
MAVLINK_MESSAGE_INFO_MANUAL_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	21;"	d
MAVLINK_MESSAGE_INFO_MEMORY_VECT	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	20;"	d
MAVLINK_MESSAGE_INFO_MISSION_ACK	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	17;"	d
MAVLINK_MESSAGE_INFO_MISSION_CLEAR_ALL	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	16;"	d
MAVLINK_MESSAGE_INFO_MISSION_COUNT	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	17;"	d
MAVLINK_MESSAGE_INFO_MISSION_CURRENT	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	15;"	d
MAVLINK_MESSAGE_INFO_MISSION_ITEM	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	28;"	d
MAVLINK_MESSAGE_INFO_MISSION_ITEM_REACHED	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	15;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	17;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST_LIST	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	16;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST_PARTIAL_LIST	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	18;"	d
MAVLINK_MESSAGE_INFO_MISSION_SET_CURRENT	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	17;"	d
MAVLINK_MESSAGE_INFO_MISSION_WRITE_PARTIAL_LIST	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	18;"	d
MAVLINK_MESSAGE_INFO_NAMED_VALUE_FLOAT	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	19;"	d
MAVLINK_MESSAGE_INFO_NAMED_VALUE_INT	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	19;"	d
MAVLINK_MESSAGE_INFO_NAV_CONTROLLER_OUTPUT	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	22;"	d
MAVLINK_MESSAGE_INFO_OMNIDIRECTIONAL_FLOW	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	23;"	d
MAVLINK_MESSAGE_INFO_OPTICAL_FLOW	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	22;"	d
MAVLINK_MESSAGE_INFO_PARAM_REQUEST_LIST	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	16;"	d
MAVLINK_MESSAGE_INFO_PARAM_REQUEST_READ	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	20;"	d
MAVLINK_MESSAGE_INFO_PARAM_SET	lib/mavlink/1.0/common/mavlink_msg_param_set.h	21;"	d
MAVLINK_MESSAGE_INFO_PARAM_VALUE	lib/mavlink/1.0/common/mavlink_msg_param_value.h	21;"	d
MAVLINK_MESSAGE_INFO_PING	lib/mavlink/1.0/common/mavlink_msg_ping.h	18;"	d
MAVLINK_MESSAGE_INFO_POWER_STATUS	lib/mavlink/1.0/common/mavlink_msg_power_status.h	17;"	d
MAVLINK_MESSAGE_INFO_RADIO_STATUS	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	21;"	d
MAVLINK_MESSAGE_INFO_RAW_IMU	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	24;"	d
MAVLINK_MESSAGE_INFO_RAW_PRESSURE	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	19;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	35;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS_OVERRIDE	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	24;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS_RAW	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	25;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS_SCALED	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	25;"	d
MAVLINK_MESSAGE_INFO_REQUEST_DATA_STREAM	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	19;"	d
MAVLINK_MESSAGE_INFO_ROLL_PITCH_YAW_RATES_THRUST_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	19;"	d
MAVLINK_MESSAGE_INFO_ROLL_PITCH_YAW_SPEED_THRUST_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	19;"	d
MAVLINK_MESSAGE_INFO_ROLL_PITCH_YAW_THRUST_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	19;"	d
MAVLINK_MESSAGE_INFO_SAFETY_ALLOWED_AREA	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	21;"	d
MAVLINK_MESSAGE_INFO_SAFETY_SET_ALLOWED_AREA	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	23;"	d
MAVLINK_MESSAGE_INFO_SCALED_IMU	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	24;"	d
MAVLINK_MESSAGE_INFO_SCALED_IMU2	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	24;"	d
MAVLINK_MESSAGE_INFO_SCALED_PRESSURE	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	18;"	d
MAVLINK_MESSAGE_INFO_SERIAL_CONTROL	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	22;"	d
MAVLINK_MESSAGE_INFO_SERVO_OUTPUT_RAW	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	24;"	d
MAVLINK_MESSAGE_INFO_SETPOINT_6DOF	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	21;"	d
MAVLINK_MESSAGE_INFO_SETPOINT_8DOF	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	23;"	d
MAVLINK_MESSAGE_INFO_SET_GLOBAL_POSITION_SETPOINT_INT	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	19;"	d
MAVLINK_MESSAGE_INFO_SET_GPS_GLOBAL_ORIGIN	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	18;"	d
MAVLINK_MESSAGE_INFO_SET_LOCAL_POSITION_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	21;"	d
MAVLINK_MESSAGE_INFO_SET_MODE	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	17;"	d
MAVLINK_MESSAGE_INFO_SET_QUAD_MOTORS_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	19;"	d
MAVLINK_MESSAGE_INFO_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	31;"	d
MAVLINK_MESSAGE_INFO_SET_QUAD_SWARM_ROLL_PITCH_YAW_THRUST	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	25;"	d
MAVLINK_MESSAGE_INFO_SET_ROLL_PITCH_YAW_SPEED_THRUST	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	20;"	d
MAVLINK_MESSAGE_INFO_SET_ROLL_PITCH_YAW_THRUST	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	20;"	d
MAVLINK_MESSAGE_INFO_SIM_STATE	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	35;"	d
MAVLINK_MESSAGE_INFO_STATE_CORRECTION	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	23;"	d
MAVLINK_MESSAGE_INFO_STATUSTEXT	lib/mavlink/1.0/common/mavlink_msg_statustext.h	18;"	d
MAVLINK_MESSAGE_INFO_SYSTEM_TIME	lib/mavlink/1.0/common/mavlink_msg_system_time.h	16;"	d
MAVLINK_MESSAGE_INFO_SYS_STATUS	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	27;"	d
MAVLINK_MESSAGE_INFO_VFR_HUD	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	20;"	d
MAVLINK_MESSAGE_INFO_VICON_POSITION_ESTIMATE	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	21;"	d
MAVLINK_MESSAGE_INFO_VISION_POSITION_ESTIMATE	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	21;"	d
MAVLINK_MESSAGE_INFO_VISION_SPEED_ESTIMATE	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	18;"	d
MAVLINK_MESSAGE_LENGTH	lib/mavlink/1.0/mavlink_helpers.h	253;"	d
MAVLINK_MESSAGE_LENGTHS	lib/mavlink/1.0/common/common.h	15;"	d
MAVLINK_MSG_AUTH_KEY_FIELD_KEY_LEN	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	15;"	d
MAVLINK_MSG_CHANGE_OPERATOR_CONTROL_FIELD_PASSKEY_LEN	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	18;"	d
MAVLINK_MSG_DEBUG_VECT_FIELD_NAME_LEN	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	19;"	d
MAVLINK_MSG_ENCAPSULATED_DATA_FIELD_DATA_LEN	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	16;"	d
MAVLINK_MSG_FILE_TRANSFER_DIR_LIST_FIELD_DIR_PATH_LEN	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	17;"	d
MAVLINK_MSG_FILE_TRANSFER_START_FIELD_DEST_PATH_LEN	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	19;"	d
MAVLINK_MSG_GPS_INJECT_DATA_FIELD_DATA_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	18;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_AZIMUTH_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	23;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_ELEVATION_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	22;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_PRN_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	20;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_SNR_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	24;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_USED_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	21;"	d
MAVLINK_MSG_HIL_STATE_QUATERNION_FIELD_ATTITUDE_QUATERNION_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	30;"	d
MAVLINK_MSG_ID_0_CRC	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	18;"	d
MAVLINK_MSG_ID_0_LEN	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	15;"	d
MAVLINK_MSG_ID_100_CRC	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	20;"	d
MAVLINK_MSG_ID_100_LEN	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	17;"	d
MAVLINK_MSG_ID_101_CRC	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	19;"	d
MAVLINK_MSG_ID_101_LEN	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	16;"	d
MAVLINK_MSG_ID_102_CRC	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	19;"	d
MAVLINK_MSG_ID_102_LEN	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	16;"	d
MAVLINK_MSG_ID_103_CRC	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	16;"	d
MAVLINK_MSG_ID_103_LEN	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	13;"	d
MAVLINK_MSG_ID_104_CRC	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	19;"	d
MAVLINK_MSG_ID_104_LEN	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	16;"	d
MAVLINK_MSG_ID_105_CRC	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	27;"	d
MAVLINK_MSG_ID_105_LEN	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	24;"	d
MAVLINK_MSG_ID_106_CRC	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	18;"	d
MAVLINK_MSG_ID_106_LEN	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	15;"	d
MAVLINK_MSG_ID_107_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	27;"	d
MAVLINK_MSG_ID_107_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	24;"	d
MAVLINK_MSG_ID_108_CRC	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	33;"	d
MAVLINK_MSG_ID_108_LEN	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	30;"	d
MAVLINK_MSG_ID_109_CRC	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	19;"	d
MAVLINK_MSG_ID_109_LEN	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	16;"	d
MAVLINK_MSG_ID_110_CRC	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	17;"	d
MAVLINK_MSG_ID_110_LEN	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	14;"	d
MAVLINK_MSG_ID_111_CRC	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	15;"	d
MAVLINK_MSG_ID_111_LEN	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	12;"	d
MAVLINK_MSG_ID_112_CRC	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	14;"	d
MAVLINK_MSG_ID_112_LEN	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	11;"	d
MAVLINK_MSG_ID_113_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	25;"	d
MAVLINK_MSG_ID_113_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	22;"	d
MAVLINK_MSG_ID_114_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	20;"	d
MAVLINK_MSG_ID_114_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	17;"	d
MAVLINK_MSG_ID_115_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	28;"	d
MAVLINK_MSG_ID_115_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	25;"	d
MAVLINK_MSG_ID_116_CRC	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	22;"	d
MAVLINK_MSG_ID_116_LEN	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	19;"	d
MAVLINK_MSG_ID_117_CRC	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	16;"	d
MAVLINK_MSG_ID_117_LEN	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	13;"	d
MAVLINK_MSG_ID_118_CRC	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	17;"	d
MAVLINK_MSG_ID_118_LEN	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	14;"	d
MAVLINK_MSG_ID_119_CRC	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	17;"	d
MAVLINK_MSG_ID_119_LEN	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	14;"	d
MAVLINK_MSG_ID_11_CRC	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	15;"	d
MAVLINK_MSG_ID_11_LEN	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	12;"	d
MAVLINK_MSG_ID_120_CRC	lib/mavlink/1.0/common/mavlink_msg_log_data.h	16;"	d
MAVLINK_MSG_ID_120_LEN	lib/mavlink/1.0/common/mavlink_msg_log_data.h	13;"	d
MAVLINK_MSG_ID_121_CRC	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	14;"	d
MAVLINK_MSG_ID_121_LEN	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	11;"	d
MAVLINK_MSG_ID_122_CRC	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	14;"	d
MAVLINK_MSG_ID_122_LEN	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	11;"	d
MAVLINK_MSG_ID_123_CRC	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	16;"	d
MAVLINK_MSG_ID_123_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	13;"	d
MAVLINK_MSG_ID_124_CRC	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	24;"	d
MAVLINK_MSG_ID_124_LEN	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	21;"	d
MAVLINK_MSG_ID_125_CRC	lib/mavlink/1.0/common/mavlink_msg_power_status.h	15;"	d
MAVLINK_MSG_ID_125_LEN	lib/mavlink/1.0/common/mavlink_msg_power_status.h	12;"	d
MAVLINK_MSG_ID_126_CRC	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	18;"	d
MAVLINK_MSG_ID_126_LEN	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	15;"	d
MAVLINK_MSG_ID_130_CRC	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	19;"	d
MAVLINK_MSG_ID_130_LEN	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	16;"	d
MAVLINK_MSG_ID_131_CRC	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	14;"	d
MAVLINK_MSG_ID_131_LEN	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	11;"	d
MAVLINK_MSG_ID_132_CRC	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	20;"	d
MAVLINK_MSG_ID_132_LEN	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	17;"	d
MAVLINK_MSG_ID_147_CRC	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	23;"	d
MAVLINK_MSG_ID_147_LEN	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	20;"	d
MAVLINK_MSG_ID_148_CRC	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	21;"	d
MAVLINK_MSG_ID_148_LEN	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	18;"	d
MAVLINK_MSG_ID_149_CRC	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	19;"	d
MAVLINK_MSG_ID_149_LEN	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	16;"	d
MAVLINK_MSG_ID_1_CRC	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	25;"	d
MAVLINK_MSG_ID_1_LEN	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	22;"	d
MAVLINK_MSG_ID_20_CRC	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	16;"	d
MAVLINK_MSG_ID_20_LEN	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	13;"	d
MAVLINK_MSG_ID_21_CRC	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	14;"	d
MAVLINK_MSG_ID_21_LEN	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	11;"	d
MAVLINK_MSG_ID_22_CRC	lib/mavlink/1.0/common/mavlink_msg_param_value.h	17;"	d
MAVLINK_MSG_ID_22_LEN	lib/mavlink/1.0/common/mavlink_msg_param_value.h	14;"	d
MAVLINK_MSG_ID_23_CRC	lib/mavlink/1.0/common/mavlink_msg_param_set.h	17;"	d
MAVLINK_MSG_ID_23_LEN	lib/mavlink/1.0/common/mavlink_msg_param_set.h	14;"	d
MAVLINK_MSG_ID_249_CRC	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	16;"	d
MAVLINK_MSG_ID_249_LEN	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	13;"	d
MAVLINK_MSG_ID_24_CRC	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	22;"	d
MAVLINK_MSG_ID_24_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	19;"	d
MAVLINK_MSG_ID_250_CRC	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	17;"	d
MAVLINK_MSG_ID_250_LEN	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	14;"	d
MAVLINK_MSG_ID_251_CRC	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	15;"	d
MAVLINK_MSG_ID_251_LEN	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	12;"	d
MAVLINK_MSG_ID_252_CRC	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	15;"	d
MAVLINK_MSG_ID_252_LEN	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	12;"	d
MAVLINK_MSG_ID_253_CRC	lib/mavlink/1.0/common/mavlink_msg_statustext.h	14;"	d
MAVLINK_MSG_ID_253_LEN	lib/mavlink/1.0/common/mavlink_msg_statustext.h	11;"	d
MAVLINK_MSG_ID_254_CRC	lib/mavlink/1.0/common/mavlink_msg_debug.h	15;"	d
MAVLINK_MSG_ID_254_LEN	lib/mavlink/1.0/common/mavlink_msg_debug.h	12;"	d
MAVLINK_MSG_ID_25_CRC	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	18;"	d
MAVLINK_MSG_ID_25_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	15;"	d
MAVLINK_MSG_ID_26_CRC	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	22;"	d
MAVLINK_MSG_ID_26_LEN	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	19;"	d
MAVLINK_MSG_ID_27_CRC	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	22;"	d
MAVLINK_MSG_ID_27_LEN	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	19;"	d
MAVLINK_MSG_ID_28_CRC	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	17;"	d
MAVLINK_MSG_ID_28_LEN	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	14;"	d
MAVLINK_MSG_ID_29_CRC	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	16;"	d
MAVLINK_MSG_ID_29_LEN	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	13;"	d
MAVLINK_MSG_ID_2_CRC	lib/mavlink/1.0/common/mavlink_msg_system_time.h	14;"	d
MAVLINK_MSG_ID_2_LEN	lib/mavlink/1.0/common/mavlink_msg_system_time.h	11;"	d
MAVLINK_MSG_ID_30_CRC	lib/mavlink/1.0/common/mavlink_msg_attitude.h	19;"	d
MAVLINK_MSG_ID_30_LEN	lib/mavlink/1.0/common/mavlink_msg_attitude.h	16;"	d
MAVLINK_MSG_ID_31_CRC	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	20;"	d
MAVLINK_MSG_ID_31_LEN	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	17;"	d
MAVLINK_MSG_ID_32_CRC	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	19;"	d
MAVLINK_MSG_ID_32_LEN	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	16;"	d
MAVLINK_MSG_ID_33_CRC	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	21;"	d
MAVLINK_MSG_ID_33_LEN	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	18;"	d
MAVLINK_MSG_ID_34_CRC	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	23;"	d
MAVLINK_MSG_ID_34_LEN	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	20;"	d
MAVLINK_MSG_ID_35_CRC	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	23;"	d
MAVLINK_MSG_ID_35_LEN	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	20;"	d
MAVLINK_MSG_ID_36_CRC	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	22;"	d
MAVLINK_MSG_ID_36_LEN	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	19;"	d
MAVLINK_MSG_ID_37_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	16;"	d
MAVLINK_MSG_ID_37_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	13;"	d
MAVLINK_MSG_ID_38_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	16;"	d
MAVLINK_MSG_ID_38_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	13;"	d
MAVLINK_MSG_ID_39_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	26;"	d
MAVLINK_MSG_ID_39_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	23;"	d
MAVLINK_MSG_ID_40_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	15;"	d
MAVLINK_MSG_ID_40_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	12;"	d
MAVLINK_MSG_ID_41_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	15;"	d
MAVLINK_MSG_ID_41_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	12;"	d
MAVLINK_MSG_ID_42_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	13;"	d
MAVLINK_MSG_ID_42_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	10;"	d
MAVLINK_MSG_ID_43_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	14;"	d
MAVLINK_MSG_ID_43_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	11;"	d
MAVLINK_MSG_ID_44_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	15;"	d
MAVLINK_MSG_ID_44_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	12;"	d
MAVLINK_MSG_ID_45_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	14;"	d
MAVLINK_MSG_ID_45_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	11;"	d
MAVLINK_MSG_ID_46_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	13;"	d
MAVLINK_MSG_ID_46_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	10;"	d
MAVLINK_MSG_ID_47_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	15;"	d
MAVLINK_MSG_ID_47_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	12;"	d
MAVLINK_MSG_ID_48_CRC	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	16;"	d
MAVLINK_MSG_ID_48_LEN	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	13;"	d
MAVLINK_MSG_ID_49_CRC	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	15;"	d
MAVLINK_MSG_ID_49_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	12;"	d
MAVLINK_MSG_ID_4_CRC	lib/mavlink/1.0/common/mavlink_msg_ping.h	16;"	d
MAVLINK_MSG_ID_4_LEN	lib/mavlink/1.0/common/mavlink_msg_ping.h	13;"	d
MAVLINK_MSG_ID_50_CRC	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	19;"	d
MAVLINK_MSG_ID_50_LEN	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	16;"	d
MAVLINK_MSG_ID_51_CRC	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	17;"	d
MAVLINK_MSG_ID_51_LEN	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	14;"	d
MAVLINK_MSG_ID_52_CRC	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	17;"	d
MAVLINK_MSG_ID_52_LEN	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	14;"	d
MAVLINK_MSG_ID_53_CRC	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	17;"	d
MAVLINK_MSG_ID_53_LEN	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	14;"	d
MAVLINK_MSG_ID_54_CRC	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	21;"	d
MAVLINK_MSG_ID_54_LEN	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	18;"	d
MAVLINK_MSG_ID_55_CRC	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	19;"	d
MAVLINK_MSG_ID_55_LEN	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	16;"	d
MAVLINK_MSG_ID_56_CRC	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	18;"	d
MAVLINK_MSG_ID_56_LEN	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	15;"	d
MAVLINK_MSG_ID_57_CRC	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	18;"	d
MAVLINK_MSG_ID_57_LEN	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	15;"	d
MAVLINK_MSG_ID_58_CRC	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	17;"	d
MAVLINK_MSG_ID_58_LEN	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	14;"	d
MAVLINK_MSG_ID_59_CRC	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	17;"	d
MAVLINK_MSG_ID_59_LEN	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	14;"	d
MAVLINK_MSG_ID_5_CRC	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	16;"	d
MAVLINK_MSG_ID_5_LEN	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	13;"	d
MAVLINK_MSG_ID_60_CRC	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	17;"	d
MAVLINK_MSG_ID_60_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	14;"	d
MAVLINK_MSG_ID_61_CRC	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	18;"	d
MAVLINK_MSG_ID_61_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	15;"	d
MAVLINK_MSG_ID_62_CRC	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	20;"	d
MAVLINK_MSG_ID_62_LEN	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	17;"	d
MAVLINK_MSG_ID_63_CRC	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	21;"	d
MAVLINK_MSG_ID_63_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	18;"	d
MAVLINK_MSG_ID_64_CRC	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	21;"	d
MAVLINK_MSG_ID_64_LEN	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	18;"	d
MAVLINK_MSG_ID_65_CRC	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	33;"	d
MAVLINK_MSG_ID_65_LEN	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	30;"	d
MAVLINK_MSG_ID_66_CRC	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	17;"	d
MAVLINK_MSG_ID_66_LEN	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	14;"	d
MAVLINK_MSG_ID_67_CRC	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	15;"	d
MAVLINK_MSG_ID_67_LEN	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	12;"	d
MAVLINK_MSG_ID_69_CRC	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	18;"	d
MAVLINK_MSG_ID_69_LEN	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	15;"	d
MAVLINK_MSG_ID_6_CRC	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	15;"	d
MAVLINK_MSG_ID_6_LEN	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	12;"	d
MAVLINK_MSG_ID_70_CRC	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	22;"	d
MAVLINK_MSG_ID_70_LEN	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	19;"	d
MAVLINK_MSG_ID_74_CRC	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	18;"	d
MAVLINK_MSG_ID_74_LEN	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	15;"	d
MAVLINK_MSG_ID_76_CRC	lib/mavlink/1.0/common/mavlink_msg_command_long.h	23;"	d
MAVLINK_MSG_ID_76_LEN	lib/mavlink/1.0/common/mavlink_msg_command_long.h	20;"	d
MAVLINK_MSG_ID_77_CRC	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	14;"	d
MAVLINK_MSG_ID_77_LEN	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	11;"	d
MAVLINK_MSG_ID_7_CRC	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	13;"	d
MAVLINK_MSG_ID_7_LEN	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	10;"	d
MAVLINK_MSG_ID_80_CRC	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	17;"	d
MAVLINK_MSG_ID_80_LEN	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	14;"	d
MAVLINK_MSG_ID_81_CRC	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	19;"	d
MAVLINK_MSG_ID_81_LEN	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	16;"	d
MAVLINK_MSG_ID_89_CRC	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	19;"	d
MAVLINK_MSG_ID_89_LEN	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	16;"	d
MAVLINK_MSG_ID_90_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	28;"	d
MAVLINK_MSG_ID_90_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	25;"	d
MAVLINK_MSG_ID_91_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	23;"	d
MAVLINK_MSG_ID_91_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	20;"	d
MAVLINK_MSG_ID_92_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	26;"	d
MAVLINK_MSG_ID_92_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	23;"	d
MAVLINK_MSG_ID_ATTITUDE	lib/mavlink/1.0/common/mavlink_msg_attitude.h	3;"	d
MAVLINK_MSG_ID_ATTITUDE_CRC	lib/mavlink/1.0/common/mavlink_msg_attitude.h	18;"	d
MAVLINK_MSG_ID_ATTITUDE_LEN	lib/mavlink/1.0/common/mavlink_msg_attitude.h	15;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	3;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION_CRC	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	19;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION_LEN	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	16;"	d
MAVLINK_MSG_ID_AUTH_KEY	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	3;"	d
MAVLINK_MSG_ID_AUTH_KEY_CRC	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	12;"	d
MAVLINK_MSG_ID_AUTH_KEY_LEN	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	9;"	d
MAVLINK_MSG_ID_BATTERY_STATUS	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	3;"	d
MAVLINK_MSG_ID_BATTERY_STATUS_CRC	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	22;"	d
MAVLINK_MSG_ID_BATTERY_STATUS_LEN	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	19;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	3;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_ACK	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	3;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_ACK_CRC	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	14;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_ACK_LEN	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	11;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_CRC	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	15;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_LEN	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	12;"	d
MAVLINK_MSG_ID_COMMAND_ACK	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	3;"	d
MAVLINK_MSG_ID_COMMAND_ACK_CRC	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	13;"	d
MAVLINK_MSG_ID_COMMAND_ACK_LEN	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	10;"	d
MAVLINK_MSG_ID_COMMAND_LONG	lib/mavlink/1.0/common/mavlink_msg_command_long.h	3;"	d
MAVLINK_MSG_ID_COMMAND_LONG_CRC	lib/mavlink/1.0/common/mavlink_msg_command_long.h	22;"	d
MAVLINK_MSG_ID_COMMAND_LONG_LEN	lib/mavlink/1.0/common/mavlink_msg_command_long.h	19;"	d
MAVLINK_MSG_ID_DATA_STREAM	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	3;"	d
MAVLINK_MSG_ID_DATA_STREAM_CRC	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	14;"	d
MAVLINK_MSG_ID_DATA_STREAM_LEN	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	11;"	d
MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	3;"	d
MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE_CRC	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	18;"	d
MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE_LEN	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	15;"	d
MAVLINK_MSG_ID_DEBUG	lib/mavlink/1.0/common/mavlink_msg_debug.h	3;"	d
MAVLINK_MSG_ID_DEBUG_CRC	lib/mavlink/1.0/common/mavlink_msg_debug.h	14;"	d
MAVLINK_MSG_ID_DEBUG_LEN	lib/mavlink/1.0/common/mavlink_msg_debug.h	11;"	d
MAVLINK_MSG_ID_DEBUG_VECT	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	3;"	d
MAVLINK_MSG_ID_DEBUG_VECT_CRC	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	16;"	d
MAVLINK_MSG_ID_DEBUG_VECT_LEN	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	13;"	d
MAVLINK_MSG_ID_DISTANCE_SENSOR	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	3;"	d
MAVLINK_MSG_ID_DISTANCE_SENSOR_CRC	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	19;"	d
MAVLINK_MSG_ID_DISTANCE_SENSOR_LEN	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	16;"	d
MAVLINK_MSG_ID_ENCAPSULATED_DATA	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	3;"	d
MAVLINK_MSG_ID_ENCAPSULATED_DATA_CRC	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	13;"	d
MAVLINK_MSG_ID_ENCAPSULATED_DATA_LEN	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	10;"	d
MAVLINK_MSG_ID_EXTENDED_MESSAGE	lib/mavlink/1.0/mavlink_types.h	18;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_DIR_LIST	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	3;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_DIR_LIST_CRC	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	14;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_DIR_LIST_LEN	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	11;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_RES	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	3;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_RES_CRC	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	13;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_RES_LEN	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	10;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_START	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	3;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_START_CRC	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	16;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_START_LEN	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	13;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	3;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT_CRC	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	20;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT_LEN	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	17;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_SETPOINT_INT	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	3;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_SETPOINT_INT_CRC	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	16;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_SETPOINT_INT_LEN	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	13;"	d
MAVLINK_MSG_ID_GLOBAL_VISION_POSITION_ESTIMATE	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	3;"	d
MAVLINK_MSG_ID_GLOBAL_VISION_POSITION_ESTIMATE_CRC	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	18;"	d
MAVLINK_MSG_ID_GLOBAL_VISION_POSITION_ESTIMATE_LEN	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	15;"	d
MAVLINK_MSG_ID_GPS2_RAW	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	3;"	d
MAVLINK_MSG_ID_GPS2_RAW_CRC	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	23;"	d
MAVLINK_MSG_ID_GPS2_RAW_LEN	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	20;"	d
MAVLINK_MSG_ID_GPS_GLOBAL_ORIGIN	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	3;"	d
MAVLINK_MSG_ID_GPS_GLOBAL_ORIGIN_CRC	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	14;"	d
MAVLINK_MSG_ID_GPS_GLOBAL_ORIGIN_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	11;"	d
MAVLINK_MSG_ID_GPS_INJECT_DATA	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	3;"	d
MAVLINK_MSG_ID_GPS_INJECT_DATA_CRC	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	15;"	d
MAVLINK_MSG_ID_GPS_INJECT_DATA_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	12;"	d
MAVLINK_MSG_ID_GPS_RAW_INT	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	3;"	d
MAVLINK_MSG_ID_GPS_RAW_INT_CRC	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	21;"	d
MAVLINK_MSG_ID_GPS_RAW_INT_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	18;"	d
MAVLINK_MSG_ID_GPS_STATUS	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	3;"	d
MAVLINK_MSG_ID_GPS_STATUS_CRC	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	17;"	d
MAVLINK_MSG_ID_GPS_STATUS_LEN	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	14;"	d
MAVLINK_MSG_ID_HEARTBEAT	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	3;"	d
MAVLINK_MSG_ID_HEARTBEAT_CRC	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	17;"	d
MAVLINK_MSG_ID_HEARTBEAT_LEN	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	14;"	d
MAVLINK_MSG_ID_HIGHRES_IMU	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	3;"	d
MAVLINK_MSG_ID_HIGHRES_IMU_CRC	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	26;"	d
MAVLINK_MSG_ID_HIGHRES_IMU_LEN	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	23;"	d
MAVLINK_MSG_ID_HIL_CONTROLS	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	3;"	d
MAVLINK_MSG_ID_HIL_CONTROLS_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	22;"	d
MAVLINK_MSG_ID_HIL_CONTROLS_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	19;"	d
MAVLINK_MSG_ID_HIL_GPS	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	3;"	d
MAVLINK_MSG_ID_HIL_GPS_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	24;"	d
MAVLINK_MSG_ID_HIL_GPS_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	21;"	d
MAVLINK_MSG_ID_HIL_OPTICAL_FLOW	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	3;"	d
MAVLINK_MSG_ID_HIL_OPTICAL_FLOW_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	19;"	d
MAVLINK_MSG_ID_HIL_OPTICAL_FLOW_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	16;"	d
MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	3;"	d
MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	25;"	d
MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	22;"	d
MAVLINK_MSG_ID_HIL_SENSOR	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	3;"	d
MAVLINK_MSG_ID_HIL_SENSOR_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	26;"	d
MAVLINK_MSG_ID_HIL_SENSOR_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	23;"	d
MAVLINK_MSG_ID_HIL_STATE	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	3;"	d
MAVLINK_MSG_ID_HIL_STATE_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	27;"	d
MAVLINK_MSG_ID_HIL_STATE_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	24;"	d
MAVLINK_MSG_ID_HIL_STATE_QUATERNION	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	3;"	d
MAVLINK_MSG_ID_HIL_STATE_QUATERNION_CRC	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	27;"	d
MAVLINK_MSG_ID_HIL_STATE_QUATERNION_LEN	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	24;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	3;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_CRC	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	18;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_LEN	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	15;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	3;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET_CRC	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	18;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET_LEN	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	15;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	3;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_SETPOINT_CRC	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	16;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_SETPOINT_LEN	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	13;"	d
MAVLINK_MSG_ID_LOG_DATA	lib/mavlink/1.0/common/mavlink_msg_log_data.h	3;"	d
MAVLINK_MSG_ID_LOG_DATA_CRC	lib/mavlink/1.0/common/mavlink_msg_log_data.h	15;"	d
MAVLINK_MSG_ID_LOG_DATA_LEN	lib/mavlink/1.0/common/mavlink_msg_log_data.h	12;"	d
MAVLINK_MSG_ID_LOG_ENTRY	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	3;"	d
MAVLINK_MSG_ID_LOG_ENTRY_CRC	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	16;"	d
MAVLINK_MSG_ID_LOG_ENTRY_LEN	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	13;"	d
MAVLINK_MSG_ID_LOG_ERASE	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	3;"	d
MAVLINK_MSG_ID_LOG_ERASE_CRC	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	13;"	d
MAVLINK_MSG_ID_LOG_ERASE_LEN	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	10;"	d
MAVLINK_MSG_ID_LOG_REQUEST_DATA	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	3;"	d
MAVLINK_MSG_ID_LOG_REQUEST_DATA_CRC	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	16;"	d
MAVLINK_MSG_ID_LOG_REQUEST_DATA_LEN	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	13;"	d
MAVLINK_MSG_ID_LOG_REQUEST_END	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	3;"	d
MAVLINK_MSG_ID_LOG_REQUEST_END_CRC	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	13;"	d
MAVLINK_MSG_ID_LOG_REQUEST_END_LEN	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	10;"	d
MAVLINK_MSG_ID_LOG_REQUEST_LIST	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	3;"	d
MAVLINK_MSG_ID_LOG_REQUEST_LIST_CRC	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	15;"	d
MAVLINK_MSG_ID_LOG_REQUEST_LIST_LEN	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	12;"	d
MAVLINK_MSG_ID_MANUAL_CONTROL	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	3;"	d
MAVLINK_MSG_ID_MANUAL_CONTROL_CRC	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	17;"	d
MAVLINK_MSG_ID_MANUAL_CONTROL_LEN	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	14;"	d
MAVLINK_MSG_ID_MANUAL_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	3;"	d
MAVLINK_MSG_ID_MANUAL_SETPOINT_CRC	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	18;"	d
MAVLINK_MSG_ID_MANUAL_SETPOINT_LEN	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	15;"	d
MAVLINK_MSG_ID_MEMORY_VECT	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	3;"	d
MAVLINK_MSG_ID_MEMORY_VECT_CRC	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	15;"	d
MAVLINK_MSG_ID_MEMORY_VECT_LEN	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	12;"	d
MAVLINK_MSG_ID_MISSION_ACK	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	3;"	d
MAVLINK_MSG_ID_MISSION_ACK_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	14;"	d
MAVLINK_MSG_ID_MISSION_ACK_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	11;"	d
MAVLINK_MSG_ID_MISSION_CLEAR_ALL	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	3;"	d
MAVLINK_MSG_ID_MISSION_CLEAR_ALL_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	13;"	d
MAVLINK_MSG_ID_MISSION_CLEAR_ALL_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	10;"	d
MAVLINK_MSG_ID_MISSION_COUNT	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	3;"	d
MAVLINK_MSG_ID_MISSION_COUNT_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	14;"	d
MAVLINK_MSG_ID_MISSION_COUNT_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	11;"	d
MAVLINK_MSG_ID_MISSION_CURRENT	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	3;"	d
MAVLINK_MSG_ID_MISSION_CURRENT_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	12;"	d
MAVLINK_MSG_ID_MISSION_CURRENT_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	9;"	d
MAVLINK_MSG_ID_MISSION_ITEM	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	3;"	d
MAVLINK_MSG_ID_MISSION_ITEM_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	25;"	d
MAVLINK_MSG_ID_MISSION_ITEM_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	22;"	d
MAVLINK_MSG_ID_MISSION_ITEM_REACHED	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	3;"	d
MAVLINK_MSG_ID_MISSION_ITEM_REACHED_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	12;"	d
MAVLINK_MSG_ID_MISSION_ITEM_REACHED_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	9;"	d
MAVLINK_MSG_ID_MISSION_REQUEST	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	3;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	14;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	11;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_LIST	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	3;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_LIST_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	13;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_LIST_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	10;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_PARTIAL_LIST	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	3;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_PARTIAL_LIST_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	15;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_PARTIAL_LIST_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	12;"	d
MAVLINK_MSG_ID_MISSION_SET_CURRENT	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	3;"	d
MAVLINK_MSG_ID_MISSION_SET_CURRENT_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	14;"	d
MAVLINK_MSG_ID_MISSION_SET_CURRENT_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	11;"	d
MAVLINK_MSG_ID_MISSION_WRITE_PARTIAL_LIST	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	3;"	d
MAVLINK_MSG_ID_MISSION_WRITE_PARTIAL_LIST_CRC	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	15;"	d
MAVLINK_MSG_ID_MISSION_WRITE_PARTIAL_LIST_LEN	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	12;"	d
MAVLINK_MSG_ID_NAMED_VALUE_FLOAT	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	3;"	d
MAVLINK_MSG_ID_NAMED_VALUE_FLOAT_CRC	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	14;"	d
MAVLINK_MSG_ID_NAMED_VALUE_FLOAT_LEN	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	11;"	d
MAVLINK_MSG_ID_NAMED_VALUE_INT	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	3;"	d
MAVLINK_MSG_ID_NAMED_VALUE_INT_CRC	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	14;"	d
MAVLINK_MSG_ID_NAMED_VALUE_INT_LEN	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	11;"	d
MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	3;"	d
MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT_CRC	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	19;"	d
MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT_LEN	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	16;"	d
MAVLINK_MSG_ID_OMNIDIRECTIONAL_FLOW	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	3;"	d
MAVLINK_MSG_ID_OMNIDIRECTIONAL_FLOW_CRC	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	17;"	d
MAVLINK_MSG_ID_OMNIDIRECTIONAL_FLOW_LEN	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	14;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	3;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW_CRC	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	19;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW_LEN	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	16;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_LIST	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	3;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_LIST_CRC	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	13;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_LIST_LEN	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	10;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_READ	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	3;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_READ_CRC	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	15;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_READ_LEN	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	12;"	d
MAVLINK_MSG_ID_PARAM_SET	lib/mavlink/1.0/common/mavlink_msg_param_set.h	3;"	d
MAVLINK_MSG_ID_PARAM_SET_CRC	lib/mavlink/1.0/common/mavlink_msg_param_set.h	16;"	d
MAVLINK_MSG_ID_PARAM_SET_LEN	lib/mavlink/1.0/common/mavlink_msg_param_set.h	13;"	d
MAVLINK_MSG_ID_PARAM_VALUE	lib/mavlink/1.0/common/mavlink_msg_param_value.h	3;"	d
MAVLINK_MSG_ID_PARAM_VALUE_CRC	lib/mavlink/1.0/common/mavlink_msg_param_value.h	16;"	d
MAVLINK_MSG_ID_PARAM_VALUE_LEN	lib/mavlink/1.0/common/mavlink_msg_param_value.h	13;"	d
MAVLINK_MSG_ID_PING	lib/mavlink/1.0/common/mavlink_msg_ping.h	3;"	d
MAVLINK_MSG_ID_PING_CRC	lib/mavlink/1.0/common/mavlink_msg_ping.h	15;"	d
MAVLINK_MSG_ID_PING_LEN	lib/mavlink/1.0/common/mavlink_msg_ping.h	12;"	d
MAVLINK_MSG_ID_POWER_STATUS	lib/mavlink/1.0/common/mavlink_msg_power_status.h	3;"	d
MAVLINK_MSG_ID_POWER_STATUS_CRC	lib/mavlink/1.0/common/mavlink_msg_power_status.h	14;"	d
MAVLINK_MSG_ID_POWER_STATUS_LEN	lib/mavlink/1.0/common/mavlink_msg_power_status.h	11;"	d
MAVLINK_MSG_ID_RADIO_STATUS	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	3;"	d
MAVLINK_MSG_ID_RADIO_STATUS_CRC	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	18;"	d
MAVLINK_MSG_ID_RADIO_STATUS_LEN	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	15;"	d
MAVLINK_MSG_ID_RAW_IMU	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	3;"	d
MAVLINK_MSG_ID_RAW_IMU_CRC	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	21;"	d
MAVLINK_MSG_ID_RAW_IMU_LEN	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	18;"	d
MAVLINK_MSG_ID_RAW_PRESSURE	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	3;"	d
MAVLINK_MSG_ID_RAW_PRESSURE_CRC	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	16;"	d
MAVLINK_MSG_ID_RAW_PRESSURE_LEN	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	13;"	d
MAVLINK_MSG_ID_RC_CHANNELS	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	3;"	d
MAVLINK_MSG_ID_RC_CHANNELS_CRC	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	32;"	d
MAVLINK_MSG_ID_RC_CHANNELS_LEN	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	29;"	d
MAVLINK_MSG_ID_RC_CHANNELS_OVERRIDE	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	3;"	d
MAVLINK_MSG_ID_RC_CHANNELS_OVERRIDE_CRC	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	21;"	d
MAVLINK_MSG_ID_RC_CHANNELS_OVERRIDE_LEN	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	18;"	d
MAVLINK_MSG_ID_RC_CHANNELS_RAW	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	3;"	d
MAVLINK_MSG_ID_RC_CHANNELS_RAW_CRC	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	22;"	d
MAVLINK_MSG_ID_RC_CHANNELS_RAW_LEN	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	19;"	d
MAVLINK_MSG_ID_RC_CHANNELS_SCALED	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	3;"	d
MAVLINK_MSG_ID_RC_CHANNELS_SCALED_CRC	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	22;"	d
MAVLINK_MSG_ID_RC_CHANNELS_SCALED_LEN	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	19;"	d
MAVLINK_MSG_ID_REQUEST_DATA_STREAM	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	3;"	d
MAVLINK_MSG_ID_REQUEST_DATA_STREAM_CRC	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	16;"	d
MAVLINK_MSG_ID_REQUEST_DATA_STREAM_LEN	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	13;"	d
MAVLINK_MSG_ID_ROLL_PITCH_YAW_RATES_THRUST_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	3;"	d
MAVLINK_MSG_ID_ROLL_PITCH_YAW_RATES_THRUST_SETPOINT_CRC	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	16;"	d
MAVLINK_MSG_ID_ROLL_PITCH_YAW_RATES_THRUST_SETPOINT_LEN	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	13;"	d
MAVLINK_MSG_ID_ROLL_PITCH_YAW_SPEED_THRUST_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	3;"	d
MAVLINK_MSG_ID_ROLL_PITCH_YAW_SPEED_THRUST_SETPOINT_CRC	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	16;"	d
MAVLINK_MSG_ID_ROLL_PITCH_YAW_SPEED_THRUST_SETPOINT_LEN	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	13;"	d
MAVLINK_MSG_ID_ROLL_PITCH_YAW_THRUST_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	3;"	d
MAVLINK_MSG_ID_ROLL_PITCH_YAW_THRUST_SETPOINT_CRC	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	16;"	d
MAVLINK_MSG_ID_ROLL_PITCH_YAW_THRUST_SETPOINT_LEN	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	13;"	d
MAVLINK_MSG_ID_SAFETY_ALLOWED_AREA	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	3;"	d
MAVLINK_MSG_ID_SAFETY_ALLOWED_AREA_CRC	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	18;"	d
MAVLINK_MSG_ID_SAFETY_ALLOWED_AREA_LEN	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	15;"	d
MAVLINK_MSG_ID_SAFETY_SET_ALLOWED_AREA	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	3;"	d
MAVLINK_MSG_ID_SAFETY_SET_ALLOWED_AREA_CRC	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	20;"	d
MAVLINK_MSG_ID_SAFETY_SET_ALLOWED_AREA_LEN	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	17;"	d
MAVLINK_MSG_ID_SCALED_IMU	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	3;"	d
MAVLINK_MSG_ID_SCALED_IMU2	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	3;"	d
MAVLINK_MSG_ID_SCALED_IMU2_CRC	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	21;"	d
MAVLINK_MSG_ID_SCALED_IMU2_LEN	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	18;"	d
MAVLINK_MSG_ID_SCALED_IMU_CRC	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	21;"	d
MAVLINK_MSG_ID_SCALED_IMU_LEN	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	18;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	3;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE_CRC	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	15;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE_LEN	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	12;"	d
MAVLINK_MSG_ID_SERIAL_CONTROL	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	3;"	d
MAVLINK_MSG_ID_SERIAL_CONTROL_CRC	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	17;"	d
MAVLINK_MSG_ID_SERIAL_CONTROL_LEN	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	14;"	d
MAVLINK_MSG_ID_SERVO_OUTPUT_RAW	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	3;"	d
MAVLINK_MSG_ID_SERVO_OUTPUT_RAW_CRC	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	21;"	d
MAVLINK_MSG_ID_SERVO_OUTPUT_RAW_LEN	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	18;"	d
MAVLINK_MSG_ID_SETPOINT_6DOF	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	3;"	d
MAVLINK_MSG_ID_SETPOINT_6DOF_CRC	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	18;"	d
MAVLINK_MSG_ID_SETPOINT_6DOF_LEN	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	15;"	d
MAVLINK_MSG_ID_SETPOINT_8DOF	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	3;"	d
MAVLINK_MSG_ID_SETPOINT_8DOF_CRC	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	20;"	d
MAVLINK_MSG_ID_SETPOINT_8DOF_LEN	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	17;"	d
MAVLINK_MSG_ID_SET_GLOBAL_POSITION_SETPOINT_INT	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	3;"	d
MAVLINK_MSG_ID_SET_GLOBAL_POSITION_SETPOINT_INT_CRC	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	16;"	d
MAVLINK_MSG_ID_SET_GLOBAL_POSITION_SETPOINT_INT_LEN	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	13;"	d
MAVLINK_MSG_ID_SET_GPS_GLOBAL_ORIGIN	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	3;"	d
MAVLINK_MSG_ID_SET_GPS_GLOBAL_ORIGIN_CRC	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	15;"	d
MAVLINK_MSG_ID_SET_GPS_GLOBAL_ORIGIN_LEN	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	12;"	d
MAVLINK_MSG_ID_SET_LOCAL_POSITION_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	3;"	d
MAVLINK_MSG_ID_SET_LOCAL_POSITION_SETPOINT_CRC	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	18;"	d
MAVLINK_MSG_ID_SET_LOCAL_POSITION_SETPOINT_LEN	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	15;"	d
MAVLINK_MSG_ID_SET_MODE	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	3;"	d
MAVLINK_MSG_ID_SET_MODE_CRC	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	14;"	d
MAVLINK_MSG_ID_SET_MODE_LEN	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	11;"	d
MAVLINK_MSG_ID_SET_QUAD_MOTORS_SETPOINT	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	3;"	d
MAVLINK_MSG_ID_SET_QUAD_MOTORS_SETPOINT_CRC	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	16;"	d
MAVLINK_MSG_ID_SET_QUAD_MOTORS_SETPOINT_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	13;"	d
MAVLINK_MSG_ID_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	3;"	d
MAVLINK_MSG_ID_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST_CRC	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	20;"	d
MAVLINK_MSG_ID_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	17;"	d
MAVLINK_MSG_ID_SET_QUAD_SWARM_ROLL_PITCH_YAW_THRUST	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	3;"	d
MAVLINK_MSG_ID_SET_QUAD_SWARM_ROLL_PITCH_YAW_THRUST_CRC	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	17;"	d
MAVLINK_MSG_ID_SET_QUAD_SWARM_ROLL_PITCH_YAW_THRUST_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	14;"	d
MAVLINK_MSG_ID_SET_ROLL_PITCH_YAW_SPEED_THRUST	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	3;"	d
MAVLINK_MSG_ID_SET_ROLL_PITCH_YAW_SPEED_THRUST_CRC	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	17;"	d
MAVLINK_MSG_ID_SET_ROLL_PITCH_YAW_SPEED_THRUST_LEN	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	14;"	d
MAVLINK_MSG_ID_SET_ROLL_PITCH_YAW_THRUST	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	3;"	d
MAVLINK_MSG_ID_SET_ROLL_PITCH_YAW_THRUST_CRC	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	17;"	d
MAVLINK_MSG_ID_SET_ROLL_PITCH_YAW_THRUST_LEN	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	14;"	d
MAVLINK_MSG_ID_SIM_STATE	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	3;"	d
MAVLINK_MSG_ID_SIM_STATE_CRC	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	32;"	d
MAVLINK_MSG_ID_SIM_STATE_LEN	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	29;"	d
MAVLINK_MSG_ID_STATE_CORRECTION	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	3;"	d
MAVLINK_MSG_ID_STATE_CORRECTION_CRC	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	20;"	d
MAVLINK_MSG_ID_STATE_CORRECTION_LEN	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	17;"	d
MAVLINK_MSG_ID_STATUSTEXT	lib/mavlink/1.0/common/mavlink_msg_statustext.h	3;"	d
MAVLINK_MSG_ID_STATUSTEXT_CRC	lib/mavlink/1.0/common/mavlink_msg_statustext.h	13;"	d
MAVLINK_MSG_ID_STATUSTEXT_LEN	lib/mavlink/1.0/common/mavlink_msg_statustext.h	10;"	d
MAVLINK_MSG_ID_SYSTEM_TIME	lib/mavlink/1.0/common/mavlink_msg_system_time.h	3;"	d
MAVLINK_MSG_ID_SYSTEM_TIME_CRC	lib/mavlink/1.0/common/mavlink_msg_system_time.h	13;"	d
MAVLINK_MSG_ID_SYSTEM_TIME_LEN	lib/mavlink/1.0/common/mavlink_msg_system_time.h	10;"	d
MAVLINK_MSG_ID_SYS_STATUS	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	3;"	d
MAVLINK_MSG_ID_SYS_STATUS_CRC	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	24;"	d
MAVLINK_MSG_ID_SYS_STATUS_LEN	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	21;"	d
MAVLINK_MSG_ID_VFR_HUD	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	3;"	d
MAVLINK_MSG_ID_VFR_HUD_CRC	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	17;"	d
MAVLINK_MSG_ID_VFR_HUD_LEN	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	14;"	d
MAVLINK_MSG_ID_VICON_POSITION_ESTIMATE	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	3;"	d
MAVLINK_MSG_ID_VICON_POSITION_ESTIMATE_CRC	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	18;"	d
MAVLINK_MSG_ID_VICON_POSITION_ESTIMATE_LEN	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	15;"	d
MAVLINK_MSG_ID_VISION_POSITION_ESTIMATE	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	3;"	d
MAVLINK_MSG_ID_VISION_POSITION_ESTIMATE_CRC	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	18;"	d
MAVLINK_MSG_ID_VISION_POSITION_ESTIMATE_LEN	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	15;"	d
MAVLINK_MSG_ID_VISION_SPEED_ESTIMATE	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	3;"	d
MAVLINK_MSG_ID_VISION_SPEED_ESTIMATE_CRC	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	15;"	d
MAVLINK_MSG_ID_VISION_SPEED_ESTIMATE_LEN	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	12;"	d
MAVLINK_MSG_LOG_DATA_FIELD_DATA_LEN	lib/mavlink/1.0/common/mavlink_msg_log_data.h	18;"	d
MAVLINK_MSG_MEMORY_VECT_FIELD_VALUE_LEN	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	18;"	d
MAVLINK_MSG_NAMED_VALUE_FLOAT_FIELD_NAME_LEN	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	17;"	d
MAVLINK_MSG_NAMED_VALUE_INT_FIELD_NAME_LEN	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	17;"	d
MAVLINK_MSG_OMNIDIRECTIONAL_FLOW_FIELD_LEFT_LEN	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	20;"	d
MAVLINK_MSG_OMNIDIRECTIONAL_FLOW_FIELD_RIGHT_LEN	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	21;"	d
MAVLINK_MSG_PARAM_REQUEST_READ_FIELD_PARAM_ID_LEN	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	18;"	d
MAVLINK_MSG_PARAM_SET_FIELD_PARAM_ID_LEN	lib/mavlink/1.0/common/mavlink_msg_param_set.h	19;"	d
MAVLINK_MSG_PARAM_VALUE_FIELD_PARAM_ID_LEN	lib/mavlink/1.0/common/mavlink_msg_param_value.h	19;"	d
MAVLINK_MSG_SERIAL_CONTROL_FIELD_DATA_LEN	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	20;"	d
MAVLINK_MSG_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST_FIELD_LED_BLUE_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	28;"	d
MAVLINK_MSG_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST_FIELD_LED_GREEN_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	29;"	d
MAVLINK_MSG_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST_FIELD_LED_RED_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	27;"	d
MAVLINK_MSG_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST_FIELD_PITCH_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	24;"	d
MAVLINK_MSG_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST_FIELD_ROLL_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	23;"	d
MAVLINK_MSG_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST_FIELD_THRUST_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	26;"	d
MAVLINK_MSG_SET_QUAD_SWARM_LED_ROLL_PITCH_YAW_THRUST_FIELD_YAW_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	25;"	d
MAVLINK_MSG_SET_QUAD_SWARM_ROLL_PITCH_YAW_THRUST_FIELD_PITCH_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	21;"	d
MAVLINK_MSG_SET_QUAD_SWARM_ROLL_PITCH_YAW_THRUST_FIELD_ROLL_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	20;"	d
MAVLINK_MSG_SET_QUAD_SWARM_ROLL_PITCH_YAW_THRUST_FIELD_THRUST_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	23;"	d
MAVLINK_MSG_SET_QUAD_SWARM_ROLL_PITCH_YAW_THRUST_FIELD_YAW_LEN	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	22;"	d
MAVLINK_MSG_STATUSTEXT_FIELD_TEXT_LEN	lib/mavlink/1.0/common/mavlink_msg_statustext.h	16;"	d
MAVLINK_NEED_BYTE_SWAP	lib/mavlink/1.0/protocol.h	12;"	d
MAVLINK_NEED_BYTE_SWAP	lib/mavlink/1.0/protocol.h	14;"	d
MAVLINK_NUM_CHECKSUM_BYTES	lib/mavlink/1.0/mavlink_types.h	13;"	d
MAVLINK_NUM_HEADER_BYTES	lib/mavlink/1.0/mavlink_types.h	12;"	d
MAVLINK_NUM_NON_PAYLOAD_BYTES	lib/mavlink/1.0/mavlink_types.h	14;"	d
MAVLINK_PARSE_STATE_GOT_COMPID	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_COMPID,$/;"	e	enum:__anon4
MAVLINK_PARSE_STATE_GOT_CRC1	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_CRC1$/;"	e	enum:__anon4
MAVLINK_PARSE_STATE_GOT_LENGTH	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_LENGTH,$/;"	e	enum:__anon4
MAVLINK_PARSE_STATE_GOT_MSGID	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_MSGID,$/;"	e	enum:__anon4
MAVLINK_PARSE_STATE_GOT_PAYLOAD	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_PAYLOAD,$/;"	e	enum:__anon4
MAVLINK_PARSE_STATE_GOT_SEQ	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_SEQ,$/;"	e	enum:__anon4
MAVLINK_PARSE_STATE_GOT_STX	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_STX,$/;"	e	enum:__anon4
MAVLINK_PARSE_STATE_GOT_SYSID	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_SYSID,$/;"	e	enum:__anon4
MAVLINK_PARSE_STATE_IDLE	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_IDLE,$/;"	e	enum:__anon4
MAVLINK_PARSE_STATE_UNINIT	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_PARSE_STATE_UNINIT = 0,$/;"	e	enum:__anon4
MAVLINK_STACK_BUFFER	lib/mavlink/1.0/protocol.h	18;"	d
MAVLINK_START_UART_SEND	lib/mavlink/1.0/protocol.h	30;"	d
MAVLINK_STX	lib/mavlink/1.0/common/mavlink.h	9;"	d
MAVLINK_TYPES_H_	lib/mavlink/1.0/mavlink_types.h	2;"	d
MAVLINK_TYPE_CHAR	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_CHAR = 0,$/;"	e	enum:__anon2
MAVLINK_TYPE_DOUBLE	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_DOUBLE = 10$/;"	e	enum:__anon2
MAVLINK_TYPE_FLOAT	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_FLOAT = 9,$/;"	e	enum:__anon2
MAVLINK_TYPE_INT16_T	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_INT16_T = 4,$/;"	e	enum:__anon2
MAVLINK_TYPE_INT32_T	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_INT32_T = 6,$/;"	e	enum:__anon2
MAVLINK_TYPE_INT64_T	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_INT64_T = 8,$/;"	e	enum:__anon2
MAVLINK_TYPE_INT8_T	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_INT8_T = 2,$/;"	e	enum:__anon2
MAVLINK_TYPE_UINT16_T	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_UINT16_T = 3,$/;"	e	enum:__anon2
MAVLINK_TYPE_UINT32_T	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_UINT32_T = 5,$/;"	e	enum:__anon2
MAVLINK_TYPE_UINT64_T	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_UINT64_T = 7,$/;"	e	enum:__anon2
MAVLINK_TYPE_UINT8_T	lib/mavlink/1.0/mavlink_types.h	/^    MAVLINK_TYPE_UINT8_T = 1,$/;"	e	enum:__anon2
MAVLINK_VERSION	lib/mavlink/1.0/common/common.h	518;"	d
MAVLINK_VERSION	lib/mavlink/1.0/common/common.h	522;"	d
MAVLINK_VERSION	lib/mavlink/1.0/common/common.h	523;"	d
MAVLINK_VERSION_H	lib/mavlink/1.0/common/version.h	6;"	d
MAVLINK_WIRE_PROTOCOL_VERSION	lib/mavlink/1.0/common/version.h	9;"	d
MAV_AUTOPILOT	lib/mavlink/1.0/common/common.h	/^enum MAV_AUTOPILOT {$/;"	g
MAV_AUTOPILOT_AEROB	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_AEROB = 16, \/* Aerob -- http:\/\/aerob.ru | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_ARDUPILOTMEGA	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_ARDUPILOTMEGA = 3, \/* ArduPilotMega \/ ArduCopter, http:\/\/diydrones.com | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_ARMAZILA	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_ARMAZILA = 15, \/* Armazila -- http:\/\/armazila.com | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_AUTOQUAD	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_AUTOQUAD = 14, \/* AutoQuad -- http:\/\/autoquad.org | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_ENUM_END = 17, \/*  | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_FP	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_FP = 11, \/* FlexiPilot | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_GENERIC	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_GENERIC = 0, \/* Generic autopilot, full support for everything | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_GENERIC_MISSION_FULL	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_GENERIC_MISSION_FULL = 7, \/* Generic autopilot supporting the full mission command set | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY = 6, \/* Generic autopilot supporting waypoints and other simple navigation commands | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY = 5, \/* Generic autopilot only supporting simple waypoints | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_INVALID	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_INVALID = 8, \/* No valid autopilot, e.g. a GCS or other MAVLink component | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_OPENPILOT	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_OPENPILOT = 4, \/* OpenPilot, http:\/\/openpilot.org | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_PIXHAWK	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_PIXHAWK = 1, \/* PIXHAWK autopilot, http:\/\/pixhawk.ethz.ch | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_PPZ	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_PPZ = 9, \/* PPZ UAV - http:\/\/nongnu.org\/paparazzi | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_PX4	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_PX4 = 12, \/* PX4 Autopilot - http:\/\/pixhawk.ethz.ch\/px4\/ | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_SLUGS	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_SLUGS = 2, \/* SLUGS autopilot, http:\/\/slugsuav.soe.ucsc.edu | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_SMACCMPILOT	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_SMACCMPILOT = 13, \/* SMACCMPilot - http:\/\/smaccmpilot.org | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_UDB	lib/mavlink/1.0/common/common.h	/^    MAV_AUTOPILOT_UDB = 10, \/* UAV Dev Board | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_CMD	lib/mavlink/1.0/common/common.h	/^enum MAV_CMD {$/;"	g
MAV_CMD_ACK	lib/mavlink/1.0/common/common.h	/^enum MAV_CMD_ACK {$/;"	g
MAV_CMD_ACK_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_ENUM_END = 10, \/*  | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_ACCESS_DENIED	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_ERR_ACCESS_DENIED = 3, \/* The system is refusing to accept this command from this source \/ communication partner. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_COORDINATES_OUT_OF_RANGE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_ERR_COORDINATES_OUT_OF_RANGE = 6, \/* The coordinate frame of this command is ok, but he coordinate values exceed the safety limits of this system. This is a generic error, please use the more specific error messages below if possible. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_COORDINATE_FRAME_NOT_SUPPORTED	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_ERR_COORDINATE_FRAME_NOT_SUPPORTED = 5, \/* The coordinate frame of this command \/ mission item is not supported. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_FAIL	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_ERR_FAIL = 2, \/* Generic error message if none of the other reasons fails or if no detailed error reporting is implemented. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_NOT_SUPPORTED	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_ERR_NOT_SUPPORTED = 4, \/* Command or mission item is not supported, other commands would be accepted. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_X_LAT_OUT_OF_RANGE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_ERR_X_LAT_OUT_OF_RANGE = 7, \/* The X or latitude value is out of range. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_Y_LON_OUT_OF_RANGE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_ERR_Y_LON_OUT_OF_RANGE = 8, \/* The Y or longitude value is out of range. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_Z_ALT_OUT_OF_RANGE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_ERR_Z_ALT_OUT_OF_RANGE = 9, \/* The Z or altitude value is out of range. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_OK	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ACK_OK = 1, \/* Command \/ mission item is ok. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_COMPONENT_ARM_DISARM	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_COMPONENT_ARM_DISARM = 400, \/* Arms \/ Disarms a component |1 to arm, 0 to disarm|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_CHANGE_ALT	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_CONDITION_CHANGE_ALT = 113, \/* Ascend\/descend at rate.  Delay mission state machine until desired altitude reached. |Descent \/ Ascend rate (m\/s)| Empty| Empty| Empty| Empty| Empty| Finish Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_DELAY	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_CONDITION_DELAY = 112, \/* Delay mission state machine. |Delay in seconds (decimal)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_DISTANCE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_CONDITION_DISTANCE = 114, \/* Delay mission state machine until within desired distance of next NAV point. |Distance (meters)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_LAST	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_CONDITION_LAST = 159, \/* NOP - This command is only used to mark the upper limit of the CONDITION commands in the enumeration |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_YAW	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_CONDITION_YAW = 115, \/* Reach a certain target angle. |target angle: [0-360], 0 is north| speed during yaw change:[deg per second]| direction: negative: counter clockwise, positive: clockwise [-1,1]| relative offset or absolute angle: [ 1,0]| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_CHANGE_SPEED	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_CHANGE_SPEED = 178, \/* Change speed and\/or throttle set points. |Speed type (0=Airspeed, 1=Ground Speed)| Speed  (m\/s, -1 indicates no change)| Throttle  ( Percent, -1 indicates no change)| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_CONTROL_VIDEO	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_CONTROL_VIDEO = 200, \/* Control onboard camera system. |Camera ID (-1 for all)| Transmission: 0: disabled, 1: enabled compressed, 2: enabled raw| Transmission mode: 0: video stream, >0: single images every n seconds (decimal)| Recording: 0: disabled, 1: enabled compressed, 2: enabled raw| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_DIGICAM_CONFIGURE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_DIGICAM_CONFIGURE = 202, \/* Mission command to configure an on-board camera controller system. |Modes: P, TV, AV, M, Etc| Shutter speed: Divisor number for one second| Aperture: F stop number| ISO number e.g. 80, 100, 200, Etc| Exposure type enumerator| Command Identity| Main engine cut-off time before camera trigger in seconds\/10 (0 means no cut-off)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_DIGICAM_CONTROL	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_DIGICAM_CONTROL = 203, \/* Mission command to control an on-board camera controller system. |Session control e.g. show\/hide lens| Zoom's absolute position| Zooming step value to offset zoom from the current position| Focus Locking, Unlocking or Re-locking| Shooting Command| Command Identity| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_FENCE_ENABLE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_FENCE_ENABLE = 207, \/* Mission command to enable the geofence |enable? (0=disable, 1=enable)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_JUMP	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_JUMP = 177, \/* Jump to the desired command in the mission list.  Repeat this action only the specified number of times |Sequence number| Repeat count| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_LAST	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_LAST = 240, \/* NOP - This command is only used to mark the upper limit of the DO commands in the enumeration |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_MOUNT_CONFIGURE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_MOUNT_CONFIGURE = 204, \/* Mission command to configure a camera or antenna mount |Mount operation mode (see MAV_MOUNT_MODE enum)| stabilize roll? (1 = yes, 0 = no)| stabilize pitch? (1 = yes, 0 = no)| stabilize yaw? (1 = yes, 0 = no)| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_MOUNT_CONTROL	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_MOUNT_CONTROL = 205, \/* Mission command to control a camera or antenna mount |pitch or lat in degrees, depending on mount mode.| roll or lon in degrees depending on mount mode| yaw or alt (in meters) depending on mount mode| reserved| reserved| reserved| MAV_MOUNT_MODE enum value|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_MOUNT_CONTROL_QUAT	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_MOUNT_CONTROL_QUAT = 220, \/* Mission command to control a camera or antenna mount, using a quaternion as reference. |q1 - quaternion param #1| q2 - quaternion param #2| q3 - quaternion param #3| q4 - quaternion param #4| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_PARACHUTE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_PARACHUTE = 208, \/* Mission command to trigger a parachute |action (0=disable, 1=enable, 2=release, for some systems see PARACHUTE_ACTION enum, not in general message set.)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_REPEAT_RELAY	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_REPEAT_RELAY = 182, \/* Cycle a relay on and off for a desired number of cyles with a desired period. |Relay number| Cycle count| Cycle time (seconds, decimal)| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_REPEAT_SERVO	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_REPEAT_SERVO = 184, \/* Cycle a between its nominal setting and a desired PWM for a desired number of cycles with a desired period. |Servo number| PWM (microseconds, 1000 to 2000 typical)| Cycle count| Cycle time (seconds)| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_CAM_TRIGG_DIST	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_SET_CAM_TRIGG_DIST = 206, \/* Mission command to set CAM_TRIGG_DIST for this flight |Camera trigger distance (meters)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_HOME	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_SET_HOME = 179, \/* Changes the home location either to the current location or a specified location. |Use current (1=use current location, 0=use specified location)| Empty| Empty| Empty| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_MODE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_SET_MODE = 176, \/* Set system mode. |Mode, as defined by ENUM MAV_MODE| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_PARAMETER	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_SET_PARAMETER = 180, \/* Set a system parameter.  Caution!  Use of this command requires knowledge of the numeric enumeration value of the parameter. |Parameter number| Parameter value| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_RELAY	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_SET_RELAY = 181, \/* Set a relay to a condition. |Relay number| Setting (1=on, 0=off, others possible depending on system hardware)| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_ROI	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_SET_ROI = 201, \/* Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras. |Region of intereset mode. (see MAV_ROI enum)| MISSION index\/ target ID. (see MAV_ROI enum)| ROI index (allows a vehicle to manage multiple ROI's)| Empty| x the location of the fixed ROI (see MAV_FRAME)| y| z|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_SERVO	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_DO_SET_SERVO = 183, \/* Set a servo to a desired PWM value. |Servo number| PWM (microseconds, 1000 to 2000 typical)| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_ENUM_END = 501, \/*  | *\/$/;"	e	enum:MAV_CMD
MAV_CMD_MISSION_START	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_MISSION_START = 300, \/* start running a mission |first_item: the first mission item to run| last_item:  the last mission item to run (after this item is run, the mission ends)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LAND	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_LAND = 21, \/* Land at location |Empty| Empty| Empty| Desired yaw angle.| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LAST	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_LAST = 95, \/* NOP - This command is only used to mark the upper limit of the NAV\/ACTION commands in the enumeration |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LOITER_TIME	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_LOITER_TIME = 19, \/* Loiter around this MISSION for X seconds |Seconds (decimal)| Empty| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LOITER_TURNS	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_LOITER_TURNS = 18, \/* Loiter around this MISSION for X turns |Turns| Empty| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LOITER_UNLIM	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_LOITER_UNLIM = 17, \/* Loiter around this MISSION an unlimited amount of time |Empty| Empty| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_PATHPLANNING	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_PATHPLANNING = 81, \/* Control autonomous path planning on the MAV. |0: Disable local obstacle avoidance \/ local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning| 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map\/occupancy grid, 3: Enable and reset planned route, but not occupancy grid| Empty| Yaw angle at goal, in compass degrees, [0..360]| Latitude\/X of goal| Longitude\/Y of goal| Altitude\/Z of goal|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_RETURN_TO_LAUNCH	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_RETURN_TO_LAUNCH = 20, \/* Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_ROI	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_ROI = 80, \/* Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras. |Region of intereset mode. (see MAV_ROI enum)| MISSION index\/ target ID. (see MAV_ROI enum)| ROI index (allows a vehicle to manage multiple ROI's)| Empty| x the location of the fixed ROI (see MAV_FRAME)| y| z|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_SPLINE_WAYPOINT	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_SPLINE_WAYPOINT = 82, \/* Navigate to MISSION using a spline path. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Empty| Empty| Empty| Latitude\/X of goal| Longitude\/Y of goal| Altitude\/Z of goal|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_TAKEOFF	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_TAKEOFF = 22, \/* Takeoff from ground \/ hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_WAYPOINT	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_NAV_WAYPOINT = 16, \/* Navigate to MISSION. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Acceptance radius in meters (if the sphere with this radius is hit, the MISSION counts as reached)| 0 to pass through the WP, if > 0 radius in meters to pass by WP. Positive value for clockwise orbit, negative value for counter-clockwise orbit. Allows trajectory control.| Desired yaw angle at MISSION (rotary wing)| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_OVERRIDE_GOTO	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_OVERRIDE_GOTO = 252, \/* Hold \/ continue the current action |MAV_GOTO_DO_HOLD: hold MAV_GOTO_DO_CONTINUE: continue with next item in mission plan| MAV_GOTO_HOLD_AT_CURRENT_POSITION: Hold at current position MAV_GOTO_HOLD_AT_SPECIFIED_POSITION: hold at specified position| MAV_FRAME coordinate frame of hold point| Desired yaw angle in degrees| Latitude \/ X position| Longitude \/ Y position| Altitude \/ Z position|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PREFLIGHT_CALIBRATION	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_PREFLIGHT_CALIBRATION = 241, \/* Trigger calibration. This command will be only accepted if in pre-flight mode. |Gyro calibration: 0: no, 1: yes| Magnetometer calibration: 0: no, 1: yes| Ground pressure: 0: no, 1: yes| Radio calibration: 0: no, 1: yes| Accelerometer calibration: 0: no, 1: yes| Compass\/Motor interference calibration: 0: no, 1: yes| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN = 246, \/* Request the reboot or shutdown of system components. |0: Do nothing for autopilot, 1: Reboot autopilot, 2: Shutdown autopilot.| 0: Do nothing for onboard computer, 1: Reboot onboard computer, 2: Shutdown onboard computer.| Reserved| Reserved| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS = 242, \/* Set sensor offsets. This command will be only accepted if in pre-flight mode. |Sensor to adjust the offsets for: 0: gyros, 1: accelerometer, 2: magnetometer, 3: barometer, 4: optical flow| X axis offset (or generic dimension 1), in the sensor's raw units| Y axis offset (or generic dimension 2), in the sensor's raw units| Z axis offset (or generic dimension 3), in the sensor's raw units| Generic dimension 4, in the sensor's raw units| Generic dimension 5, in the sensor's raw units| Generic dimension 6, in the sensor's raw units|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PREFLIGHT_STORAGE	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_PREFLIGHT_STORAGE = 245, \/* Request storage of different parameter values and logs. This command will be only accepted if in pre-flight mode. |Parameter storage: 0: READ FROM FLASH\/EEPROM, 1: WRITE CURRENT TO FLASH\/EEPROM| Mission storage: 0: READ FROM FLASH\/EEPROM, 1: WRITE CURRENT TO FLASH\/EEPROM| Reserved| Reserved| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_START_RX_PAIR	lib/mavlink/1.0/common/common.h	/^    MAV_CMD_START_RX_PAIR = 500, \/* Starts receiver pairing |0:Spektrum| 0:Spektrum DSM2, 1:Spektrum DSMX|  *\/$/;"	e	enum:MAV_CMD
MAV_COMPONENT	lib/mavlink/1.0/common/common.h	/^enum MAV_COMPONENT {$/;"	g
MAV_COMPONENT_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_COMPONENT_ENUM_END = 251, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_ALL	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_ALL = 0, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_CAMERA	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_CAMERA = 100, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_GPS	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_GPS = 220, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_IMU	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_IMU = 200, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_IMU_2	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_IMU_2 = 201, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_IMU_3	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_IMU_3 = 202, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_MAPPER	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_MAPPER = 180, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_MISSIONPLANNER	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_MISSIONPLANNER = 190, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_PATHPLANNER	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_PATHPLANNER = 195, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO1	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO1 = 140, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO10	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO10 = 149, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO11	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO11 = 150, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO12	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO12 = 151, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO13	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO13 = 152, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO14	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO14 = 153, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO2	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO2 = 141, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO3	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO3 = 142, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO4	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO4 = 143, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO5	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO5 = 144, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO6	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO6 = 145, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO7	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO7 = 146, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO8	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO8 = 147, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO9	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SERVO9 = 148, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SYSTEM_CONTROL	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_SYSTEM_CONTROL = 250, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_UART_BRIDGE	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_UART_BRIDGE = 241, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_UDP_BRIDGE	lib/mavlink/1.0/common/common.h	/^    MAV_COMP_ID_UDP_BRIDGE = 240, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_DATA_STREAM	lib/mavlink/1.0/common/common.h	/^enum MAV_DATA_STREAM {$/;"	g
MAV_DATA_STREAM_ALL	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_ALL = 0, \/* Enable all data streams | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_ENUM_END = 13, \/*  | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_EXTENDED_STATUS	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_EXTENDED_STATUS = 2, \/* Enable GPS_STATUS, CONTROL_STATUS, AUX_STATUS | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_EXTRA1	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_EXTRA1 = 10, \/* Dependent on the autopilot | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_EXTRA2	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_EXTRA2 = 11, \/* Dependent on the autopilot | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_EXTRA3	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_EXTRA3 = 12, \/* Dependent on the autopilot | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_POSITION	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_POSITION = 6, \/* Enable LOCAL_POSITION, GLOBAL_POSITION\/GLOBAL_POSITION_INT messages. | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_RAW_CONTROLLER	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_RAW_CONTROLLER = 4, \/* Enable ATTITUDE_CONTROLLER_OUTPUT, POSITION_CONTROLLER_OUTPUT, NAV_CONTROLLER_OUTPUT. | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_RAW_SENSORS	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_RAW_SENSORS = 1, \/* Enable IMU_RAW, GPS_RAW, GPS_STATUS packets. | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_RC_CHANNELS	lib/mavlink/1.0/common/common.h	/^    MAV_DATA_STREAM_RC_CHANNELS = 3, \/* Enable RC_CHANNELS_SCALED, RC_CHANNELS_RAW, SERVO_OUTPUT_RAW | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DISTANCE_SENSOR	lib/mavlink/1.0/common/common.h	/^enum MAV_DISTANCE_SENSOR {$/;"	g
MAV_DISTANCE_SENSOR_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_DISTANCE_SENSOR_ENUM_END = 2, \/*  | *\/$/;"	e	enum:MAV_DISTANCE_SENSOR
MAV_DISTANCE_SENSOR_LASER	lib/mavlink/1.0/common/common.h	/^    MAV_DISTANCE_SENSOR_LASER = 0, \/* Laser altimeter, e.g. LightWare SF02\/F or PulsedLight units | *\/$/;"	e	enum:MAV_DISTANCE_SENSOR
MAV_DISTANCE_SENSOR_ULTRASOUND	lib/mavlink/1.0/common/common.h	/^    MAV_DISTANCE_SENSOR_ULTRASOUND = 1, \/* Laser altimeter, e.g. MaxBotix units | *\/$/;"	e	enum:MAV_DISTANCE_SENSOR
MAV_FRAME	lib/mavlink/1.0/common/common.h	/^enum MAV_FRAME {$/;"	g
MAV_FRAME_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_FRAME_ENUM_END = 7, \/*  | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL	lib/mavlink/1.0/common/common.h	/^    MAV_FRAME_GLOBAL = 0, \/* Global coordinate frame, WGS84 coordinate system. First value \/ x: latitude, second value \/ y: longitude, third value \/ z: positive altitude over mean sea level (MSL) | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL_INT	lib/mavlink/1.0/common/common.h	/^    MAV_FRAME_GLOBAL_INT = 5, \/* Global coordinate frame with some fields as scaled integers, WGS84 coordinate system. First value \/ x: latitude, second value \/ y: longitude, third value \/ z: positive altitude over mean sea level (MSL). Lat \/ Lon are scaled * 1E7 to avoid floating point accuracy limitations. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL_RELATIVE_ALT	lib/mavlink/1.0/common/common.h	/^    MAV_FRAME_GLOBAL_RELATIVE_ALT = 3, \/* Global coordinate frame, WGS84 coordinate system, relative altitude over ground with respect to the home position. First value \/ x: latitude, second value \/ y: longitude, third value \/ z: positive altitude with 0 being at the altitude of the home location. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL_RELATIVE_ALT_INT	lib/mavlink/1.0/common/common.h	/^    MAV_FRAME_GLOBAL_RELATIVE_ALT_INT = 6, \/* Global coordinate frame with some fields as scaled integers, WGS84 coordinate system, relative altitude over ground with respect to the home position. First value \/ x: latitude, second value \/ y: longitude, third value \/ z: positive altitude with 0 being at the altitude of the home location. Lat \/ Lon are scaled * 1E7 to avoid floating point accuracy limitations. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_LOCAL_ENU	lib/mavlink/1.0/common/common.h	/^    MAV_FRAME_LOCAL_ENU = 4, \/* Local coordinate frame, Z-down (x: east, y: north, z: up) | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_LOCAL_NED	lib/mavlink/1.0/common/common.h	/^    MAV_FRAME_LOCAL_NED = 1, \/* Local coordinate frame, Z-up (x: north, y: east, z: down). | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_MISSION	lib/mavlink/1.0/common/common.h	/^    MAV_FRAME_MISSION = 2, \/* NOT a coordinate frame, indicates a mission command. | *\/$/;"	e	enum:MAV_FRAME
MAV_GOTO	lib/mavlink/1.0/common/common.h	/^enum MAV_GOTO {$/;"	g
MAV_GOTO_DO_CONTINUE	lib/mavlink/1.0/common/common.h	/^    MAV_GOTO_DO_CONTINUE = 1, \/* Continue with the next item in mission execution. | *\/$/;"	e	enum:MAV_GOTO
MAV_GOTO_DO_HOLD	lib/mavlink/1.0/common/common.h	/^    MAV_GOTO_DO_HOLD = 0, \/* Hold at the current position. | *\/$/;"	e	enum:MAV_GOTO
MAV_GOTO_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_GOTO_ENUM_END = 4, \/*  | *\/$/;"	e	enum:MAV_GOTO
MAV_GOTO_HOLD_AT_CURRENT_POSITION	lib/mavlink/1.0/common/common.h	/^    MAV_GOTO_HOLD_AT_CURRENT_POSITION = 2, \/* Hold at the current position of the system | *\/$/;"	e	enum:MAV_GOTO
MAV_GOTO_HOLD_AT_SPECIFIED_POSITION	lib/mavlink/1.0/common/common.h	/^    MAV_GOTO_HOLD_AT_SPECIFIED_POSITION = 3, \/* Hold at the position specified in the parameters of the DO_HOLD action | *\/$/;"	e	enum:MAV_GOTO
MAV_MISSION_ACCEPTED	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_ACCEPTED = 0, \/* mission accepted OK | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_DENIED	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_DENIED = 14, \/* not accepting any mission commands from this communication partner | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_ERROR	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_ERROR = 1, \/* generic error \/ not accepting mission commands at all right now | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_INVALID = 5, \/* one of the parameters has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM1	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_INVALID_PARAM1 = 6, \/* param1 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM2	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_INVALID_PARAM2 = 7, \/* param2 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM3	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_INVALID_PARAM3 = 8, \/* param3 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM4	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_INVALID_PARAM4 = 9, \/* param4 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM5_X	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_INVALID_PARAM5_X = 10, \/* x\/param5 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM6_Y	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_INVALID_PARAM6_Y = 11, \/* y\/param6 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM7	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_INVALID_PARAM7 = 12, \/* param7 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_SEQUENCE	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_INVALID_SEQUENCE = 13, \/* received waypoint out of sequence | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_NO_SPACE	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_NO_SPACE = 4, \/* mission item exceeds storage space | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_RESULT	lib/mavlink/1.0/common/common.h	/^enum MAV_MISSION_RESULT {$/;"	g
MAV_MISSION_RESULT_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_RESULT_ENUM_END = 15, \/*  | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_UNSUPPORTED	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_UNSUPPORTED = 3, \/* command is not supported | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_UNSUPPORTED_FRAME	lib/mavlink/1.0/common/common.h	/^    MAV_MISSION_UNSUPPORTED_FRAME = 2, \/* coordinate frame is not supported | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MODE	lib/mavlink/1.0/common/common.h	/^enum MAV_MODE {$/;"	g
MAV_MODE_AUTO_ARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_AUTO_ARMED = 220, \/* System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by MISSIONs) | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_AUTO_DISARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_AUTO_DISARMED = 92, \/* System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by MISSIONs) | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_ENUM_END = 221, \/*  | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_FLAG	lib/mavlink/1.0/common/common.h	/^enum MAV_MODE_FLAG {$/;"	g
MAV_MODE_FLAG_AUTO_ENABLED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_AUTO_ENABLED = 4, \/* 0b00000100 autonomous mode enabled, system finds its own goal positions. Guided flag can be set or not, depends on the actual implementation. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_CUSTOM_MODE_ENABLED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_CUSTOM_MODE_ENABLED = 1, \/* 0b00000001 Reserved for future use. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_DECODE_POSITION	lib/mavlink/1.0/common/common.h	/^enum MAV_MODE_FLAG_DECODE_POSITION {$/;"	g
MAV_MODE_FLAG_DECODE_POSITION_AUTO	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_DECODE_POSITION_AUTO = 4, \/* Sixt bit:   00000100 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE = 1, \/* Eighth bit: 00000001 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_DECODE_POSITION_ENUM_END = 129, \/*  | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_GUIDED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_DECODE_POSITION_GUIDED = 8, \/* Fifth bit:  00001000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_HIL	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_DECODE_POSITION_HIL = 32, \/* Third bit:  00100000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_MANUAL	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_DECODE_POSITION_MANUAL = 64, \/* Second bit: 01000000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_SAFETY	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_DECODE_POSITION_SAFETY = 128, \/* First bit:  10000000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_STABILIZE	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_DECODE_POSITION_STABILIZE = 16, \/* Fourth bit: 00010000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_TEST	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_DECODE_POSITION_TEST = 2, \/* Seventh bit: 00000010 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_ENUM_END = 129, \/*  | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_GUIDED_ENABLED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_GUIDED_ENABLED = 8, \/* 0b00001000 guided mode enabled, system flies MISSIONs \/ mission items. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_HIL_ENABLED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_HIL_ENABLED = 32, \/* 0b00100000 hardware in the loop simulation. All motors \/ actuators are blocked, but internal software is full operational. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_MANUAL_INPUT_ENABLED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_MANUAL_INPUT_ENABLED = 64, \/* 0b01000000 remote control input is enabled. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_SAFETY_ARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_SAFETY_ARMED = 128, \/* 0b10000000 MAV safety set to armed. Motors are enabled \/ running \/ can start. Ready to fly. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_STABILIZE_ENABLED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_STABILIZE_ENABLED = 16, \/* 0b00010000 system stabilizes electronically its attitude (and optionally position). It needs however further control inputs to move around. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_TEST_ENABLED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_FLAG_TEST_ENABLED = 2, \/* 0b00000010 system has a test mode enabled. This flag is intended for temporary system tests and should not be used for stable implementations. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_GUIDED_ARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_GUIDED_ARMED = 216, \/* System is allowed to be active, under autonomous control, manual setpoint | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_GUIDED_DISARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_GUIDED_DISARMED = 88, \/* System is allowed to be active, under autonomous control, manual setpoint | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_MANUAL_ARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_MANUAL_ARMED = 192, \/* System is allowed to be active, under manual (RC) control, no stabilization | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_MANUAL_DISARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_MANUAL_DISARMED = 64, \/* System is allowed to be active, under manual (RC) control, no stabilization | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_PREFLIGHT	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_PREFLIGHT = 0, \/* System is not ready to fly, booting, calibrating, etc. No flag is set. | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_STABILIZE_ARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_STABILIZE_ARMED = 208, \/* System is allowed to be active, under assisted RC control. | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_STABILIZE_DISARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_STABILIZE_DISARMED = 80, \/* System is allowed to be active, under assisted RC control. | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_TEST_ARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_TEST_ARMED = 194, \/* UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only. | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_TEST_DISARMED	lib/mavlink/1.0/common/common.h	/^    MAV_MODE_TEST_DISARMED = 66, \/* UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only. | *\/$/;"	e	enum:MAV_MODE
MAV_MOUNT_MODE	lib/mavlink/1.0/common/common.h	/^enum MAV_MOUNT_MODE {$/;"	g
MAV_MOUNT_MODE_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_MOUNT_MODE_ENUM_END = 5, \/*  | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_GPS_POINT	lib/mavlink/1.0/common/common.h	/^    MAV_MOUNT_MODE_GPS_POINT = 4, \/* Load neutral position and start to point to Lat,Lon,Alt | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_MAVLINK_TARGETING	lib/mavlink/1.0/common/common.h	/^    MAV_MOUNT_MODE_MAVLINK_TARGETING = 2, \/* Load neutral position and start MAVLink Roll,Pitch,Yaw control with stabilization | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_NEUTRAL	lib/mavlink/1.0/common/common.h	/^    MAV_MOUNT_MODE_NEUTRAL = 1, \/* Load and keep neutral position (Roll,Pitch,Yaw) from permanent memory. | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_RC_TARGETING	lib/mavlink/1.0/common/common.h	/^    MAV_MOUNT_MODE_RC_TARGETING = 3, \/* Load neutral position and start RC Roll,Pitch,Yaw control with stabilization | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_RETRACT	lib/mavlink/1.0/common/common.h	/^    MAV_MOUNT_MODE_RETRACT = 0, \/* Load and keep safe position (Roll,Pitch,Yaw) from permant memory and stop stabilization | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_PARAM_TYPE	lib/mavlink/1.0/common/common.h	/^enum MAV_PARAM_TYPE {$/;"	g
MAV_PARAM_TYPE_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_ENUM_END = 11, \/*  | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_INT16	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_INT16 = 4, \/* 16-bit signed integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_INT32	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_INT32 = 6, \/* 32-bit signed integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_INT64	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_INT64 = 8, \/* 64-bit signed integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_INT8	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_INT8 = 2, \/* 8-bit signed integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_REAL32	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_REAL32 = 9, \/* 32-bit floating-point | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_REAL64	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_REAL64 = 10, \/* 64-bit floating-point | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_UINT16	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_UINT16 = 3, \/* 16-bit unsigned integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_UINT32	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_UINT32 = 5, \/* 32-bit unsigned integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_UINT64	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_UINT64 = 7, \/* 64-bit unsigned integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_UINT8	lib/mavlink/1.0/common/common.h	/^    MAV_PARAM_TYPE_UINT8 = 1, \/* 8-bit unsigned integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_POWER_STATUS	lib/mavlink/1.0/common/common.h	/^enum MAV_POWER_STATUS {$/;"	g
MAV_POWER_STATUS_BRICK_VALID	lib/mavlink/1.0/common/common.h	/^    MAV_POWER_STATUS_BRICK_VALID = 1, \/* main brick power supply valid | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_CHANGED	lib/mavlink/1.0/common/common.h	/^    MAV_POWER_STATUS_CHANGED = 32, \/* Power status has changed since boot | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_POWER_STATUS_ENUM_END = 33, \/*  | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_PERIPH_HIPOWER_OVERCURRENT	lib/mavlink/1.0/common/common.h	/^    MAV_POWER_STATUS_PERIPH_HIPOWER_OVERCURRENT = 16, \/* hi-power peripheral supply is in over-current state | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_PERIPH_OVERCURRENT	lib/mavlink/1.0/common/common.h	/^    MAV_POWER_STATUS_PERIPH_OVERCURRENT = 8, \/* peripheral supply is in over-current state | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_SERVO_VALID	lib/mavlink/1.0/common/common.h	/^    MAV_POWER_STATUS_SERVO_VALID = 2, \/* main servo power supply valid for FMU | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_USB_CONNECTED	lib/mavlink/1.0/common/common.h	/^    MAV_POWER_STATUS_USB_CONNECTED = 4, \/* USB power is connected | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_RESULT	lib/mavlink/1.0/common/common.h	/^enum MAV_RESULT {$/;"	g
MAV_RESULT_ACCEPTED	lib/mavlink/1.0/common/common.h	/^    MAV_RESULT_ACCEPTED = 0, \/* Command ACCEPTED and EXECUTED | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_DENIED	lib/mavlink/1.0/common/common.h	/^    MAV_RESULT_DENIED = 2, \/* Command PERMANENTLY DENIED | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_RESULT_ENUM_END = 5, \/*  | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_FAILED	lib/mavlink/1.0/common/common.h	/^    MAV_RESULT_FAILED = 4, \/* Command executed, but failed | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_TEMPORARILY_REJECTED	lib/mavlink/1.0/common/common.h	/^    MAV_RESULT_TEMPORARILY_REJECTED = 1, \/* Command TEMPORARY REJECTED\/DENIED | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_UNSUPPORTED	lib/mavlink/1.0/common/common.h	/^    MAV_RESULT_UNSUPPORTED = 3, \/* Command UNKNOWN\/UNSUPPORTED | *\/$/;"	e	enum:MAV_RESULT
MAV_ROI	lib/mavlink/1.0/common/common.h	/^enum MAV_ROI {$/;"	g
MAV_ROI_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_ROI_ENUM_END = 5, \/*  | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_LOCATION	lib/mavlink/1.0/common/common.h	/^    MAV_ROI_LOCATION = 3, \/* Point toward fixed location. | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_NONE	lib/mavlink/1.0/common/common.h	/^    MAV_ROI_NONE = 0, \/* No region of interest. | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_TARGET	lib/mavlink/1.0/common/common.h	/^    MAV_ROI_TARGET = 4, \/* Point toward of given id. | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_WPINDEX	lib/mavlink/1.0/common/common.h	/^    MAV_ROI_WPINDEX = 2, \/* Point toward given MISSION. | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_WPNEXT	lib/mavlink/1.0/common/common.h	/^    MAV_ROI_WPNEXT = 1, \/* Point toward next MISSION. | *\/$/;"	e	enum:MAV_ROI
MAV_SEVERITY	lib/mavlink/1.0/common/common.h	/^enum MAV_SEVERITY {$/;"	g
MAV_SEVERITY_ALERT	lib/mavlink/1.0/common/common.h	/^    MAV_SEVERITY_ALERT = 1, \/* Action should be taken immediately. Indicates error in non-critical systems. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_CRITICAL	lib/mavlink/1.0/common/common.h	/^    MAV_SEVERITY_CRITICAL = 2, \/* Action must be taken immediately. Indicates failure in a primary system. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_DEBUG	lib/mavlink/1.0/common/common.h	/^    MAV_SEVERITY_DEBUG = 7, \/* Useful non-operational messages that can assist in debugging. These should not occur during normal operation. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_EMERGENCY	lib/mavlink/1.0/common/common.h	/^    MAV_SEVERITY_EMERGENCY = 0, \/* System is unusable. This is a "panic" condition. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_SEVERITY_ENUM_END = 8, \/*  | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_ERROR	lib/mavlink/1.0/common/common.h	/^    MAV_SEVERITY_ERROR = 3, \/* Indicates an error in secondary\/redundant systems. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_INFO	lib/mavlink/1.0/common/common.h	/^    MAV_SEVERITY_INFO = 6, \/* Normal operational messages. Useful for logging. No action is required for these messages. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_NOTICE	lib/mavlink/1.0/common/common.h	/^    MAV_SEVERITY_NOTICE = 5, \/* An unusual event has occured, though not an error condition. This should be investigated for the root cause. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_WARNING	lib/mavlink/1.0/common/common.h	/^    MAV_SEVERITY_WARNING = 4, \/* Indicates about a possible future error if this is not resolved within a given timeframe. Example would be a low battery warning. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_STATE	lib/mavlink/1.0/common/common.h	/^enum MAV_STATE {$/;"	g
MAV_STATE_ACTIVE	lib/mavlink/1.0/common/common.h	/^    MAV_STATE_ACTIVE = 4, \/* System is active and might be already airborne. Motors are engaged. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_BOOT	lib/mavlink/1.0/common/common.h	/^    MAV_STATE_BOOT = 1, \/* System is booting up. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_CALIBRATING	lib/mavlink/1.0/common/common.h	/^    MAV_STATE_CALIBRATING = 2, \/* System is calibrating and not flight-ready. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_CRITICAL	lib/mavlink/1.0/common/common.h	/^    MAV_STATE_CRITICAL = 5, \/* System is in a non-normal flight mode. It can however still navigate. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_EMERGENCY	lib/mavlink/1.0/common/common.h	/^    MAV_STATE_EMERGENCY = 6, \/* System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_STATE_ENUM_END = 8, \/*  | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_POWEROFF	lib/mavlink/1.0/common/common.h	/^    MAV_STATE_POWEROFF = 7, \/* System just initialized its power-down sequence, will shut down now. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_STANDBY	lib/mavlink/1.0/common/common.h	/^    MAV_STATE_STANDBY = 3, \/* System is grounded and on standby. It can be launched any time. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_UNINIT	lib/mavlink/1.0/common/common.h	/^    MAV_STATE_UNINIT = 0, \/* Uninitialized system, state is unknown. | *\/$/;"	e	enum:MAV_STATE
MAV_SYS_STATUS_GEOFENCE	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_GEOFENCE = 1048576, \/* 0x100000 geofence | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR	lib/mavlink/1.0/common/common.h	/^enum MAV_SYS_STATUS_SENSOR {$/;"	g
MAV_SYS_STATUS_SENSOR_3D_ACCEL	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_3D_ACCEL = 2, \/* 0x02 3D accelerometer | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_ACCEL2	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_3D_ACCEL2 = 262144, \/* 0x40000 2nd 3D accelerometer | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_GYRO	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_3D_GYRO = 1, \/* 0x01 3D gyro | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_GYRO2	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_3D_GYRO2 = 131072, \/* 0x20000 2nd 3D gyro | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_MAG	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_3D_MAG = 4, \/* 0x04 3D magnetometer | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_MAG2	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_3D_MAG2 = 524288, \/* 0x80000 2nd 3D magnetometer | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_ABSOLUTE_PRESSURE	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_ABSOLUTE_PRESSURE = 8, \/* 0x08 absolute pressure | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_ANGULAR_RATE_CONTROL	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_ANGULAR_RATE_CONTROL = 1024, \/* 0x400 3D angular rate control | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_ATTITUDE_STABILIZATION	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_ATTITUDE_STABILIZATION = 2048, \/* 0x800 attitude stabilization | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_DIFFERENTIAL_PRESSURE	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_DIFFERENTIAL_PRESSURE = 16, \/* 0x10 differential pressure | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_ENUM_END = 1048577, \/*  | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_EXTERNAL_GROUND_TRUTH	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_EXTERNAL_GROUND_TRUTH = 512, \/* 0x200 external ground truth (Vicon or Leica) | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_GPS	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_GPS = 32, \/* 0x20 GPS | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_LASER_POSITION	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_LASER_POSITION = 256, \/* 0x100 laser based position | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_MOTOR_OUTPUTS	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_MOTOR_OUTPUTS = 32768, \/* 0x8000 motor outputs \/ control | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_OPTICAL_FLOW	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_OPTICAL_FLOW = 64, \/* 0x40 optical flow | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_RC_RECEIVER	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_RC_RECEIVER = 65536, \/* 0x10000 rc receiver | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_VISION_POSITION	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_VISION_POSITION = 128, \/* 0x80 computer vision position | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_XY_POSITION_CONTROL	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_XY_POSITION_CONTROL = 16384, \/* 0x4000 x\/y position control | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_YAW_POSITION	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_YAW_POSITION = 4096, \/* 0x1000 yaw position | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_Z_ALTITUDE_CONTROL	lib/mavlink/1.0/common/common.h	/^    MAV_SYS_STATUS_SENSOR_Z_ALTITUDE_CONTROL = 8192, \/* 0x2000 z\/altitude control | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_TYPE	lib/mavlink/1.0/common/common.h	/^enum MAV_TYPE {$/;"	g
MAV_TYPE_AIRSHIP	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_AIRSHIP = 7, \/* Airship, controlled | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_ANTENNA_TRACKER	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_ANTENNA_TRACKER = 5, \/* Ground installation | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_COAXIAL	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_COAXIAL = 3, \/* Coaxial helicopter | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_ENUM_END	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_ENUM_END = 19, \/*  | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_FIXED_WING	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_FIXED_WING = 1, \/* Fixed wing aircraft. | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_FLAPPING_WING	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_FLAPPING_WING = 16, \/* Flapping wing | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_FREE_BALLOON	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_FREE_BALLOON = 8, \/* Free balloon, uncontrolled | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_GCS	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_GCS = 6, \/* Operator control unit \/ ground control station | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_GENERIC	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_GENERIC = 0, \/* Generic micro air vehicle. | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_GROUND_ROVER	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_GROUND_ROVER = 10, \/* Ground rover | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_HELICOPTER	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_HELICOPTER = 4, \/* Normal helicopter with tail rotor. | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_HEXAROTOR	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_HEXAROTOR = 13, \/* Hexarotor | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_KITE	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_KITE = 17, \/* Flapping wing | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_OCTOROTOR	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_OCTOROTOR = 14, \/* Octorotor | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_ONBOARD_CONTROLLER	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_ONBOARD_CONTROLLER = 18, \/* Onboard companion controller | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_QUADROTOR	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_QUADROTOR = 2, \/* Quadrotor | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_ROCKET	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_ROCKET = 9, \/* Rocket | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_SUBMARINE	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_SUBMARINE = 12, \/* Submarine | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_SURFACE_BOAT	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_SURFACE_BOAT = 11, \/* Surface vessel, boat, ship | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_TRICOPTER	lib/mavlink/1.0/common/common.h	/^    MAV_TYPE_TRICOPTER = 15, \/* Octorotor | *\/$/;"	e	enum:MAV_TYPE
M_PI_2	lib/mavlink/1.0/mavlink_conversions.h	13;"	d
NOT_LINK	src/task2_videodata.h	17;"	d
SERIAL_CONTROL_DEV	lib/mavlink/1.0/common/common.h	/^enum SERIAL_CONTROL_DEV {$/;"	g
SERIAL_CONTROL_DEV_ENUM_END	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_DEV_ENUM_END = 4, \/*  | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_GPS1	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_DEV_GPS1 = 2, \/* First GPS port | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_GPS2	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_DEV_GPS2 = 3, \/* Second GPS port | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_TELEM1	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_DEV_TELEM1 = 0, \/* First telemetry port | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_TELEM2	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_DEV_TELEM2 = 1, \/* Second telemetry port | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_FLAG	lib/mavlink/1.0/common/common.h	/^enum SERIAL_CONTROL_FLAG {$/;"	g
SERIAL_CONTROL_FLAG_BLOCKING	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_FLAG_BLOCKING = 8, \/* Block on writes to the serial port | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_ENUM_END	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_FLAG_ENUM_END = 17, \/*  | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_EXCLUSIVE	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_FLAG_EXCLUSIVE = 4, \/* Set if access to the serial port should be removed from whatever driver is currently using it, giving exclusive access to the SERIAL_CONTROL protocol. The port can be handed back by sending a request without this flag set | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_MULTI	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_FLAG_MULTI = 16, \/* Send multiple replies until port is drained | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_REPLY	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_FLAG_REPLY = 1, \/* Set if this is a reply | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_RESPOND	lib/mavlink/1.0/common/common.h	/^    SERIAL_CONTROL_FLAG_RESPOND = 2, \/* Set if the sender wants the receiver to send a response as another SERIAL_CONTROL message | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
TASK1_MAVDATA_H	src/task1_mavdata.h	2;"	d
TASK2_VIDEODATA_H	src/task2_videodata.h	2;"	d
TASK3_MAVPDDL_H	src/task3_mavpddl.h	2;"	d
USB0_UP	src/task2_videodata.h	16;"	d
Vcc	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^    uint16_t Vcc; \/\/\/< 5V rail voltage in millivolts$/;"	m	struct:__mavlink_power_status_t
Vservo	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^    uint16_t Vservo; \/\/\/< servo rail voltage in millivolts$/;"	m	struct:__mavlink_power_status_t
X25_INIT_CRC	lib/mavlink/1.0/checksum.h	14;"	d
X25_VALIDATE_CRC	lib/mavlink/1.0/checksum.h	15;"	d
_CHECKSUM_H_	lib/mavlink/1.0/checksum.h	6;"	d
_MAVLINK_CONVERSIONS_H_	lib/mavlink/1.0/mavlink_conversions.h	2;"	d
_MAVLINK_HELPERS_H_	lib/mavlink/1.0/mavlink_helpers.h	2;"	d
_MAVLINK_PROTOCOL_H_	lib/mavlink/1.0/protocol.h	2;"	d
_MAV_MSG_RETURN_TYPE	lib/mavlink/1.0/protocol.h	233;"	d
_MAV_PAYLOAD	lib/mavlink/1.0/mavlink_types.h	104;"	d
_MAV_PAYLOAD_NON_CONST	lib/mavlink/1.0/mavlink_types.h	105;"	d
_MAV_PUT_ARRAY	lib/mavlink/1.0/protocol.h	199;"	d
_MAV_PUT_ARRAY	lib/mavlink/1.0/protocol.h	212;"	d
_MAV_RETURN_ARRAY	lib/mavlink/1.0/protocol.h	293;"	d
_MAV_RETURN_ARRAY	lib/mavlink/1.0/protocol.h	304;"	d
_MAV_RETURN_char	lib/mavlink/1.0/protocol.h	228;"	d
_MAV_RETURN_char_array	lib/mavlink/1.0/protocol.h	/^static inline uint16_t _MAV_RETURN_char_array(const mavlink_message_t *msg, char *value, uint8_t array_length, uint8_t wire_offset)$/;"	f
_MAV_RETURN_int8_t	lib/mavlink/1.0/protocol.h	229;"	d
_MAV_RETURN_int8_t_array	lib/mavlink/1.0/protocol.h	/^static inline uint16_t _MAV_RETURN_int8_t_array(const mavlink_message_t *msg, int8_t *value, uint8_t array_length, uint8_t wire_offset)$/;"	f
_MAV_RETURN_uint8_t	lib/mavlink/1.0/protocol.h	230;"	d
_MAV_RETURN_uint8_t_array	lib/mavlink/1.0/protocol.h	/^static inline uint16_t _MAV_RETURN_uint8_t_array(const mavlink_message_t *msg, uint8_t *value, uint8_t array_length, uint8_t wire_offset)$/;"	f
_USE_MATH_DEFINES	lib/mavlink/1.0/mavlink_conversions.h	7;"	d
__mavlink_attitude_quaternion_t	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^typedef struct __mavlink_attitude_quaternion_t {$/;"	s
__mavlink_attitude_t	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^typedef struct __mavlink_attitude_t {$/;"	s
__mavlink_auth_key_t	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^typedef struct __mavlink_auth_key_t {$/;"	s
__mavlink_battery_status_t	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^typedef struct __mavlink_battery_status_t {$/;"	s
__mavlink_bitfield	lib/mavlink/1.0/mavlink_helpers.h	/^union __mavlink_bitfield {$/;"	u
__mavlink_change_operator_control_ack_t	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^typedef struct __mavlink_change_operator_control_ack_t {$/;"	s
__mavlink_change_operator_control_t	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^typedef struct __mavlink_change_operator_control_t {$/;"	s
__mavlink_command_ack_t	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^typedef struct __mavlink_command_ack_t {$/;"	s
__mavlink_command_long_t	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^typedef struct __mavlink_command_long_t {$/;"	s
__mavlink_data_stream_t	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^typedef struct __mavlink_data_stream_t {$/;"	s
__mavlink_data_transmission_handshake_t	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^typedef struct __mavlink_data_transmission_handshake_t {$/;"	s
__mavlink_debug_t	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^typedef struct __mavlink_debug_t {$/;"	s
__mavlink_debug_vect_t	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^typedef struct __mavlink_debug_vect_t {$/;"	s
__mavlink_distance_sensor_t	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^typedef struct __mavlink_distance_sensor_t {$/;"	s
__mavlink_encapsulated_data_t	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^typedef struct __mavlink_encapsulated_data_t {$/;"	s
__mavlink_extended_message	lib/mavlink/1.0/mavlink_types.h	/^typedef struct __mavlink_extended_message {$/;"	s
__mavlink_field_info	lib/mavlink/1.0/mavlink_types.h	/^typedef struct __mavlink_field_info {$/;"	s
__mavlink_file_transfer_dir_list_t	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^typedef struct __mavlink_file_transfer_dir_list_t {$/;"	s
__mavlink_file_transfer_res_t	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^typedef struct __mavlink_file_transfer_res_t {$/;"	s
__mavlink_file_transfer_start_t	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^typedef struct __mavlink_file_transfer_start_t {$/;"	s
__mavlink_global_position_int_t	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^typedef struct __mavlink_global_position_int_t {$/;"	s
__mavlink_global_position_setpoint_int_t	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^typedef struct __mavlink_global_position_setpoint_int_t {$/;"	s
__mavlink_global_vision_position_estimate_t	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^typedef struct __mavlink_global_vision_position_estimate_t {$/;"	s
__mavlink_gps2_raw_t	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^typedef struct __mavlink_gps2_raw_t {$/;"	s
__mavlink_gps_global_origin_t	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^typedef struct __mavlink_gps_global_origin_t {$/;"	s
__mavlink_gps_inject_data_t	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^typedef struct __mavlink_gps_inject_data_t {$/;"	s
__mavlink_gps_raw_int_t	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^typedef struct __mavlink_gps_raw_int_t {$/;"	s
__mavlink_gps_status_t	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^typedef struct __mavlink_gps_status_t {$/;"	s
__mavlink_heartbeat_t	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^typedef struct __mavlink_heartbeat_t {$/;"	s
__mavlink_highres_imu_t	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^typedef struct __mavlink_highres_imu_t {$/;"	s
__mavlink_hil_controls_t	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^typedef struct __mavlink_hil_controls_t {$/;"	s
__mavlink_hil_gps_t	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^typedef struct __mavlink_hil_gps_t {$/;"	s
__mavlink_hil_optical_flow_t	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^typedef struct __mavlink_hil_optical_flow_t {$/;"	s
__mavlink_hil_rc_inputs_raw_t	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^typedef struct __mavlink_hil_rc_inputs_raw_t {$/;"	s
__mavlink_hil_sensor_t	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^typedef struct __mavlink_hil_sensor_t {$/;"	s
__mavlink_hil_state_quaternion_t	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^typedef struct __mavlink_hil_state_quaternion_t {$/;"	s
__mavlink_hil_state_t	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^typedef struct __mavlink_hil_state_t {$/;"	s
__mavlink_local_position_ned_system_global_offset_t	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^typedef struct __mavlink_local_position_ned_system_global_offset_t {$/;"	s
__mavlink_local_position_ned_t	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^typedef struct __mavlink_local_position_ned_t {$/;"	s
__mavlink_local_position_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^typedef struct __mavlink_local_position_setpoint_t {$/;"	s
__mavlink_log_data_t	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^typedef struct __mavlink_log_data_t {$/;"	s
__mavlink_log_entry_t	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^typedef struct __mavlink_log_entry_t {$/;"	s
__mavlink_log_erase_t	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^typedef struct __mavlink_log_erase_t {$/;"	s
__mavlink_log_request_data_t	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^typedef struct __mavlink_log_request_data_t {$/;"	s
__mavlink_log_request_end_t	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^typedef struct __mavlink_log_request_end_t {$/;"	s
__mavlink_log_request_list_t	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^typedef struct __mavlink_log_request_list_t {$/;"	s
__mavlink_manual_control_t	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^typedef struct __mavlink_manual_control_t {$/;"	s
__mavlink_manual_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^typedef struct __mavlink_manual_setpoint_t {$/;"	s
__mavlink_memory_vect_t	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^typedef struct __mavlink_memory_vect_t {$/;"	s
__mavlink_message	lib/mavlink/1.0/mavlink_types.h	/^typedef struct __mavlink_message {$/;"	s
__mavlink_message_info	lib/mavlink/1.0/mavlink_types.h	/^typedef struct __mavlink_message_info {$/;"	s
__mavlink_mission_ack_t	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^typedef struct __mavlink_mission_ack_t {$/;"	s
__mavlink_mission_clear_all_t	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^typedef struct __mavlink_mission_clear_all_t {$/;"	s
__mavlink_mission_count_t	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^typedef struct __mavlink_mission_count_t {$/;"	s
__mavlink_mission_current_t	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^typedef struct __mavlink_mission_current_t {$/;"	s
__mavlink_mission_item_reached_t	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^typedef struct __mavlink_mission_item_reached_t {$/;"	s
__mavlink_mission_item_t	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^typedef struct __mavlink_mission_item_t {$/;"	s
__mavlink_mission_request_list_t	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^typedef struct __mavlink_mission_request_list_t {$/;"	s
__mavlink_mission_request_partial_list_t	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^typedef struct __mavlink_mission_request_partial_list_t {$/;"	s
__mavlink_mission_request_t	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^typedef struct __mavlink_mission_request_t {$/;"	s
__mavlink_mission_set_current_t	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^typedef struct __mavlink_mission_set_current_t {$/;"	s
__mavlink_mission_write_partial_list_t	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^typedef struct __mavlink_mission_write_partial_list_t {$/;"	s
__mavlink_named_value_float_t	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^typedef struct __mavlink_named_value_float_t {$/;"	s
__mavlink_named_value_int_t	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^typedef struct __mavlink_named_value_int_t {$/;"	s
__mavlink_nav_controller_output_t	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^typedef struct __mavlink_nav_controller_output_t {$/;"	s
__mavlink_omnidirectional_flow_t	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^typedef struct __mavlink_omnidirectional_flow_t {$/;"	s
__mavlink_optical_flow_t	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^typedef struct __mavlink_optical_flow_t {$/;"	s
__mavlink_param_request_list_t	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^typedef struct __mavlink_param_request_list_t {$/;"	s
__mavlink_param_request_read_t	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^typedef struct __mavlink_param_request_read_t {$/;"	s
__mavlink_param_set_t	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^typedef struct __mavlink_param_set_t {$/;"	s
__mavlink_param_value_t	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^typedef struct __mavlink_param_value_t {$/;"	s
__mavlink_ping_t	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^typedef struct __mavlink_ping_t {$/;"	s
__mavlink_power_status_t	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^typedef struct __mavlink_power_status_t {$/;"	s
__mavlink_radio_status_t	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^typedef struct __mavlink_radio_status_t {$/;"	s
__mavlink_raw_imu_t	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^typedef struct __mavlink_raw_imu_t {$/;"	s
__mavlink_raw_pressure_t	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^typedef struct __mavlink_raw_pressure_t {$/;"	s
__mavlink_rc_channels_override_t	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^typedef struct __mavlink_rc_channels_override_t {$/;"	s
__mavlink_rc_channels_raw_t	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^typedef struct __mavlink_rc_channels_raw_t {$/;"	s
__mavlink_rc_channels_scaled_t	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^typedef struct __mavlink_rc_channels_scaled_t {$/;"	s
__mavlink_rc_channels_t	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^typedef struct __mavlink_rc_channels_t {$/;"	s
__mavlink_request_data_stream_t	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^typedef struct __mavlink_request_data_stream_t {$/;"	s
__mavlink_roll_pitch_yaw_rates_thrust_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^typedef struct __mavlink_roll_pitch_yaw_rates_thrust_setpoint_t {$/;"	s
__mavlink_roll_pitch_yaw_speed_thrust_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^typedef struct __mavlink_roll_pitch_yaw_speed_thrust_setpoint_t {$/;"	s
__mavlink_roll_pitch_yaw_thrust_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^typedef struct __mavlink_roll_pitch_yaw_thrust_setpoint_t {$/;"	s
__mavlink_safety_allowed_area_t	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^typedef struct __mavlink_safety_allowed_area_t {$/;"	s
__mavlink_safety_set_allowed_area_t	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^typedef struct __mavlink_safety_set_allowed_area_t {$/;"	s
__mavlink_scaled_imu2_t	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^typedef struct __mavlink_scaled_imu2_t {$/;"	s
__mavlink_scaled_imu_t	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^typedef struct __mavlink_scaled_imu_t {$/;"	s
__mavlink_scaled_pressure_t	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^typedef struct __mavlink_scaled_pressure_t {$/;"	s
__mavlink_serial_control_t	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^typedef struct __mavlink_serial_control_t {$/;"	s
__mavlink_servo_output_raw_t	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^typedef struct __mavlink_servo_output_raw_t {$/;"	s
__mavlink_set_global_position_setpoint_int_t	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^typedef struct __mavlink_set_global_position_setpoint_int_t {$/;"	s
__mavlink_set_gps_global_origin_t	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^typedef struct __mavlink_set_gps_global_origin_t {$/;"	s
__mavlink_set_local_position_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^typedef struct __mavlink_set_local_position_setpoint_t {$/;"	s
__mavlink_set_mode_t	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^typedef struct __mavlink_set_mode_t {$/;"	s
__mavlink_set_quad_motors_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^typedef struct __mavlink_set_quad_motors_setpoint_t {$/;"	s
__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^typedef struct __mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t {$/;"	s
__mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^typedef struct __mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t {$/;"	s
__mavlink_set_roll_pitch_yaw_speed_thrust_t	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^typedef struct __mavlink_set_roll_pitch_yaw_speed_thrust_t {$/;"	s
__mavlink_set_roll_pitch_yaw_thrust_t	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^typedef struct __mavlink_set_roll_pitch_yaw_thrust_t {$/;"	s
__mavlink_setpoint_6dof_t	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^typedef struct __mavlink_setpoint_6dof_t {$/;"	s
__mavlink_setpoint_8dof_t	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^typedef struct __mavlink_setpoint_8dof_t {$/;"	s
__mavlink_sim_state_t	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^typedef struct __mavlink_sim_state_t {$/;"	s
__mavlink_state_correction_t	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^typedef struct __mavlink_state_correction_t {$/;"	s
__mavlink_status	lib/mavlink/1.0/mavlink_types.h	/^typedef struct __mavlink_status {$/;"	s
__mavlink_statustext_t	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^typedef struct __mavlink_statustext_t {$/;"	s
__mavlink_sys_status_t	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^typedef struct __mavlink_sys_status_t {$/;"	s
__mavlink_system	lib/mavlink/1.0/mavlink_types.h	/^typedef struct __mavlink_system {$/;"	s
__mavlink_system_time_t	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^typedef struct __mavlink_system_time_t {$/;"	s
__mavlink_vfr_hud_t	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^typedef struct __mavlink_vfr_hud_t {$/;"	s
__mavlink_vicon_position_estimate_t	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^typedef struct __mavlink_vicon_position_estimate_t {$/;"	s
__mavlink_vision_position_estimate_t	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^typedef struct __mavlink_vision_position_estimate_t {$/;"	s
__mavlink_vision_speed_estimate_t	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^typedef struct __mavlink_vision_speed_estimate_t {$/;"	s
_mav_finalize_message_chan_send	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER void _mav_finalize_message_chan_send(mavlink_channel_t chan, uint8_t msgid, const char *packet,$/;"	f
_mav_put_char	lib/mavlink/1.0/protocol.h	128;"	d
_mav_put_char_array	lib/mavlink/1.0/protocol.h	/^static inline void _mav_put_char_array(char *buf, uint8_t wire_offset, const char *b, uint8_t array_length)$/;"	f
_mav_put_double	lib/mavlink/1.0/protocol.h	138;"	d
_mav_put_double	lib/mavlink/1.0/protocol.h	147;"	d
_mav_put_double	lib/mavlink/1.0/protocol.h	156;"	d
_mav_put_float	lib/mavlink/1.0/protocol.h	137;"	d
_mav_put_float	lib/mavlink/1.0/protocol.h	146;"	d
_mav_put_float	lib/mavlink/1.0/protocol.h	155;"	d
_mav_put_int16_t	lib/mavlink/1.0/protocol.h	132;"	d
_mav_put_int16_t	lib/mavlink/1.0/protocol.h	141;"	d
_mav_put_int16_t	lib/mavlink/1.0/protocol.h	150;"	d
_mav_put_int32_t	lib/mavlink/1.0/protocol.h	134;"	d
_mav_put_int32_t	lib/mavlink/1.0/protocol.h	143;"	d
_mav_put_int32_t	lib/mavlink/1.0/protocol.h	152;"	d
_mav_put_int64_t	lib/mavlink/1.0/protocol.h	136;"	d
_mav_put_int64_t	lib/mavlink/1.0/protocol.h	145;"	d
_mav_put_int64_t	lib/mavlink/1.0/protocol.h	154;"	d
_mav_put_int8_t	lib/mavlink/1.0/protocol.h	127;"	d
_mav_put_int8_t_array	lib/mavlink/1.0/protocol.h	/^static inline void _mav_put_int8_t_array(char *buf, uint8_t wire_offset, const int8_t *b, uint8_t array_length)$/;"	f
_mav_put_uint16_t	lib/mavlink/1.0/protocol.h	131;"	d
_mav_put_uint16_t	lib/mavlink/1.0/protocol.h	140;"	d
_mav_put_uint16_t	lib/mavlink/1.0/protocol.h	149;"	d
_mav_put_uint32_t	lib/mavlink/1.0/protocol.h	133;"	d
_mav_put_uint32_t	lib/mavlink/1.0/protocol.h	142;"	d
_mav_put_uint32_t	lib/mavlink/1.0/protocol.h	151;"	d
_mav_put_uint64_t	lib/mavlink/1.0/protocol.h	135;"	d
_mav_put_uint64_t	lib/mavlink/1.0/protocol.h	144;"	d
_mav_put_uint64_t	lib/mavlink/1.0/protocol.h	153;"	d
_mav_put_uint8_t	lib/mavlink/1.0/protocol.h	126;"	d
_mav_put_uint8_t_array	lib/mavlink/1.0/protocol.h	/^static inline void _mav_put_uint8_t_array(char *buf, uint8_t wire_offset, const uint8_t *b, uint8_t array_length)$/;"	f
_mavlink_resend_uart	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER void _mavlink_resend_uart(mavlink_channel_t chan, const mavlink_message_t *msg)$/;"	f
_mavlink_send_uart	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER void _mavlink_send_uart(mavlink_channel_t chan, const char *buf, uint16_t len)$/;"	f
abs_pressure	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float abs_pressure; \/\/\/< Absolute pressure in millibar$/;"	m	struct:__mavlink_highres_imu_t
abs_pressure	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float abs_pressure; \/\/\/< Absolute pressure in millibar$/;"	m	struct:__mavlink_hil_sensor_t
accu_id	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    uint8_t accu_id; \/\/\/< Accupack ID$/;"	m	struct:__mavlink_battery_status_t
ack	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^    uint8_t ack; \/\/\/< 0: ACK, 1: NACK: Wrong passkey, 2: NACK: Unsupported passkey encryption method, 3: NACK: Already under control$/;"	m	struct:__mavlink_change_operator_control_ack_t
address	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^    uint16_t address; \/\/\/< Starting address of the debug variables$/;"	m	struct:__mavlink_memory_vect_t
airspeed	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^    float airspeed; \/\/\/< Current airspeed in m\/s$/;"	m	struct:__mavlink_vfr_hud_t
alt	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^    int32_t alt; \/\/\/< Altitude in meters, expressed as * 1000 (millimeters), above MSL$/;"	m	struct:__mavlink_global_position_int_t
alt	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    int32_t alt; \/\/\/< Altitude (WGS84), in meters * 1000 (positive for up)$/;"	m	struct:__mavlink_gps2_raw_t
alt	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    int32_t alt; \/\/\/< Altitude (WGS84), in meters * 1000 (positive for up)$/;"	m	struct:__mavlink_gps_raw_int_t
alt	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    int32_t alt; \/\/\/< Altitude (WGS84), in meters * 1000 (positive for up)$/;"	m	struct:__mavlink_hil_gps_t
alt	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    int32_t alt; \/\/\/< Altitude in meters, expressed as * 1000 (millimeters)$/;"	m	struct:__mavlink_hil_state_t
alt	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    int32_t alt; \/\/\/< Altitude in meters, expressed as * 1000 (millimeters)$/;"	m	struct:__mavlink_hil_state_quaternion_t
alt	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float alt; \/\/\/< Altitude in meters$/;"	m	struct:__mavlink_sim_state_t
alt	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^    float alt; \/\/\/< Current altitude (MSL), in meters$/;"	m	struct:__mavlink_vfr_hud_t
alt_error	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^    float alt_error; \/\/\/< Current altitude error in meters$/;"	m	struct:__mavlink_nav_controller_output_t
altitude	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^    int32_t altitude; \/\/\/< Altitude (WGS84), in meters * 1000 (positive for up)$/;"	m	struct:__mavlink_global_position_setpoint_int_t
altitude	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^    int32_t altitude; \/\/\/< Altitude (WGS84), in meters * 1000 (positive for up)$/;"	m	struct:__mavlink_gps_global_origin_t
altitude	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^    int32_t altitude; \/\/\/< Altitude (WGS84), in meters * 1000 (positive for up)$/;"	m	struct:__mavlink_set_global_position_setpoint_int_t
altitude	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^    int32_t altitude; \/\/\/< Altitude (WGS84), in meters * 1000 (positive for up)$/;"	m	struct:__mavlink_set_gps_global_origin_t
array_length	lib/mavlink/1.0/mavlink_types.h	/^    unsigned int array_length;        \/\/ if non-zero, field is an array$/;"	m	struct:__mavlink_field_info
aspd_error	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^    float aspd_error; \/\/\/< Current airspeed error in meters\/second$/;"	m	struct:__mavlink_nav_controller_output_t
attitude_quaternion	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    float attitude_quaternion[4]; \/\/\/< Vehicle attitude expressed as normalized quaternion$/;"	m	struct:__mavlink_hil_state_quaternion_t
autocontinue	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    uint8_t autocontinue; \/\/\/< autocontinue to next wp$/;"	m	struct:__mavlink_mission_item_t
autopilot	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^    uint8_t autopilot; \/\/\/< Autopilot type \/ class. defined in MAV_AUTOPILOT ENUM$/;"	m	struct:__mavlink_heartbeat_t
aux1	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    float aux1; \/\/\/< Aux 1, -1 .. 1$/;"	m	struct:__mavlink_hil_controls_t
aux2	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    float aux2; \/\/\/< Aux 2, -1 .. 1$/;"	m	struct:__mavlink_hil_controls_t
aux3	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    float aux3; \/\/\/< Aux 3, -1 .. 1$/;"	m	struct:__mavlink_hil_controls_t
aux4	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    float aux4; \/\/\/< Aux 4, -1 .. 1$/;"	m	struct:__mavlink_hil_controls_t
base_mode	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^    uint8_t base_mode; \/\/\/< System mode bitfield, see MAV_MODE_FLAGS ENUM in mavlink\/include\/mavlink_types.h$/;"	m	struct:__mavlink_heartbeat_t
base_mode	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^    uint8_t base_mode; \/\/\/< The new base mode$/;"	m	struct:__mavlink_set_mode_t
base_msg	lib/mavlink/1.0/mavlink_types.h	/^    mavlink_message_t base_msg;$/;"	m	struct:__mavlink_extended_message
battery_remaining	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    int8_t battery_remaining; \/\/\/< Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot does not estimate the remaining battery$/;"	m	struct:__mavlink_battery_status_t
battery_remaining	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    int8_t battery_remaining; \/\/\/< Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot estimate the remaining battery$/;"	m	struct:__mavlink_sys_status_t
baudrate	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^    uint32_t baudrate; \/\/\/< Baudrate of transfer. Zero means no change.$/;"	m	struct:__mavlink_serial_control_t
buf0_task2	src/task2_videodata.h	/^        char buf0_task2[512] = {'\\0'};  $/;"	v
buf_task2	src/task2_videodata.h	/^        char buf_task2[512] = {'\\0'};  $/;"	v
buffer_overrun	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t buffer_overrun;             \/\/\/< Number of buffer overruns$/;"	m	struct:__mavlink_status
buttons	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^    uint16_t buttons; \/\/\/< A bitfield corresponding to the joystick buttons' current state, 1 for pressed, 0 for released. The lowest bit corresponds to Button 1.$/;"	m	struct:__mavlink_manual_control_t
byte_copy_2	lib/mavlink/1.0/protocol.h	/^static inline void byte_copy_2(char *dst, const char *src)$/;"	f
byte_copy_4	lib/mavlink/1.0/protocol.h	/^static inline void byte_copy_4(char *dst, const char *src)$/;"	f
byte_copy_8	lib/mavlink/1.0/protocol.h	/^static inline void byte_copy_8(char *dst, const char *src)$/;"	f
byte_swap_2	lib/mavlink/1.0/protocol.h	/^static inline void byte_swap_2(char *dst, const char *src)$/;"	f
byte_swap_4	lib/mavlink/1.0/protocol.h	/^static inline void byte_swap_4(char *dst, const char *src)$/;"	f
byte_swap_8	lib/mavlink/1.0/protocol.h	/^static inline void byte_swap_8(char *dst, const char *src)$/;"	f
bytes	lib/mavlink/1.0/mavlink_types.h	/^        uint8_t bytes[4];$/;"	m	union:param_union::__anon1
carrier_path	src/task2_videodata.h	/^       char carrier_path[512] = {'\\0'};  $/;"	v
chan10_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan10_raw; \/\/\/< RC channel 10 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan10_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan10_raw; \/\/\/< RC channel 10 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan11_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan11_raw; \/\/\/< RC channel 11 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan11_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan11_raw; \/\/\/< RC channel 11 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan12_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan12_raw; \/\/\/< RC channel 12 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan12_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan12_raw; \/\/\/< RC channel 12 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan13_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan13_raw; \/\/\/< RC channel 13 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan14_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan14_raw; \/\/\/< RC channel 14 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan15_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan15_raw; \/\/\/< RC channel 15 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan16_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan16_raw; \/\/\/< RC channel 16 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan17_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan17_raw; \/\/\/< RC channel 17 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan18_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan18_raw; \/\/\/< RC channel 18 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan1_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan1_raw; \/\/\/< RC channel 1 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan1_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan1_raw; \/\/\/< RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan1_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint16_t chan1_raw; \/\/\/< RC channel 1 value, in microseconds. A value of UINT16_MAX means to ignore this field.$/;"	m	struct:__mavlink_rc_channels_override_t
chan1_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint16_t chan1_raw; \/\/\/< RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_raw_t
chan1_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    int16_t chan1_scaled; \/\/\/< RC channel 1 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.$/;"	m	struct:__mavlink_rc_channels_scaled_t
chan2_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan2_raw; \/\/\/< RC channel 2 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan2_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan2_raw; \/\/\/< RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan2_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint16_t chan2_raw; \/\/\/< RC channel 2 value, in microseconds. A value of UINT16_MAX means to ignore this field.$/;"	m	struct:__mavlink_rc_channels_override_t
chan2_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint16_t chan2_raw; \/\/\/< RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_raw_t
chan2_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    int16_t chan2_scaled; \/\/\/< RC channel 2 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.$/;"	m	struct:__mavlink_rc_channels_scaled_t
chan3_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan3_raw; \/\/\/< RC channel 3 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan3_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan3_raw; \/\/\/< RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan3_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint16_t chan3_raw; \/\/\/< RC channel 3 value, in microseconds. A value of UINT16_MAX means to ignore this field.$/;"	m	struct:__mavlink_rc_channels_override_t
chan3_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint16_t chan3_raw; \/\/\/< RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_raw_t
chan3_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    int16_t chan3_scaled; \/\/\/< RC channel 3 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.$/;"	m	struct:__mavlink_rc_channels_scaled_t
chan4_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan4_raw; \/\/\/< RC channel 4 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan4_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan4_raw; \/\/\/< RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan4_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint16_t chan4_raw; \/\/\/< RC channel 4 value, in microseconds. A value of UINT16_MAX means to ignore this field.$/;"	m	struct:__mavlink_rc_channels_override_t
chan4_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint16_t chan4_raw; \/\/\/< RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_raw_t
chan4_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    int16_t chan4_scaled; \/\/\/< RC channel 4 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.$/;"	m	struct:__mavlink_rc_channels_scaled_t
chan5_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan5_raw; \/\/\/< RC channel 5 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan5_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan5_raw; \/\/\/< RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan5_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint16_t chan5_raw; \/\/\/< RC channel 5 value, in microseconds. A value of UINT16_MAX means to ignore this field.$/;"	m	struct:__mavlink_rc_channels_override_t
chan5_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint16_t chan5_raw; \/\/\/< RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_raw_t
chan5_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    int16_t chan5_scaled; \/\/\/< RC channel 5 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.$/;"	m	struct:__mavlink_rc_channels_scaled_t
chan6_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan6_raw; \/\/\/< RC channel 6 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan6_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan6_raw; \/\/\/< RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan6_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint16_t chan6_raw; \/\/\/< RC channel 6 value, in microseconds. A value of UINT16_MAX means to ignore this field.$/;"	m	struct:__mavlink_rc_channels_override_t
chan6_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint16_t chan6_raw; \/\/\/< RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_raw_t
chan6_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    int16_t chan6_scaled; \/\/\/< RC channel 6 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.$/;"	m	struct:__mavlink_rc_channels_scaled_t
chan7_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan7_raw; \/\/\/< RC channel 7 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan7_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan7_raw; \/\/\/< RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan7_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint16_t chan7_raw; \/\/\/< RC channel 7 value, in microseconds. A value of UINT16_MAX means to ignore this field.$/;"	m	struct:__mavlink_rc_channels_override_t
chan7_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint16_t chan7_raw; \/\/\/< RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_raw_t
chan7_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    int16_t chan7_scaled; \/\/\/< RC channel 7 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.$/;"	m	struct:__mavlink_rc_channels_scaled_t
chan8_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan8_raw; \/\/\/< RC channel 8 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan8_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan8_raw; \/\/\/< RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chan8_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint16_t chan8_raw; \/\/\/< RC channel 8 value, in microseconds. A value of UINT16_MAX means to ignore this field.$/;"	m	struct:__mavlink_rc_channels_override_t
chan8_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint16_t chan8_raw; \/\/\/< RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_raw_t
chan8_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    int16_t chan8_scaled; \/\/\/< RC channel 8 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.$/;"	m	struct:__mavlink_rc_channels_scaled_t
chan9_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint16_t chan9_raw; \/\/\/< RC channel 9 value, in microseconds$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
chan9_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint16_t chan9_raw; \/\/\/< RC channel 9 value, in microseconds. A value of UINT16_MAX implies the channel is unused.$/;"	m	struct:__mavlink_rc_channels_t
chancount	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint8_t chancount; \/\/\/< Total number of RC channels being received. This can be larger than 18, indicating that more channels are available but not given in this message. This value should be 0 when no RC channels are available.$/;"	m	struct:__mavlink_rc_channels_t
checksum	lib/mavlink/1.0/mavlink_types.h	/^    uint16_t checksum; \/\/\/ sent at end of packet$/;"	m	struct:__mavlink_message
climb	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^    float climb; \/\/\/< Current climb rate in meters\/second$/;"	m	struct:__mavlink_vfr_hud_t
cmd	src/task2_videodata.h	/^        u32    cmd;  $/;"	m	struct:ethtool_value
cog	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    uint16_t cog; \/\/\/< Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX$/;"	m	struct:__mavlink_gps2_raw_t
cog	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    uint16_t cog; \/\/\/< Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX$/;"	m	struct:__mavlink_gps_raw_int_t
cog	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    uint16_t cog; \/\/\/< Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: 65535$/;"	m	struct:__mavlink_hil_gps_t
command	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^    uint16_t command; \/\/\/< Command ID, as defined by MAV_CMD enum.$/;"	m	struct:__mavlink_command_ack_t
command	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    uint16_t command; \/\/\/< Command ID, as defined by MAV_CMD enum.$/;"	m	struct:__mavlink_command_long_t
command	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    uint16_t command; \/\/\/< The scheduled action for the MISSION. see MAV_CMD in common.xml MAVLink specs$/;"	m	struct:__mavlink_mission_item_t
command_id	src/task3_mavpddl.h	/^unsigned int command_id;$/;"	v
command_id_char	src/task3_mavpddl.h	/^char command_id_char;$/;"	v
compid	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t compid;  \/\/\/< ID of the message sender component$/;"	m	struct:__mavlink_message
compid	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t compid;  \/\/\/< Used by the MAVLink message_xx_send() convenience function$/;"	m	struct:__mavlink_system
confirmation	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    uint8_t confirmation; \/\/\/< 0: First transmission of this command. 1-255: Confirmation transmissions (e.g. for kill command)$/;"	m	struct:__mavlink_command_long_t
control_request	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^    uint8_t control_request; \/\/\/< 0: request control of this MAV, 1: Release control of this MAV$/;"	m	struct:__mavlink_change_operator_control_t
control_request	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^    uint8_t control_request; \/\/\/< 0: request control of this MAV, 1: Release control of this MAV$/;"	m	struct:__mavlink_change_operator_control_ack_t
coordinate_frame	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^    uint8_t coordinate_frame; \/\/\/< Coordinate frame - valid values are only MAV_FRAME_GLOBAL or MAV_FRAME_GLOBAL_RELATIVE_ALT$/;"	m	struct:__mavlink_global_position_setpoint_int_t
coordinate_frame	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^    uint8_t coordinate_frame; \/\/\/< Coordinate frame - valid values are only MAV_FRAME_LOCAL_NED or MAV_FRAME_LOCAL_ENU$/;"	m	struct:__mavlink_local_position_setpoint_t
coordinate_frame	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^    uint8_t coordinate_frame; \/\/\/< Coordinate frame - valid values are only MAV_FRAME_GLOBAL or MAV_FRAME_GLOBAL_RELATIVE_ALT$/;"	m	struct:__mavlink_set_global_position_setpoint_int_t
coordinate_frame	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^    uint8_t coordinate_frame; \/\/\/< Coordinate frame - valid values are only MAV_FRAME_LOCAL_NED or MAV_FRAME_LOCAL_ENU$/;"	m	struct:__mavlink_set_local_position_setpoint_t
count	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^    uint8_t count; \/\/\/< Number of bytes (zero for end of log)$/;"	m	struct:__mavlink_log_data_t
count	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^    uint32_t count; \/\/\/< Number of bytes$/;"	m	struct:__mavlink_log_request_data_t
count	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^    uint16_t count; \/\/\/< Number of mission items in the sequence$/;"	m	struct:__mavlink_mission_count_t
count	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^    uint8_t count; \/\/\/< how many bytes in this transfer$/;"	m	struct:__mavlink_serial_control_t
covariance	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^    uint8_t covariance; \/\/\/< Measurement covariance in centimeters, 0 for unknown \/ invalid readings$/;"	m	struct:__mavlink_distance_sensor_t
crc_accumulate	lib/mavlink/1.0/checksum.h	/^static inline void crc_accumulate(uint8_t data, uint16_t *crcAccum)$/;"	f
crc_accumulate_buffer	lib/mavlink/1.0/checksum.h	/^static inline void crc_accumulate_buffer(uint16_t *crcAccum, const char *pBuffer, uint8_t length)$/;"	f
crc_calculate	lib/mavlink/1.0/checksum.h	/^static inline uint16_t crc_calculate(const uint8_t* pBuffer, uint16_t length)$/;"	f
crc_init	lib/mavlink/1.0/checksum.h	/^static inline void crc_init(uint16_t* crcAccum)$/;"	f
current	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    uint8_t current; \/\/\/< false:0, true:1$/;"	m	struct:__mavlink_mission_item_t
current_battery	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    int16_t current_battery; \/\/\/< Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current$/;"	m	struct:__mavlink_battery_status_t
current_battery	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    int16_t current_battery; \/\/\/< Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current$/;"	m	struct:__mavlink_sys_status_t
current_consumed	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    int32_t current_consumed; \/\/\/< Consumed charge, in milliampere hours (1 = 1 mAh), -1: autopilot does not provide mAh consumption estimate$/;"	m	struct:__mavlink_battery_status_t
current_distance	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^    uint16_t current_distance; \/\/\/< Current distance reading$/;"	m	struct:__mavlink_distance_sensor_t
current_rx_seq	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t current_rx_seq;             \/\/\/< Sequence number of last packet received$/;"	m	struct:__mavlink_status
current_tx_seq	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t current_tx_seq;             \/\/\/< Sequence number of last packet sent$/;"	m	struct:__mavlink_status
custom_mode	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^    uint32_t custom_mode; \/\/\/< A bitfield for use for autopilot-specific flags.$/;"	m	struct:__mavlink_heartbeat_t
custom_mode	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^    uint32_t custom_mode; \/\/\/< The new autopilot-specific mode. This field can be ignored by an autopilot.$/;"	m	struct:__mavlink_set_mode_t
data	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^    uint8_t data[253]; \/\/\/< image data bytes$/;"	m	struct:__mavlink_encapsulated_data_t
data	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^    uint8_t data[110]; \/\/\/< raw data (110 is enough for 12 satellites of RTCMv2)$/;"	m	struct:__mavlink_gps_inject_data_t
data	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^    uint8_t data[90]; \/\/\/< log data$/;"	m	struct:__mavlink_log_data_t
data	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^    uint8_t data[70]; \/\/\/< serial data$/;"	m	struct:__mavlink_serial_control_t
data	src/task2_videodata.h	/^        u32    data;  $/;"	m	struct:ethtool_value
dest_path	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^    char dest_path[240]; \/\/\/< Destination path$/;"	m	struct:__mavlink_file_transfer_start_t
device	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^    uint8_t device; \/\/\/< See SERIAL_CONTROL_DEV enum$/;"	m	struct:__mavlink_serial_control_t
dgps_age	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    uint32_t dgps_age; \/\/\/< Age of DGPS info$/;"	m	struct:__mavlink_gps2_raw_t
dgps_numch	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    uint8_t dgps_numch; \/\/\/< Number of DGPS satellites$/;"	m	struct:__mavlink_gps2_raw_t
diff_pressure	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float diff_pressure; \/\/\/< Differential pressure in millibar$/;"	m	struct:__mavlink_highres_imu_t
diff_pressure	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float diff_pressure; \/\/\/< Differential pressure (airspeed) in millibar$/;"	m	struct:__mavlink_hil_sensor_t
dir_path	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^    char dir_path[240]; \/\/\/< Directory path to list$/;"	m	struct:__mavlink_file_transfer_dir_list_t
direction	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^    uint8_t direction; \/\/\/< Transfer direction: 0: from requester, 1: to requester$/;"	m	struct:__mavlink_file_transfer_start_t
drop_rate_comm	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint16_t drop_rate_comm; \/\/\/< Communication drops in percent, (0%: 0, 100%: 10'000), (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)$/;"	m	struct:__mavlink_sys_status_t
end	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^    uint16_t end; \/\/\/< Last log id (0xffff for last available)$/;"	m	struct:__mavlink_log_request_list_t
end_index	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^    int16_t end_index; \/\/\/< End index, -1 by default (-1: send list to end). Else a valid index of the list$/;"	m	struct:__mavlink_mission_request_partial_list_t
end_index	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^    int16_t end_index; \/\/\/< End index, equal or greater than start index.$/;"	m	struct:__mavlink_mission_write_partial_list_t
energy_consumed	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    int32_t energy_consumed; \/\/\/< Consumed energy, in 100*Joules (intergrated U*I*dt)  (1 = 100 Joule), -1: autopilot does not provide energy consumption estimate$/;"	m	struct:__mavlink_battery_status_t
eph	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    uint16_t eph; \/\/\/< GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: UINT16_MAX$/;"	m	struct:__mavlink_gps2_raw_t
eph	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    uint16_t eph; \/\/\/< GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: UINT16_MAX$/;"	m	struct:__mavlink_gps_raw_int_t
eph	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    uint16_t eph; \/\/\/< GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: 65535$/;"	m	struct:__mavlink_hil_gps_t
epv	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    uint16_t epv; \/\/\/< GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: UINT16_MAX$/;"	m	struct:__mavlink_gps2_raw_t
epv	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    uint16_t epv; \/\/\/< GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: UINT16_MAX$/;"	m	struct:__mavlink_gps_raw_int_t
epv	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    uint16_t epv; \/\/\/< GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: 65535$/;"	m	struct:__mavlink_hil_gps_t
errors_comm	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint16_t errors_comm; \/\/\/< Communication errors (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)$/;"	m	struct:__mavlink_sys_status_t
errors_count1	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint16_t errors_count1; \/\/\/< Autopilot-specific errors$/;"	m	struct:__mavlink_sys_status_t
errors_count2	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint16_t errors_count2; \/\/\/< Autopilot-specific errors$/;"	m	struct:__mavlink_sys_status_t
errors_count3	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint16_t errors_count3; \/\/\/< Autopilot-specific errors$/;"	m	struct:__mavlink_sys_status_t
errors_count4	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint16_t errors_count4; \/\/\/< Autopilot-specific errors$/;"	m	struct:__mavlink_sys_status_t
ethtool_value	src/task2_videodata.h	/^    struct ethtool_value  $/;"	s
extended_payload	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t extended_payload[MAVLINK_MAX_EXTENDED_PAYLOAD_LEN];$/;"	m	struct:__mavlink_extended_message
extended_payload_len	lib/mavlink/1.0/mavlink_types.h	/^    int32_t extended_payload_len;   \/\/\/< Length of extended payload if any$/;"	m	struct:__mavlink_extended_message
fd1	src/init.h	/^ int fd1; \/\/fd for serial task1$/;"	v
fields	lib/mavlink/1.0/mavlink_types.h	/^    mavlink_field_info_t fields[MAVLINK_MAX_FIELDS];       \/\/ field information$/;"	m	struct:__mavlink_message_info
fields_updated	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    uint16_t fields_updated; \/\/\/< Bitmask for fields that have updated since last message, bit 0 = xacc, bit 12: temperature$/;"	m	struct:__mavlink_highres_imu_t
fields_updated	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    uint32_t fields_updated; \/\/\/< Bitmask for fields that have updated since last message, bit 0 = xacc, bit 12: temperature$/;"	m	struct:__mavlink_hil_sensor_t
file_size	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^    uint32_t file_size; \/\/\/< File size in bytes$/;"	m	struct:__mavlink_file_transfer_start_t
fix_type	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    uint8_t fix_type; \/\/\/< 0-1: no fix, 2: 2D fix, 3: 3D fix. Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.$/;"	m	struct:__mavlink_gps2_raw_t
fix_type	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    uint8_t fix_type; \/\/\/< 0-1: no fix, 2: 2D fix, 3: 3D fix. Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.$/;"	m	struct:__mavlink_gps_raw_int_t
fix_type	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    uint8_t fix_type; \/\/\/< 0-1: no fix, 2: 2D fix, 3: 3D fix. Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.$/;"	m	struct:__mavlink_hil_gps_t
fixed	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^    uint16_t fixed; \/\/\/< count of error corrected packets$/;"	m	struct:__mavlink_radio_status_t
flag_eth0	src/task2_videodata.h	/^      unsigned  int flag_eth0=0xcc;$/;"	v
flag_network	src/task2_videodata.h	/^      unsigned int flag_network;$/;"	v
flag_usb0	src/task2_videodata.h	/^      unsigned int  flag_usb0=0xcc;$/;"	v
flags	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^    uint8_t flags; \/\/\/< RESERVED$/;"	m	struct:__mavlink_file_transfer_dir_list_t
flags	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^    uint8_t flags; \/\/\/< RESERVED$/;"	m	struct:__mavlink_file_transfer_start_t
flags	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^    uint16_t flags; \/\/\/< power supply status flags (see MAV_POWER_STATUS enum)$/;"	m	struct:__mavlink_power_status_t
flags	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^    uint8_t flags; \/\/\/< See SERIAL_CONTROL_FLAG enum$/;"	m	struct:__mavlink_serial_control_t
flow_comp_m_x	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^    float flow_comp_m_x; \/\/\/< Flow in meters in x-sensor direction, angular-speed compensated$/;"	m	struct:__mavlink_hil_optical_flow_t
flow_comp_m_x	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^    float flow_comp_m_x; \/\/\/< Flow in meters in x-sensor direction, angular-speed compensated$/;"	m	struct:__mavlink_optical_flow_t
flow_comp_m_y	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^    float flow_comp_m_y; \/\/\/< Flow in meters in y-sensor direction, angular-speed compensated$/;"	m	struct:__mavlink_hil_optical_flow_t
flow_comp_m_y	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^    float flow_comp_m_y; \/\/\/< Flow in meters in y-sensor direction, angular-speed compensated$/;"	m	struct:__mavlink_optical_flow_t
flow_x	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^    int16_t flow_x; \/\/\/< Flow in pixels in x-sensor direction$/;"	m	struct:__mavlink_hil_optical_flow_t
flow_x	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^    int16_t flow_x; \/\/\/< Flow in pixels * 10 in x-sensor direction (dezi-pixels)$/;"	m	struct:__mavlink_optical_flow_t
flow_y	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^    int16_t flow_y; \/\/\/< Flow in pixels in y-sensor direction$/;"	m	struct:__mavlink_hil_optical_flow_t
flow_y	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^    int16_t flow_y; \/\/\/< Flow in pixels * 10 in y-sensor direction (dezi-pixels)$/;"	m	struct:__mavlink_optical_flow_t
fp0_task2	src/task2_videodata.h	/^        FILE *fp0_task2;  $/;"	v
fp1_task2	src/task2_videodata.h	/^        FILE *fp1_task2;  $/;"	v
fp3	src/task3_mavpddl.h	/^FILE *fp3;$/;"	v
frame	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    uint8_t frame; \/\/\/< The coordinate system of the MISSION. see MAV_FRAME in mavlink_types.h$/;"	m	struct:__mavlink_mission_item_t
frame	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^    uint8_t frame; \/\/\/< Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.$/;"	m	struct:__mavlink_safety_allowed_area_t
frame	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^    uint8_t frame; \/\/\/< Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.$/;"	m	struct:__mavlink_safety_set_allowed_area_t
fromlen	src/task1_mavdata.h	/^   static socklen_t fromlen;$/;"	v
front_distance_m	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^    float front_distance_m; \/\/\/< Front distance in meters. Positive value (including zero): distance known. Negative value: Unknown distance$/;"	m	struct:__mavlink_omnidirectional_flow_t
gcAddr	src/main.c	/^struct sockaddr_in gcAddr; $/;"	v	typeref:struct:sockaddr_in
gcs_system_id	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^    uint8_t gcs_system_id; \/\/\/< ID of the GCS this message$/;"	m	struct:__mavlink_change_operator_control_ack_t
ground_distance	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^    float ground_distance; \/\/\/< Ground distance in meters. Positive value: distance known. Negative value: Unknown distance$/;"	m	struct:__mavlink_hil_optical_flow_t
ground_distance	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^    float ground_distance; \/\/\/< Ground distance in meters. Positive value: distance known. Negative value: Unknown distance$/;"	m	struct:__mavlink_optical_flow_t
groundspeed	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^    float groundspeed; \/\/\/< Current ground speed in m\/s$/;"	m	struct:__mavlink_vfr_hud_t
group	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^    uint8_t group; \/\/\/< ID of the quadrotor group (0 - 255, up to 256 groups supported)$/;"	m	struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
group	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^    uint8_t group; \/\/\/< ID of the quadrotor group (0 - 255, up to 256 groups supported)$/;"	m	struct:__mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t
groupe	lib/mavlink/1.0/mavlink_types.h	/^    } groupe;$/;"	m	struct:param_union	typeref:union:param_union::__anon1
hdg	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^    uint16_t hdg; \/\/\/< Compass heading in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX$/;"	m	struct:__mavlink_global_position_int_t
heading	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^    int16_t heading; \/\/\/< Current heading in degrees, in compass units (0..360, 0=north)$/;"	m	struct:__mavlink_vfr_hud_t
height	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^    uint16_t height; \/\/\/< Height of a matrix or image$/;"	m	struct:__mavlink_data_transmission_handshake_t
id	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^    uint8_t id; \/\/\/< Onboard ID of the sensor$/;"	m	struct:__mavlink_distance_sensor_t
id	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^    uint16_t id; \/\/\/< Log id (from LOG_ENTRY reply)$/;"	m	struct:__mavlink_log_data_t
id	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^    uint16_t id; \/\/\/< Log id$/;"	m	struct:__mavlink_log_entry_t
id	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^    uint16_t id; \/\/\/< Log id (from LOG_ENTRY reply)$/;"	m	struct:__mavlink_log_request_data_t
ind	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^    uint8_t ind; \/\/\/< index of debug variable$/;"	m	struct:__mavlink_debug_t
ind_airspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    uint16_t ind_airspeed; \/\/\/< Indicated airspeed, expressed as m\/s * 100$/;"	m	struct:__mavlink_hil_state_quaternion_t
init	src/init.c	/^int init(char *ip,struct sockaddr_in *a, struct sockaddr_in *b)$/;"	f
int16	lib/mavlink/1.0/mavlink_helpers.h	/^    int16_t int16;$/;"	m	union:__mavlink_bitfield
int32	lib/mavlink/1.0/mavlink_helpers.h	/^    int32_t int32;$/;"	m	union:__mavlink_bitfield
int8	lib/mavlink/1.0/mavlink_helpers.h	/^    int8_t int8;$/;"	m	union:__mavlink_bitfield
jpg_quality	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^    uint8_t jpg_quality; \/\/\/< JPEG quality out of [1,100]$/;"	m	struct:__mavlink_data_transmission_handshake_t
key	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^    char key[32]; \/\/\/< key$/;"	m	struct:__mavlink_auth_key_t
last_log_num	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^    uint16_t last_log_num; \/\/\/< High log number$/;"	m	struct:__mavlink_log_entry_t
lat	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^    int32_t lat; \/\/\/< Latitude, expressed as * 1E7$/;"	m	struct:__mavlink_global_position_int_t
lat	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    int32_t lat; \/\/\/< Latitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_gps2_raw_t
lat	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    int32_t lat; \/\/\/< Latitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_gps_raw_int_t
lat	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    int32_t lat; \/\/\/< Latitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_hil_gps_t
lat	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    int32_t lat; \/\/\/< Latitude, expressed as * 1E7$/;"	m	struct:__mavlink_hil_state_t
lat	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    int32_t lat; \/\/\/< Latitude, expressed as * 1E7$/;"	m	struct:__mavlink_hil_state_quaternion_t
lat	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float lat; \/\/\/< Latitude in degrees$/;"	m	struct:__mavlink_sim_state_t
latitude	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^    int32_t latitude; \/\/\/< Latitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_global_position_setpoint_int_t
latitude	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^    int32_t latitude; \/\/\/< Latitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_gps_global_origin_t
latitude	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^    int32_t latitude; \/\/\/< Latitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_set_global_position_setpoint_int_t
latitude	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^    int32_t latitude; \/\/\/< Latitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_set_gps_global_origin_t
led_blue	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^    uint8_t led_blue[4]; \/\/\/< RGB green channel (0-255)$/;"	m	struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
led_green	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^    uint8_t led_green[4]; \/\/\/< RGB blue channel (0-255)$/;"	m	struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
led_red	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^    uint8_t led_red[4]; \/\/\/< RGB red channel (0-255)$/;"	m	struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
left	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^    int16_t left[10]; \/\/\/< Flow in deci pixels (1 = 0.1 pixel) on left hemisphere$/;"	m	struct:__mavlink_omnidirectional_flow_t
len	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^    uint8_t len; \/\/\/< data length$/;"	m	struct:__mavlink_gps_inject_data_t
len	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t len;     \/\/\/< Length of payload$/;"	m	struct:__mavlink_message
len_task3	src/task3_mavpddl.h	/^ uint16_t  len_task3;$/;"	v
load	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint16_t load; \/\/\/< Maximum usage in percent of the mainloop time, (0%: 0, 100%: 1000) should be always below 1000$/;"	m	struct:__mavlink_sys_status_t
locAddr	src/main.c	/^struct sockaddr_in locAddr;$/;"	v	typeref:struct:sockaddr_in
lon	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^    int32_t lon; \/\/\/< Longitude, expressed as * 1E7$/;"	m	struct:__mavlink_global_position_int_t
lon	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    int32_t lon; \/\/\/< Longitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_gps2_raw_t
lon	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    int32_t lon; \/\/\/< Longitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_gps_raw_int_t
lon	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    int32_t lon; \/\/\/< Longitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_hil_gps_t
lon	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    int32_t lon; \/\/\/< Longitude, expressed as * 1E7$/;"	m	struct:__mavlink_hil_state_t
lon	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    int32_t lon; \/\/\/< Longitude, expressed as * 1E7$/;"	m	struct:__mavlink_hil_state_quaternion_t
lon	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float lon; \/\/\/< Longitude in degrees$/;"	m	struct:__mavlink_sim_state_t
longitude	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^    int32_t longitude; \/\/\/< Longitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_global_position_setpoint_int_t
longitude	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^    int32_t longitude; \/\/\/< Longitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_gps_global_origin_t
longitude	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^    int32_t longitude; \/\/\/< Longitude (WGS84), in degrees * 1E7$/;"	m	struct:__mavlink_set_global_position_setpoint_int_t
longitude	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^    int32_t longitude; \/\/\/< Longitude (WGS84, in degrees * 1E7$/;"	m	struct:__mavlink_set_gps_global_origin_t
magic	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t magic;   \/\/\/< protocol magic marker$/;"	m	struct:__mavlink_message
main	src/main.c	/^int main()$/;"	f
manual_override_switch	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^    uint8_t manual_override_switch; \/\/\/< Override mode switch position, 0.. 255$/;"	m	struct:__mavlink_manual_setpoint_t
mav_array_memcpy	lib/mavlink/1.0/protocol.h	/^static inline void mav_array_memcpy(void *dest, const void *src, size_t n)$/;"	f
mavlink_attitude_quaternion_t	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^} mavlink_attitude_quaternion_t;$/;"	t	typeref:struct:__mavlink_attitude_quaternion_t
mavlink_attitude_t	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^} mavlink_attitude_t;$/;"	t	typeref:struct:__mavlink_attitude_t
mavlink_auth_key_t	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^} mavlink_auth_key_t;$/;"	t	typeref:struct:__mavlink_auth_key_t
mavlink_battery_status_t	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^} mavlink_battery_status_t;$/;"	t	typeref:struct:__mavlink_battery_status_t
mavlink_change_operator_control_ack_t	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^} mavlink_change_operator_control_ack_t;$/;"	t	typeref:struct:__mavlink_change_operator_control_ack_t
mavlink_change_operator_control_t	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^} mavlink_change_operator_control_t;$/;"	t	typeref:struct:__mavlink_change_operator_control_t
mavlink_channel_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_channel_t;$/;"	t	typeref:enum:__anon3
mavlink_ck_a	lib/mavlink/1.0/mavlink_types.h	108;"	d
mavlink_ck_b	lib/mavlink/1.0/mavlink_types.h	109;"	d
mavlink_command_ack_t	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^} mavlink_command_ack_t;$/;"	t	typeref:struct:__mavlink_command_ack_t
mavlink_command_long_t	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^} mavlink_command_long_t;$/;"	t	typeref:struct:__mavlink_command_long_t
mavlink_data_stream_t	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^} mavlink_data_stream_t;$/;"	t	typeref:struct:__mavlink_data_stream_t
mavlink_data_transmission_handshake_t	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^} mavlink_data_transmission_handshake_t;$/;"	t	typeref:struct:__mavlink_data_transmission_handshake_t
mavlink_dcm_to_euler	lib/mavlink/1.0/mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_dcm_to_euler(float dcm[3][3], float* roll, float* pitch, float* yaw)$/;"	f
mavlink_dcm_to_quaternion	lib/mavlink/1.0/mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_dcm_to_quaternion(const float dcm[3][3], float quaternion[4])$/;"	f
mavlink_debug_t	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^} mavlink_debug_t;$/;"	t	typeref:struct:__mavlink_debug_t
mavlink_debug_vect_t	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^} mavlink_debug_vect_t;$/;"	t	typeref:struct:__mavlink_debug_vect_t
mavlink_distance_sensor_t	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^} mavlink_distance_sensor_t;$/;"	t	typeref:struct:__mavlink_distance_sensor_t
mavlink_encapsulated_data_t	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^} mavlink_encapsulated_data_t;$/;"	t	typeref:struct:__mavlink_encapsulated_data_t
mavlink_euler_to_dcm	lib/mavlink/1.0/mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_euler_to_dcm(float roll, float pitch, float yaw, float dcm[3][3])$/;"	f
mavlink_euler_to_quaternion	lib/mavlink/1.0/mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_euler_to_quaternion(float roll, float pitch, float yaw, float quaternion[4])$/;"	f
mavlink_extended_message_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_extended_message_t;$/;"	t	typeref:struct:__mavlink_extended_message
mavlink_field_info_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_field_info_t;$/;"	t	typeref:struct:__mavlink_field_info
mavlink_file_transfer_dir_list_t	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^} mavlink_file_transfer_dir_list_t;$/;"	t	typeref:struct:__mavlink_file_transfer_dir_list_t
mavlink_file_transfer_res_t	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^} mavlink_file_transfer_res_t;$/;"	t	typeref:struct:__mavlink_file_transfer_res_t
mavlink_file_transfer_start_t	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^} mavlink_file_transfer_start_t;$/;"	t	typeref:struct:__mavlink_file_transfer_start_t
mavlink_finalize_message	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER uint16_t mavlink_finalize_message(mavlink_message_t* msg, uint8_t system_id, uint8_t component_id, uint8_t length)$/;"	f
mavlink_finalize_message	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER uint16_t mavlink_finalize_message(mavlink_message_t* msg, uint8_t system_id, uint8_t component_id,$/;"	f
mavlink_finalize_message_chan	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER uint16_t mavlink_finalize_message_chan(mavlink_message_t* msg, uint8_t system_id, uint8_t component_id,$/;"	f
mavlink_get_channel_buffer	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER mavlink_message_t* mavlink_get_channel_buffer(uint8_t chan)$/;"	f
mavlink_get_channel_status	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER mavlink_status_t* mavlink_get_channel_status(uint8_t chan)$/;"	f
mavlink_global_position_int_t	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^} mavlink_global_position_int_t;$/;"	t	typeref:struct:__mavlink_global_position_int_t
mavlink_global_position_setpoint_int_t	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^} mavlink_global_position_setpoint_int_t;$/;"	t	typeref:struct:__mavlink_global_position_setpoint_int_t
mavlink_global_vision_position_estimate_t	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^} mavlink_global_vision_position_estimate_t;$/;"	t	typeref:struct:__mavlink_global_vision_position_estimate_t
mavlink_gps2_raw_t	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^} mavlink_gps2_raw_t;$/;"	t	typeref:struct:__mavlink_gps2_raw_t
mavlink_gps_global_origin_t	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^} mavlink_gps_global_origin_t;$/;"	t	typeref:struct:__mavlink_gps_global_origin_t
mavlink_gps_inject_data_t	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^} mavlink_gps_inject_data_t;$/;"	t	typeref:struct:__mavlink_gps_inject_data_t
mavlink_gps_raw_int_t	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^} mavlink_gps_raw_int_t;$/;"	t	typeref:struct:__mavlink_gps_raw_int_t
mavlink_gps_status_t	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^} mavlink_gps_status_t;$/;"	t	typeref:struct:__mavlink_gps_status_t
mavlink_heartbeat_t	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^} mavlink_heartbeat_t;$/;"	t	typeref:struct:__mavlink_heartbeat_t
mavlink_highres_imu_t	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^} mavlink_highres_imu_t;$/;"	t	typeref:struct:__mavlink_highres_imu_t
mavlink_hil_controls_t	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^} mavlink_hil_controls_t;$/;"	t	typeref:struct:__mavlink_hil_controls_t
mavlink_hil_gps_t	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^} mavlink_hil_gps_t;$/;"	t	typeref:struct:__mavlink_hil_gps_t
mavlink_hil_optical_flow_t	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^} mavlink_hil_optical_flow_t;$/;"	t	typeref:struct:__mavlink_hil_optical_flow_t
mavlink_hil_rc_inputs_raw_t	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^} mavlink_hil_rc_inputs_raw_t;$/;"	t	typeref:struct:__mavlink_hil_rc_inputs_raw_t
mavlink_hil_sensor_t	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^} mavlink_hil_sensor_t;$/;"	t	typeref:struct:__mavlink_hil_sensor_t
mavlink_hil_state_quaternion_t	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^} mavlink_hil_state_quaternion_t;$/;"	t	typeref:struct:__mavlink_hil_state_quaternion_t
mavlink_hil_state_t	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^} mavlink_hil_state_t;$/;"	t	typeref:struct:__mavlink_hil_state_t
mavlink_local_position_ned_system_global_offset_t	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^} mavlink_local_position_ned_system_global_offset_t;$/;"	t	typeref:struct:__mavlink_local_position_ned_system_global_offset_t
mavlink_local_position_ned_t	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^} mavlink_local_position_ned_t;$/;"	t	typeref:struct:__mavlink_local_position_ned_t
mavlink_local_position_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^} mavlink_local_position_setpoint_t;$/;"	t	typeref:struct:__mavlink_local_position_setpoint_t
mavlink_log_data_t	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^} mavlink_log_data_t;$/;"	t	typeref:struct:__mavlink_log_data_t
mavlink_log_entry_t	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^} mavlink_log_entry_t;$/;"	t	typeref:struct:__mavlink_log_entry_t
mavlink_log_erase_t	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^} mavlink_log_erase_t;$/;"	t	typeref:struct:__mavlink_log_erase_t
mavlink_log_request_data_t	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^} mavlink_log_request_data_t;$/;"	t	typeref:struct:__mavlink_log_request_data_t
mavlink_log_request_end_t	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^} mavlink_log_request_end_t;$/;"	t	typeref:struct:__mavlink_log_request_end_t
mavlink_log_request_list_t	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^} mavlink_log_request_list_t;$/;"	t	typeref:struct:__mavlink_log_request_list_t
mavlink_manual_control_t	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^} mavlink_manual_control_t;$/;"	t	typeref:struct:__mavlink_manual_control_t
mavlink_manual_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^} mavlink_manual_setpoint_t;$/;"	t	typeref:struct:__mavlink_manual_setpoint_t
mavlink_memory_vect_t	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^} mavlink_memory_vect_t;$/;"	t	typeref:struct:__mavlink_memory_vect_t
mavlink_message_info_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_message_info_t;$/;"	t	typeref:struct:__mavlink_message_info
mavlink_message_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_message_t;$/;"	t	typeref:struct:__mavlink_message
mavlink_message_type_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_message_type_t;$/;"	t	typeref:enum:__anon2
mavlink_mission_ack_t	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^} mavlink_mission_ack_t;$/;"	t	typeref:struct:__mavlink_mission_ack_t
mavlink_mission_clear_all_t	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^} mavlink_mission_clear_all_t;$/;"	t	typeref:struct:__mavlink_mission_clear_all_t
mavlink_mission_count_t	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^} mavlink_mission_count_t;$/;"	t	typeref:struct:__mavlink_mission_count_t
mavlink_mission_current_t	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^} mavlink_mission_current_t;$/;"	t	typeref:struct:__mavlink_mission_current_t
mavlink_mission_item_reached_t	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^} mavlink_mission_item_reached_t;$/;"	t	typeref:struct:__mavlink_mission_item_reached_t
mavlink_mission_item_t	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^} mavlink_mission_item_t;$/;"	t	typeref:struct:__mavlink_mission_item_t
mavlink_mission_request_list_t	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^} mavlink_mission_request_list_t;$/;"	t	typeref:struct:__mavlink_mission_request_list_t
mavlink_mission_request_partial_list_t	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^} mavlink_mission_request_partial_list_t;$/;"	t	typeref:struct:__mavlink_mission_request_partial_list_t
mavlink_mission_request_t	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^} mavlink_mission_request_t;$/;"	t	typeref:struct:__mavlink_mission_request_t
mavlink_mission_set_current_t	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^} mavlink_mission_set_current_t;$/;"	t	typeref:struct:__mavlink_mission_set_current_t
mavlink_mission_write_partial_list_t	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^} mavlink_mission_write_partial_list_t;$/;"	t	typeref:struct:__mavlink_mission_write_partial_list_t
mavlink_msg_attitude_decode	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline void mavlink_msg_attitude_decode(const mavlink_message_t* msg, mavlink_attitude_t* attitude)$/;"	f
mavlink_msg_attitude_encode	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline uint16_t mavlink_msg_attitude_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_attitude_t* attitude)$/;"	f
mavlink_msg_attitude_encode_chan	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline uint16_t mavlink_msg_attitude_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_attitude_t* attitude)$/;"	f
mavlink_msg_attitude_get_pitch	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_pitchspeed	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_pitchspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_roll	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_rollspeed	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_rollspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline uint32_t mavlink_msg_attitude_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_yaw	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_yawspeed	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_yawspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_pack	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline uint16_t mavlink_msg_attitude_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_pack_chan	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline uint16_t mavlink_msg_attitude_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_quaternion_decode	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline void mavlink_msg_attitude_quaternion_decode(const mavlink_message_t* msg, mavlink_attitude_quaternion_t* attitude_quaternion)$/;"	f
mavlink_msg_attitude_quaternion_encode	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_attitude_quaternion_t* attitude_quaternion)$/;"	f
mavlink_msg_attitude_quaternion_encode_chan	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_attitude_quaternion_t* attitude_quaternion)$/;"	f
mavlink_msg_attitude_quaternion_get_pitchspeed	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_pitchspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_q1	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_q1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_q2	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_q2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_q3	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_q3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_q4	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_q4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_rollspeed	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_rollspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline uint32_t mavlink_msg_attitude_quaternion_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_yawspeed	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_yawspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_pack	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, float q1, float q2, float q3, float q4, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_quaternion_pack_chan	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, float q1, float q2, float q3, float q4, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_quaternion_send	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline void mavlink_msg_attitude_quaternion_send(mavlink_channel_t chan, uint32_t time_boot_ms, float q1, float q2, float q3, float q4, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_quaternion_send_buf	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^static inline void mavlink_msg_attitude_quaternion_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, float q1, float q2, float q3, float q4, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_send	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline void mavlink_msg_attitude_send(mavlink_channel_t chan, uint32_t time_boot_ms, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_send_buf	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^static inline void mavlink_msg_attitude_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_auth_key_decode	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^static inline void mavlink_msg_auth_key_decode(const mavlink_message_t* msg, mavlink_auth_key_t* auth_key)$/;"	f
mavlink_msg_auth_key_encode	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_auth_key_t* auth_key)$/;"	f
mavlink_msg_auth_key_encode_chan	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_auth_key_t* auth_key)$/;"	f
mavlink_msg_auth_key_get_key	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_get_key(const mavlink_message_t* msg, char *key)$/;"	f
mavlink_msg_auth_key_pack	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const char *key)$/;"	f
mavlink_msg_auth_key_pack_chan	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const char *key)$/;"	f
mavlink_msg_auth_key_send	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^static inline void mavlink_msg_auth_key_send(mavlink_channel_t chan, const char *key)$/;"	f
mavlink_msg_auth_key_send_buf	lib/mavlink/1.0/common/mavlink_msg_auth_key.h	/^static inline void mavlink_msg_auth_key_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, const char *key)$/;"	f
mavlink_msg_battery_status_decode	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline void mavlink_msg_battery_status_decode(const mavlink_message_t* msg, mavlink_battery_status_t* battery_status)$/;"	f
mavlink_msg_battery_status_encode	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_battery_status_t* battery_status)$/;"	f
mavlink_msg_battery_status_encode_chan	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_battery_status_t* battery_status)$/;"	f
mavlink_msg_battery_status_get_accu_id	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint8_t mavlink_msg_battery_status_get_accu_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_battery_remaining	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline int8_t mavlink_msg_battery_status_get_battery_remaining(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_current_battery	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline int16_t mavlink_msg_battery_status_get_current_battery(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_current_consumed	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline int32_t mavlink_msg_battery_status_get_current_consumed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_energy_consumed	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline int32_t mavlink_msg_battery_status_get_energy_consumed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_voltage_cell_1	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_get_voltage_cell_1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_voltage_cell_2	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_get_voltage_cell_2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_voltage_cell_3	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_get_voltage_cell_3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_voltage_cell_4	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_get_voltage_cell_4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_voltage_cell_5	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_get_voltage_cell_5(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_voltage_cell_6	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_get_voltage_cell_6(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_pack	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t accu_id, uint16_t voltage_cell_1, uint16_t voltage_cell_2, uint16_t voltage_cell_3, uint16_t voltage_cell_4, uint16_t voltage_cell_5,$/;"	f
mavlink_msg_battery_status_pack_chan	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t accu_id, uint16_t voltage_cell_1, uint16_t voltage_cell_2, uint16_t voltage_cell_3, uint16_t voltage_cell_4, uint16_t voltage_cell_5,$/;"	f
mavlink_msg_battery_status_send	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline void mavlink_msg_battery_status_send(mavlink_channel_t chan, uint8_t accu_id, uint16_t voltage_cell_1, uint16_t voltage_cell_2, uint16_t voltage_cell_3, uint16_t voltage_cell_4, uint16_t voltage_cell_5, uint16_t voltage_cell_6, int16_t current_battery, int32_t current_consumed, int32_t energy_consumed, int8_t battery_remaining)$/;"	f
mavlink_msg_battery_status_send_buf	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^static inline void mavlink_msg_battery_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t accu_id, uint16_t voltage_cell_1, uint16_t voltage_cell_2, uint16_t voltage_cell_3, uint16_t voltage_cell_4, uint16_t voltage_cell_5, uint16_t voltage_cell_6, int16_t current_battery, int32_t current_consumed, int32_t energy_consumed, int8_t battery_remaining)$/;"	f
mavlink_msg_change_operator_control_ack_decode	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline void mavlink_msg_change_operator_control_ack_decode(const mavlink_message_t* msg, mavlink_change_operator_control_ack_t* change_operator_control_ack)$/;"	f
mavlink_msg_change_operator_control_ack_encode	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline uint16_t mavlink_msg_change_operator_control_ack_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_change_operator_control_ack_t* change_operator_control_ack)$/;"	f
mavlink_msg_change_operator_control_ack_encode_chan	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline uint16_t mavlink_msg_change_operator_control_ack_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_change_operator_control_ack_t* change_operator_control_ack)$/;"	f
mavlink_msg_change_operator_control_ack_get_ack	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline uint8_t mavlink_msg_change_operator_control_ack_get_ack(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_ack_get_control_request	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline uint8_t mavlink_msg_change_operator_control_ack_get_control_request(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_ack_get_gcs_system_id	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline uint8_t mavlink_msg_change_operator_control_ack_get_gcs_system_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_ack_pack	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline uint16_t mavlink_msg_change_operator_control_ack_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t gcs_system_id, uint8_t control_request, uint8_t ack)$/;"	f
mavlink_msg_change_operator_control_ack_pack_chan	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline uint16_t mavlink_msg_change_operator_control_ack_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t gcs_system_id, uint8_t control_request, uint8_t ack)$/;"	f
mavlink_msg_change_operator_control_ack_send	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline void mavlink_msg_change_operator_control_ack_send(mavlink_channel_t chan, uint8_t gcs_system_id, uint8_t control_request, uint8_t ack)$/;"	f
mavlink_msg_change_operator_control_ack_send_buf	lib/mavlink/1.0/common/mavlink_msg_change_operator_control_ack.h	/^static inline void mavlink_msg_change_operator_control_ack_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t gcs_system_id, uint8_t control_request, uint8_t ack)$/;"	f
mavlink_msg_change_operator_control_decode	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline void mavlink_msg_change_operator_control_decode(const mavlink_message_t* msg, mavlink_change_operator_control_t* change_operator_control)$/;"	f
mavlink_msg_change_operator_control_encode	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_change_operator_control_t* change_operator_control)$/;"	f
mavlink_msg_change_operator_control_encode_chan	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_change_operator_control_t* change_operator_control)$/;"	f
mavlink_msg_change_operator_control_get_control_request	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline uint8_t mavlink_msg_change_operator_control_get_control_request(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_get_passkey	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_get_passkey(const mavlink_message_t* msg, char *passkey)$/;"	f
mavlink_msg_change_operator_control_get_target_system	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline uint8_t mavlink_msg_change_operator_control_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_get_version	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline uint8_t mavlink_msg_change_operator_control_get_version(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_pack	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t control_request, uint8_t version, const char *passkey)$/;"	f
mavlink_msg_change_operator_control_pack_chan	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t control_request, uint8_t version, const char *passkey)$/;"	f
mavlink_msg_change_operator_control_send	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline void mavlink_msg_change_operator_control_send(mavlink_channel_t chan, uint8_t target_system, uint8_t control_request, uint8_t version, const char *passkey)$/;"	f
mavlink_msg_change_operator_control_send_buf	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^static inline void mavlink_msg_change_operator_control_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t control_request, uint8_t version, const char *passkey)$/;"	f
mavlink_msg_command_ack_decode	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^static inline void mavlink_msg_command_ack_decode(const mavlink_message_t* msg, mavlink_command_ack_t* command_ack)$/;"	f
mavlink_msg_command_ack_encode	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_command_ack_t* command_ack)$/;"	f
mavlink_msg_command_ack_encode_chan	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_command_ack_t* command_ack)$/;"	f
mavlink_msg_command_ack_get_command	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_get_command(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_ack_get_result	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^static inline uint8_t mavlink_msg_command_ack_get_result(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_ack_pack	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint16_t command, uint8_t result)$/;"	f
mavlink_msg_command_ack_pack_chan	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint16_t command, uint8_t result)$/;"	f
mavlink_msg_command_ack_send	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^static inline void mavlink_msg_command_ack_send(mavlink_channel_t chan, uint16_t command, uint8_t result)$/;"	f
mavlink_msg_command_ack_send_buf	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^static inline void mavlink_msg_command_ack_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint16_t command, uint8_t result)$/;"	f
mavlink_msg_command_long_decode	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline void mavlink_msg_command_long_decode(const mavlink_message_t* msg, mavlink_command_long_t* command_long)$/;"	f
mavlink_msg_command_long_encode	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_command_long_t* command_long)$/;"	f
mavlink_msg_command_long_encode_chan	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_command_long_t* command_long)$/;"	f
mavlink_msg_command_long_get_command	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_get_command(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_confirmation	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline uint8_t mavlink_msg_command_long_get_confirmation(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param1	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param2	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param3	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param4	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param5	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param5(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param6	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param6(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param7	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param7(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_target_component	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline uint8_t mavlink_msg_command_long_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_target_system	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline uint8_t mavlink_msg_command_long_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_pack	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t command, uint8_t confirmation, float param1, float param2, float param3, float param4, float param5,$/;"	f
mavlink_msg_command_long_pack_chan	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t command, uint8_t confirmation, float param1, float param2, float param3,$/;"	f
mavlink_msg_command_long_send	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline void mavlink_msg_command_long_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t command, uint8_t confirmation, float param1, float param2, float param3, float param4, float param5, float param6, float param7)$/;"	f
mavlink_msg_command_long_send_buf	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^static inline void mavlink_msg_command_long_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t command, uint8_t confirmation, float param1, float param2, float param3, float param4, float param5, float param6, float param7)$/;"	f
mavlink_msg_data_stream_decode	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline void mavlink_msg_data_stream_decode(const mavlink_message_t* msg, mavlink_data_stream_t* data_stream)$/;"	f
mavlink_msg_data_stream_encode	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_data_stream_t* data_stream)$/;"	f
mavlink_msg_data_stream_encode_chan	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_data_stream_t* data_stream)$/;"	f
mavlink_msg_data_stream_get_message_rate	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_get_message_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_stream_get_on_off	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline uint8_t mavlink_msg_data_stream_get_on_off(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_stream_get_stream_id	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline uint8_t mavlink_msg_data_stream_get_stream_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_stream_pack	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t stream_id, uint16_t message_rate, uint8_t on_off)$/;"	f
mavlink_msg_data_stream_pack_chan	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t stream_id, uint16_t message_rate, uint8_t on_off)$/;"	f
mavlink_msg_data_stream_send	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline void mavlink_msg_data_stream_send(mavlink_channel_t chan, uint8_t stream_id, uint16_t message_rate, uint8_t on_off)$/;"	f
mavlink_msg_data_stream_send_buf	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^static inline void mavlink_msg_data_stream_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t stream_id, uint16_t message_rate, uint8_t on_off)$/;"	f
mavlink_msg_data_transmission_handshake_decode	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline void mavlink_msg_data_transmission_handshake_decode(const mavlink_message_t* msg, mavlink_data_transmission_handshake_t* data_transmission_handshake)$/;"	f
mavlink_msg_data_transmission_handshake_encode	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_data_transmission_handshake_t* data_transmission_handshake)$/;"	f
mavlink_msg_data_transmission_handshake_encode_chan	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_data_transmission_handshake_t* data_transmission_handshake)$/;"	f
mavlink_msg_data_transmission_handshake_get_height	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_get_height(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_jpg_quality	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint8_t mavlink_msg_data_transmission_handshake_get_jpg_quality(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_packets	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_get_packets(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_payload	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint8_t mavlink_msg_data_transmission_handshake_get_payload(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_size	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint32_t mavlink_msg_data_transmission_handshake_get_size(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_type	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint8_t mavlink_msg_data_transmission_handshake_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_width	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_get_width(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_pack	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t type, uint32_t size, uint16_t width, uint16_t height, uint16_t packets, uint8_t payload, uint8_t jpg_quality)$/;"	f
mavlink_msg_data_transmission_handshake_pack_chan	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t type, uint32_t size, uint16_t width, uint16_t height, uint16_t packets, uint8_t payload, uint8_t jpg_quality)$/;"	f
mavlink_msg_data_transmission_handshake_send	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline void mavlink_msg_data_transmission_handshake_send(mavlink_channel_t chan, uint8_t type, uint32_t size, uint16_t width, uint16_t height, uint16_t packets, uint8_t payload, uint8_t jpg_quality)$/;"	f
mavlink_msg_data_transmission_handshake_send_buf	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^static inline void mavlink_msg_data_transmission_handshake_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t type, uint32_t size, uint16_t width, uint16_t height, uint16_t packets, uint8_t payload, uint8_t jpg_quality)$/;"	f
mavlink_msg_debug_decode	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline void mavlink_msg_debug_decode(const mavlink_message_t* msg, mavlink_debug_t* debug)$/;"	f
mavlink_msg_debug_encode	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline uint16_t mavlink_msg_debug_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_debug_t* debug)$/;"	f
mavlink_msg_debug_encode_chan	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline uint16_t mavlink_msg_debug_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_debug_t* debug)$/;"	f
mavlink_msg_debug_get_ind	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline uint8_t mavlink_msg_debug_get_ind(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline uint32_t mavlink_msg_debug_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_get_value	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline float mavlink_msg_debug_get_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_pack	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline uint16_t mavlink_msg_debug_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t ind, float value)$/;"	f
mavlink_msg_debug_pack_chan	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline uint16_t mavlink_msg_debug_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t ind, float value)$/;"	f
mavlink_msg_debug_send	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline void mavlink_msg_debug_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t ind, float value)$/;"	f
mavlink_msg_debug_send_buf	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^static inline void mavlink_msg_debug_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t ind, float value)$/;"	f
mavlink_msg_debug_vect_decode	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline void mavlink_msg_debug_vect_decode(const mavlink_message_t* msg, mavlink_debug_vect_t* debug_vect)$/;"	f
mavlink_msg_debug_vect_encode	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_debug_vect_t* debug_vect)$/;"	f
mavlink_msg_debug_vect_encode_chan	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_debug_vect_t* debug_vect)$/;"	f
mavlink_msg_debug_vect_get_name	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_get_name(const mavlink_message_t* msg, char *name)$/;"	f
mavlink_msg_debug_vect_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline uint64_t mavlink_msg_debug_vect_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_vect_get_x	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline float mavlink_msg_debug_vect_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_vect_get_y	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline float mavlink_msg_debug_vect_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_vect_get_z	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline float mavlink_msg_debug_vect_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_vect_pack	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const char *name, uint64_t time_usec, float x, float y, float z)$/;"	f
mavlink_msg_debug_vect_pack_chan	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const char *name, uint64_t time_usec, float x, float y, float z)$/;"	f
mavlink_msg_debug_vect_send	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline void mavlink_msg_debug_vect_send(mavlink_channel_t chan, const char *name, uint64_t time_usec, float x, float y, float z)$/;"	f
mavlink_msg_debug_vect_send_buf	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^static inline void mavlink_msg_debug_vect_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, const char *name, uint64_t time_usec, float x, float y, float z)$/;"	f
mavlink_msg_distance_sensor_decode	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline void mavlink_msg_distance_sensor_decode(const mavlink_message_t* msg, mavlink_distance_sensor_t* distance_sensor)$/;"	f
mavlink_msg_distance_sensor_encode	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_distance_sensor_t* distance_sensor)$/;"	f
mavlink_msg_distance_sensor_encode_chan	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_distance_sensor_t* distance_sensor)$/;"	f
mavlink_msg_distance_sensor_get_covariance	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint8_t mavlink_msg_distance_sensor_get_covariance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_current_distance	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_get_current_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_id	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint8_t mavlink_msg_distance_sensor_get_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_max_distance	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_get_max_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_min_distance	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_get_min_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_orientation	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint8_t mavlink_msg_distance_sensor_get_orientation(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint32_t mavlink_msg_distance_sensor_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_type	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint8_t mavlink_msg_distance_sensor_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_pack	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t type, uint8_t id, uint8_t orientation, uint16_t min_distance, uint16_t max_distance, uint16_t current_distance,$/;"	f
mavlink_msg_distance_sensor_pack_chan	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t type, uint8_t id, uint8_t orientation, uint16_t min_distance, uint16_t max_distance,$/;"	f
mavlink_msg_distance_sensor_send	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline void mavlink_msg_distance_sensor_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t type, uint8_t id, uint8_t orientation, uint16_t min_distance, uint16_t max_distance, uint16_t current_distance, uint8_t covariance)$/;"	f
mavlink_msg_distance_sensor_send_buf	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^static inline void mavlink_msg_distance_sensor_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t type, uint8_t id, uint8_t orientation, uint16_t min_distance, uint16_t max_distance, uint16_t current_distance, uint8_t covariance)$/;"	f
mavlink_msg_encapsulated_data_decode	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^static inline void mavlink_msg_encapsulated_data_decode(const mavlink_message_t* msg, mavlink_encapsulated_data_t* encapsulated_data)$/;"	f
mavlink_msg_encapsulated_data_encode	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_encapsulated_data_t* encapsulated_data)$/;"	f
mavlink_msg_encapsulated_data_encode_chan	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_encapsulated_data_t* encapsulated_data)$/;"	f
mavlink_msg_encapsulated_data_get_data	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_get_data(const mavlink_message_t* msg, uint8_t *data)$/;"	f
mavlink_msg_encapsulated_data_get_seqnr	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_get_seqnr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_encapsulated_data_pack	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint16_t seqnr, const uint8_t *data)$/;"	f
mavlink_msg_encapsulated_data_pack_chan	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint16_t seqnr, const uint8_t *data)$/;"	f
mavlink_msg_encapsulated_data_send	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^static inline void mavlink_msg_encapsulated_data_send(mavlink_channel_t chan, uint16_t seqnr, const uint8_t *data)$/;"	f
mavlink_msg_encapsulated_data_send_buf	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^static inline void mavlink_msg_encapsulated_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint16_t seqnr, const uint8_t *data)$/;"	f
mavlink_msg_file_transfer_dir_list_decode	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline void mavlink_msg_file_transfer_dir_list_decode(const mavlink_message_t* msg, mavlink_file_transfer_dir_list_t* file_transfer_dir_list)$/;"	f
mavlink_msg_file_transfer_dir_list_encode	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline uint16_t mavlink_msg_file_transfer_dir_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_file_transfer_dir_list_t* file_transfer_dir_list)$/;"	f
mavlink_msg_file_transfer_dir_list_encode_chan	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline uint16_t mavlink_msg_file_transfer_dir_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_file_transfer_dir_list_t* file_transfer_dir_list)$/;"	f
mavlink_msg_file_transfer_dir_list_get_dir_path	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline uint16_t mavlink_msg_file_transfer_dir_list_get_dir_path(const mavlink_message_t* msg, char *dir_path)$/;"	f
mavlink_msg_file_transfer_dir_list_get_flags	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline uint8_t mavlink_msg_file_transfer_dir_list_get_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_dir_list_get_transfer_uid	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline uint64_t mavlink_msg_file_transfer_dir_list_get_transfer_uid(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_dir_list_pack	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline uint16_t mavlink_msg_file_transfer_dir_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t transfer_uid, const char *dir_path, uint8_t flags)$/;"	f
mavlink_msg_file_transfer_dir_list_pack_chan	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline uint16_t mavlink_msg_file_transfer_dir_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t transfer_uid, const char *dir_path, uint8_t flags)$/;"	f
mavlink_msg_file_transfer_dir_list_send	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline void mavlink_msg_file_transfer_dir_list_send(mavlink_channel_t chan, uint64_t transfer_uid, const char *dir_path, uint8_t flags)$/;"	f
mavlink_msg_file_transfer_dir_list_send_buf	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^static inline void mavlink_msg_file_transfer_dir_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t transfer_uid, const char *dir_path, uint8_t flags)$/;"	f
mavlink_msg_file_transfer_res_decode	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^static inline void mavlink_msg_file_transfer_res_decode(const mavlink_message_t* msg, mavlink_file_transfer_res_t* file_transfer_res)$/;"	f
mavlink_msg_file_transfer_res_encode	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^static inline uint16_t mavlink_msg_file_transfer_res_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_file_transfer_res_t* file_transfer_res)$/;"	f
mavlink_msg_file_transfer_res_encode_chan	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^static inline uint16_t mavlink_msg_file_transfer_res_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_file_transfer_res_t* file_transfer_res)$/;"	f
mavlink_msg_file_transfer_res_get_result	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^static inline uint8_t mavlink_msg_file_transfer_res_get_result(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_res_get_transfer_uid	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^static inline uint64_t mavlink_msg_file_transfer_res_get_transfer_uid(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_res_pack	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^static inline uint16_t mavlink_msg_file_transfer_res_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t transfer_uid, uint8_t result)$/;"	f
mavlink_msg_file_transfer_res_pack_chan	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^static inline uint16_t mavlink_msg_file_transfer_res_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t transfer_uid, uint8_t result)$/;"	f
mavlink_msg_file_transfer_res_send	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^static inline void mavlink_msg_file_transfer_res_send(mavlink_channel_t chan, uint64_t transfer_uid, uint8_t result)$/;"	f
mavlink_msg_file_transfer_res_send_buf	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^static inline void mavlink_msg_file_transfer_res_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t transfer_uid, uint8_t result)$/;"	f
mavlink_msg_file_transfer_start_decode	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline void mavlink_msg_file_transfer_start_decode(const mavlink_message_t* msg, mavlink_file_transfer_start_t* file_transfer_start)$/;"	f
mavlink_msg_file_transfer_start_encode	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline uint16_t mavlink_msg_file_transfer_start_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_file_transfer_start_t* file_transfer_start)$/;"	f
mavlink_msg_file_transfer_start_encode_chan	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline uint16_t mavlink_msg_file_transfer_start_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_file_transfer_start_t* file_transfer_start)$/;"	f
mavlink_msg_file_transfer_start_get_dest_path	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline uint16_t mavlink_msg_file_transfer_start_get_dest_path(const mavlink_message_t* msg, char *dest_path)$/;"	f
mavlink_msg_file_transfer_start_get_direction	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline uint8_t mavlink_msg_file_transfer_start_get_direction(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_start_get_file_size	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline uint32_t mavlink_msg_file_transfer_start_get_file_size(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_start_get_flags	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline uint8_t mavlink_msg_file_transfer_start_get_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_start_get_transfer_uid	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline uint64_t mavlink_msg_file_transfer_start_get_transfer_uid(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_start_pack	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline uint16_t mavlink_msg_file_transfer_start_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t transfer_uid, const char *dest_path, uint8_t direction, uint32_t file_size, uint8_t flags)$/;"	f
mavlink_msg_file_transfer_start_pack_chan	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline uint16_t mavlink_msg_file_transfer_start_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t transfer_uid, const char *dest_path, uint8_t direction, uint32_t file_size, uint8_t flags)$/;"	f
mavlink_msg_file_transfer_start_send	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline void mavlink_msg_file_transfer_start_send(mavlink_channel_t chan, uint64_t transfer_uid, const char *dest_path, uint8_t direction, uint32_t file_size, uint8_t flags)$/;"	f
mavlink_msg_file_transfer_start_send_buf	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^static inline void mavlink_msg_file_transfer_start_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t transfer_uid, const char *dest_path, uint8_t direction, uint32_t file_size, uint8_t flags)$/;"	f
mavlink_msg_get_send_buffer_length	lib/mavlink/1.0/protocol.h	/^static inline uint16_t mavlink_msg_get_send_buffer_length(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_decode	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline void mavlink_msg_global_position_int_decode(const mavlink_message_t* msg, mavlink_global_position_int_t* global_position_int)$/;"	f
mavlink_msg_global_position_int_encode	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_global_position_int_t* global_position_int)$/;"	f
mavlink_msg_global_position_int_encode_chan	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_global_position_int_t* global_position_int)$/;"	f
mavlink_msg_global_position_int_get_alt	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline int32_t mavlink_msg_global_position_int_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_hdg	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_get_hdg(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_lat	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline int32_t mavlink_msg_global_position_int_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_lon	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline int32_t mavlink_msg_global_position_int_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_relative_alt	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline int32_t mavlink_msg_global_position_int_get_relative_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline uint32_t mavlink_msg_global_position_int_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_vx	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline int16_t mavlink_msg_global_position_int_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_vy	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline int16_t mavlink_msg_global_position_int_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_vz	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline int16_t mavlink_msg_global_position_int_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_pack	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, int32_t lat, int32_t lon, int32_t alt, int32_t relative_alt, int16_t vx, int16_t vy, int16_t vz, uint16_t hdg)$/;"	f
mavlink_msg_global_position_int_pack_chan	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, int32_t lat, int32_t lon, int32_t alt, int32_t relative_alt, int16_t vx, int16_t vy, int16_t vz, uint16_t hdg)$/;"	f
mavlink_msg_global_position_int_send	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline void mavlink_msg_global_position_int_send(mavlink_channel_t chan, uint32_t time_boot_ms, int32_t lat, int32_t lon, int32_t alt, int32_t relative_alt, int16_t vx, int16_t vy, int16_t vz, uint16_t hdg)$/;"	f
mavlink_msg_global_position_int_send_buf	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^static inline void mavlink_msg_global_position_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, int32_t lat, int32_t lon, int32_t alt, int32_t relative_alt, int16_t vx, int16_t vy, int16_t vz, uint16_t hdg)$/;"	f
mavlink_msg_global_position_setpoint_int_decode	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline void mavlink_msg_global_position_setpoint_int_decode(const mavlink_message_t* msg, mavlink_global_position_setpoint_int_t* global_position_setpoint_int)$/;"	f
mavlink_msg_global_position_setpoint_int_encode	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline uint16_t mavlink_msg_global_position_setpoint_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_global_position_setpoint_int_t* global_position_setpoint_int)$/;"	f
mavlink_msg_global_position_setpoint_int_encode_chan	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline uint16_t mavlink_msg_global_position_setpoint_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_global_position_setpoint_int_t* global_position_setpoint_int)$/;"	f
mavlink_msg_global_position_setpoint_int_get_altitude	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline int32_t mavlink_msg_global_position_setpoint_int_get_altitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_setpoint_int_get_coordinate_frame	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline uint8_t mavlink_msg_global_position_setpoint_int_get_coordinate_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_setpoint_int_get_latitude	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline int32_t mavlink_msg_global_position_setpoint_int_get_latitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_setpoint_int_get_longitude	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline int32_t mavlink_msg_global_position_setpoint_int_get_longitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_setpoint_int_get_yaw	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline int16_t mavlink_msg_global_position_setpoint_int_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_setpoint_int_pack	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline uint16_t mavlink_msg_global_position_setpoint_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t coordinate_frame, int32_t latitude, int32_t longitude, int32_t altitude, int16_t yaw)$/;"	f
mavlink_msg_global_position_setpoint_int_pack_chan	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline uint16_t mavlink_msg_global_position_setpoint_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t coordinate_frame, int32_t latitude, int32_t longitude, int32_t altitude, int16_t yaw)$/;"	f
mavlink_msg_global_position_setpoint_int_send	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline void mavlink_msg_global_position_setpoint_int_send(mavlink_channel_t chan, uint8_t coordinate_frame, int32_t latitude, int32_t longitude, int32_t altitude, int16_t yaw)$/;"	f
mavlink_msg_global_position_setpoint_int_send_buf	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^static inline void mavlink_msg_global_position_setpoint_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t coordinate_frame, int32_t latitude, int32_t longitude, int32_t altitude, int16_t yaw)$/;"	f
mavlink_msg_global_vision_position_estimate_decode	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline void mavlink_msg_global_vision_position_estimate_decode(const mavlink_message_t* msg, mavlink_global_vision_position_estimate_t* global_vision_position_estimate)$/;"	f
mavlink_msg_global_vision_position_estimate_encode	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_global_vision_position_estimate_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_global_vision_position_estimate_t* global_vision_position_estimate)$/;"	f
mavlink_msg_global_vision_position_estimate_encode_chan	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_global_vision_position_estimate_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_global_vision_position_estimate_t* global_vision_position_estimate)$/;"	f
mavlink_msg_global_vision_position_estimate_get_pitch	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_roll	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_usec	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint64_t mavlink_msg_global_vision_position_estimate_get_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_x	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_y	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_yaw	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_z	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_pack	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_global_vision_position_estimate_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_global_vision_position_estimate_pack_chan	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_global_vision_position_estimate_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_global_vision_position_estimate_send	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline void mavlink_msg_global_vision_position_estimate_send(mavlink_channel_t chan, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_global_vision_position_estimate_send_buf	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^static inline void mavlink_msg_global_vision_position_estimate_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_gps2_raw_decode	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline void mavlink_msg_gps2_raw_decode(const mavlink_message_t* msg, mavlink_gps2_raw_t* gps2_raw)$/;"	f
mavlink_msg_gps2_raw_encode	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps2_raw_t* gps2_raw)$/;"	f
mavlink_msg_gps2_raw_encode_chan	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps2_raw_t* gps2_raw)$/;"	f
mavlink_msg_gps2_raw_get_alt	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline int32_t mavlink_msg_gps2_raw_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_cog	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_get_cog(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_dgps_age	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint32_t mavlink_msg_gps2_raw_get_dgps_age(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_dgps_numch	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint8_t mavlink_msg_gps2_raw_get_dgps_numch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_eph	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_get_eph(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_epv	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_get_epv(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_fix_type	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint8_t mavlink_msg_gps2_raw_get_fix_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_lat	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline int32_t mavlink_msg_gps2_raw_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_lon	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline int32_t mavlink_msg_gps2_raw_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_satellites_visible	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint8_t mavlink_msg_gps2_raw_get_satellites_visible(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint64_t mavlink_msg_gps2_raw_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_vel	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_get_vel(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_pack	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible,$/;"	f
mavlink_msg_gps2_raw_pack_chan	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog,$/;"	f
mavlink_msg_gps2_raw_send	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline void mavlink_msg_gps2_raw_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible, uint8_t dgps_numch, uint32_t dgps_age)$/;"	f
mavlink_msg_gps2_raw_send_buf	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^static inline void mavlink_msg_gps2_raw_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible, uint8_t dgps_numch, uint32_t dgps_age)$/;"	f
mavlink_msg_gps_global_origin_decode	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline void mavlink_msg_gps_global_origin_decode(const mavlink_message_t* msg, mavlink_gps_global_origin_t* gps_global_origin)$/;"	f
mavlink_msg_gps_global_origin_encode	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline uint16_t mavlink_msg_gps_global_origin_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_global_origin_t* gps_global_origin)$/;"	f
mavlink_msg_gps_global_origin_encode_chan	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline uint16_t mavlink_msg_gps_global_origin_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_global_origin_t* gps_global_origin)$/;"	f
mavlink_msg_gps_global_origin_get_altitude	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline int32_t mavlink_msg_gps_global_origin_get_altitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_global_origin_get_latitude	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline int32_t mavlink_msg_gps_global_origin_get_latitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_global_origin_get_longitude	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline int32_t mavlink_msg_gps_global_origin_get_longitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_global_origin_pack	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline uint16_t mavlink_msg_gps_global_origin_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_gps_global_origin_pack_chan	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline uint16_t mavlink_msg_gps_global_origin_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_gps_global_origin_send	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline void mavlink_msg_gps_global_origin_send(mavlink_channel_t chan, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_gps_global_origin_send_buf	lib/mavlink/1.0/common/mavlink_msg_gps_global_origin.h	/^static inline void mavlink_msg_gps_global_origin_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_gps_inject_data_decode	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline void mavlink_msg_gps_inject_data_decode(const mavlink_message_t* msg, mavlink_gps_inject_data_t* gps_inject_data)$/;"	f
mavlink_msg_gps_inject_data_encode	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_inject_data_t* gps_inject_data)$/;"	f
mavlink_msg_gps_inject_data_encode_chan	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_inject_data_t* gps_inject_data)$/;"	f
mavlink_msg_gps_inject_data_get_data	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_get_data(const mavlink_message_t* msg, uint8_t *data)$/;"	f
mavlink_msg_gps_inject_data_get_len	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline uint8_t mavlink_msg_gps_inject_data_get_len(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_inject_data_get_target_component	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline uint8_t mavlink_msg_gps_inject_data_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_inject_data_get_target_system	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline uint8_t mavlink_msg_gps_inject_data_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_inject_data_pack	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t len, const uint8_t *data)$/;"	f
mavlink_msg_gps_inject_data_pack_chan	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t len, const uint8_t *data)$/;"	f
mavlink_msg_gps_inject_data_send	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline void mavlink_msg_gps_inject_data_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t len, const uint8_t *data)$/;"	f
mavlink_msg_gps_inject_data_send_buf	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^static inline void mavlink_msg_gps_inject_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t len, const uint8_t *data)$/;"	f
mavlink_msg_gps_raw_int_decode	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline void mavlink_msg_gps_raw_int_decode(const mavlink_message_t* msg, mavlink_gps_raw_int_t* gps_raw_int)$/;"	f
mavlink_msg_gps_raw_int_encode	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_raw_int_t* gps_raw_int)$/;"	f
mavlink_msg_gps_raw_int_encode_chan	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_raw_int_t* gps_raw_int)$/;"	f
mavlink_msg_gps_raw_int_get_alt	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline int32_t mavlink_msg_gps_raw_int_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_cog	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_get_cog(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_eph	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_get_eph(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_epv	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_get_epv(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_fix_type	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint8_t mavlink_msg_gps_raw_int_get_fix_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_lat	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline int32_t mavlink_msg_gps_raw_int_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_lon	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline int32_t mavlink_msg_gps_raw_int_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_satellites_visible	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint8_t mavlink_msg_gps_raw_int_get_satellites_visible(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint64_t mavlink_msg_gps_raw_int_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_vel	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_get_vel(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_pack	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible)$/;"	f
mavlink_msg_gps_raw_int_pack_chan	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog,$/;"	f
mavlink_msg_gps_raw_int_send	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline void mavlink_msg_gps_raw_int_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible)$/;"	f
mavlink_msg_gps_raw_int_send_buf	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^static inline void mavlink_msg_gps_raw_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible)$/;"	f
mavlink_msg_gps_status_decode	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline void mavlink_msg_gps_status_decode(const mavlink_message_t* msg, mavlink_gps_status_t* gps_status)$/;"	f
mavlink_msg_gps_status_encode	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_status_t* gps_status)$/;"	f
mavlink_msg_gps_status_encode_chan	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_status_t* gps_status)$/;"	f
mavlink_msg_gps_status_get_satellite_azimuth	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_azimuth(const mavlink_message_t* msg, uint8_t *satellite_azimuth)$/;"	f
mavlink_msg_gps_status_get_satellite_elevation	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_elevation(const mavlink_message_t* msg, uint8_t *satellite_elevation)$/;"	f
mavlink_msg_gps_status_get_satellite_prn	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_prn(const mavlink_message_t* msg, uint8_t *satellite_prn)$/;"	f
mavlink_msg_gps_status_get_satellite_snr	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_snr(const mavlink_message_t* msg, uint8_t *satellite_snr)$/;"	f
mavlink_msg_gps_status_get_satellite_used	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_used(const mavlink_message_t* msg, uint8_t *satellite_used)$/;"	f
mavlink_msg_gps_status_get_satellites_visible	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint8_t mavlink_msg_gps_status_get_satellites_visible(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_status_pack	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t satellites_visible, const uint8_t *satellite_prn, const uint8_t *satellite_used, const uint8_t *satellite_elevation, const uint8_t *satellite_azimuth,$/;"	f
mavlink_msg_gps_status_pack_chan	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t satellites_visible, const uint8_t *satellite_prn, const uint8_t *satellite_used, const uint8_t *satellite_elevation,$/;"	f
mavlink_msg_gps_status_send	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline void mavlink_msg_gps_status_send(mavlink_channel_t chan, uint8_t satellites_visible, const uint8_t *satellite_prn, const uint8_t *satellite_used, const uint8_t *satellite_elevation, const uint8_t *satellite_azimuth, const uint8_t *satellite_snr)$/;"	f
mavlink_msg_gps_status_send_buf	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^static inline void mavlink_msg_gps_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t satellites_visible, const uint8_t *satellite_prn, const uint8_t *satellite_used, const uint8_t *satellite_elevation, const uint8_t *satellite_azimuth, const uint8_t *satellite_snr)$/;"	f
mavlink_msg_heartbeat_decode	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline void mavlink_msg_heartbeat_decode(const mavlink_message_t* msg, mavlink_heartbeat_t* heartbeat)$/;"	f
mavlink_msg_heartbeat_encode	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint16_t mavlink_msg_heartbeat_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_heartbeat_t* heartbeat)$/;"	f
mavlink_msg_heartbeat_encode_chan	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint16_t mavlink_msg_heartbeat_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_heartbeat_t* heartbeat)$/;"	f
mavlink_msg_heartbeat_get_autopilot	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_autopilot(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_base_mode	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_base_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_custom_mode	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint32_t mavlink_msg_heartbeat_get_custom_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_mavlink_version	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_mavlink_version(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_system_status	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_system_status(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_type	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_pack	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint16_t mavlink_msg_heartbeat_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t type, uint8_t autopilot, uint8_t base_mode, uint32_t custom_mode, uint8_t system_status)$/;"	f
mavlink_msg_heartbeat_pack_chan	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline uint16_t mavlink_msg_heartbeat_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t type, uint8_t autopilot, uint8_t base_mode, uint32_t custom_mode, uint8_t system_status)$/;"	f
mavlink_msg_heartbeat_send	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline void mavlink_msg_heartbeat_send(mavlink_channel_t chan, uint8_t type, uint8_t autopilot, uint8_t base_mode, uint32_t custom_mode, uint8_t system_status)$/;"	f
mavlink_msg_heartbeat_send_buf	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^static inline void mavlink_msg_heartbeat_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t type, uint8_t autopilot, uint8_t base_mode, uint32_t custom_mode, uint8_t system_status)$/;"	f
mavlink_msg_highres_imu_decode	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline void mavlink_msg_highres_imu_decode(const mavlink_message_t* msg, mavlink_highres_imu_t* highres_imu)$/;"	f
mavlink_msg_highres_imu_encode	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_highres_imu_t* highres_imu)$/;"	f
mavlink_msg_highres_imu_encode_chan	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_highres_imu_t* highres_imu)$/;"	f
mavlink_msg_highres_imu_get_abs_pressure	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_abs_pressure(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_diff_pressure	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_diff_pressure(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_fields_updated	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_get_fields_updated(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_pressure_alt	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_pressure_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_temperature	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline uint64_t mavlink_msg_highres_imu_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_xacc	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_xgyro	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_xmag	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_yacc	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_ygyro	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_ymag	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_zacc	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_zgyro	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_zmag	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_pack	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure,$/;"	f
mavlink_msg_highres_imu_pack_chan	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag,$/;"	f
mavlink_msg_highres_imu_send	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline void mavlink_msg_highres_imu_send(mavlink_channel_t chan, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure, float diff_pressure, float pressure_alt, float temperature, uint16_t fields_updated)$/;"	f
mavlink_msg_highres_imu_send_buf	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^static inline void mavlink_msg_highres_imu_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure, float diff_pressure, float pressure_alt, float temperature, uint16_t fields_updated)$/;"	f
mavlink_msg_hil_controls_decode	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline void mavlink_msg_hil_controls_decode(const mavlink_message_t* msg, mavlink_hil_controls_t* hil_controls)$/;"	f
mavlink_msg_hil_controls_encode	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline uint16_t mavlink_msg_hil_controls_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_controls_t* hil_controls)$/;"	f
mavlink_msg_hil_controls_encode_chan	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline uint16_t mavlink_msg_hil_controls_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_controls_t* hil_controls)$/;"	f
mavlink_msg_hil_controls_get_aux1	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_aux1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_aux2	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_aux2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_aux3	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_aux3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_aux4	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_aux4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_mode	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline uint8_t mavlink_msg_hil_controls_get_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_nav_mode	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline uint8_t mavlink_msg_hil_controls_get_nav_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_pitch_elevator	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_pitch_elevator(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_roll_ailerons	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_roll_ailerons(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_throttle	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_throttle(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline uint64_t mavlink_msg_hil_controls_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_yaw_rudder	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_yaw_rudder(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_pack	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline uint16_t mavlink_msg_hil_controls_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, float roll_ailerons, float pitch_elevator, float yaw_rudder, float throttle, float aux1, float aux2, float aux3, float aux4, uint8_t mode,$/;"	f
mavlink_msg_hil_controls_pack_chan	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline uint16_t mavlink_msg_hil_controls_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, float roll_ailerons, float pitch_elevator, float yaw_rudder, float throttle, float aux1, float aux2, float aux3,$/;"	f
mavlink_msg_hil_controls_send	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline void mavlink_msg_hil_controls_send(mavlink_channel_t chan, uint64_t time_usec, float roll_ailerons, float pitch_elevator, float yaw_rudder, float throttle, float aux1, float aux2, float aux3, float aux4, uint8_t mode, uint8_t nav_mode)$/;"	f
mavlink_msg_hil_controls_send_buf	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^static inline void mavlink_msg_hil_controls_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, float roll_ailerons, float pitch_elevator, float yaw_rudder, float throttle, float aux1, float aux2, float aux3, float aux4, uint8_t mode, uint8_t nav_mode)$/;"	f
mavlink_msg_hil_gps_decode	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline void mavlink_msg_hil_gps_decode(const mavlink_message_t* msg, mavlink_hil_gps_t* hil_gps)$/;"	f
mavlink_msg_hil_gps_encode	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_gps_t* hil_gps)$/;"	f
mavlink_msg_hil_gps_encode_chan	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_gps_t* hil_gps)$/;"	f
mavlink_msg_hil_gps_get_alt	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline int32_t mavlink_msg_hil_gps_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_cog	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_get_cog(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_eph	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_get_eph(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_epv	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_get_epv(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_fix_type	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint8_t mavlink_msg_hil_gps_get_fix_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_lat	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline int32_t mavlink_msg_hil_gps_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_lon	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline int32_t mavlink_msg_hil_gps_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_satellites_visible	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint8_t mavlink_msg_hil_gps_get_satellites_visible(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint64_t mavlink_msg_hil_gps_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_vd	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline int16_t mavlink_msg_hil_gps_get_vd(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_ve	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline int16_t mavlink_msg_hil_gps_get_ve(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_vel	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_get_vel(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_vn	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline int16_t mavlink_msg_hil_gps_get_vn(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_pack	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, int16_t vn, int16_t ve, int16_t vd,$/;"	f
mavlink_msg_hil_gps_pack_chan	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, int16_t vn, int16_t ve,$/;"	f
mavlink_msg_hil_gps_send	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline void mavlink_msg_hil_gps_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, int16_t vn, int16_t ve, int16_t vd, uint16_t cog, uint8_t satellites_visible)$/;"	f
mavlink_msg_hil_gps_send_buf	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^static inline void mavlink_msg_hil_gps_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, int16_t vn, int16_t ve, int16_t vd, uint16_t cog, uint8_t satellites_visible)$/;"	f
mavlink_msg_hil_optical_flow_decode	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline void mavlink_msg_hil_optical_flow_decode(const mavlink_message_t* msg, mavlink_hil_optical_flow_t* hil_optical_flow)$/;"	f
mavlink_msg_hil_optical_flow_encode	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline uint16_t mavlink_msg_hil_optical_flow_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_optical_flow_t* hil_optical_flow)$/;"	f
mavlink_msg_hil_optical_flow_encode_chan	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline uint16_t mavlink_msg_hil_optical_flow_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_optical_flow_t* hil_optical_flow)$/;"	f
mavlink_msg_hil_optical_flow_get_flow_comp_m_x	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline float mavlink_msg_hil_optical_flow_get_flow_comp_m_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_flow_comp_m_y	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline float mavlink_msg_hil_optical_flow_get_flow_comp_m_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_flow_x	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline int16_t mavlink_msg_hil_optical_flow_get_flow_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_flow_y	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline int16_t mavlink_msg_hil_optical_flow_get_flow_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_ground_distance	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline float mavlink_msg_hil_optical_flow_get_ground_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_quality	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline uint8_t mavlink_msg_hil_optical_flow_get_quality(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_sensor_id	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline uint8_t mavlink_msg_hil_optical_flow_get_sensor_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline uint64_t mavlink_msg_hil_optical_flow_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_pack	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline uint16_t mavlink_msg_hil_optical_flow_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality, float ground_distance)$/;"	f
mavlink_msg_hil_optical_flow_pack_chan	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline uint16_t mavlink_msg_hil_optical_flow_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality,$/;"	f
mavlink_msg_hil_optical_flow_send	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline void mavlink_msg_hil_optical_flow_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality, float ground_distance)$/;"	f
mavlink_msg_hil_optical_flow_send_buf	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^static inline void mavlink_msg_hil_optical_flow_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality, float ground_distance)$/;"	f
mavlink_msg_hil_rc_inputs_raw_decode	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline void mavlink_msg_hil_rc_inputs_raw_decode(const mavlink_message_t* msg, mavlink_hil_rc_inputs_raw_t* hil_rc_inputs_raw)$/;"	f
mavlink_msg_hil_rc_inputs_raw_encode	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_rc_inputs_raw_t* hil_rc_inputs_raw)$/;"	f
mavlink_msg_hil_rc_inputs_raw_encode_chan	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_rc_inputs_raw_t* hil_rc_inputs_raw)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan10_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan10_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan11_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan11_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan12_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan12_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan1_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan2_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan3_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan4_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan5_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan6_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan7_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan8_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan9_raw	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan9_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_rssi	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint8_t mavlink_msg_hil_rc_inputs_raw_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint64_t mavlink_msg_hil_rc_inputs_raw_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_pack	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw,$/;"	f
mavlink_msg_hil_rc_inputs_raw_pack_chan	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw,$/;"	f
mavlink_msg_hil_rc_inputs_raw_send	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline void mavlink_msg_hil_rc_inputs_raw_send(mavlink_channel_t chan, uint64_t time_usec, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint16_t chan9_raw, uint16_t chan10_raw, uint16_t chan11_raw, uint16_t chan12_raw, uint8_t rssi)$/;"	f
mavlink_msg_hil_rc_inputs_raw_send_buf	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline void mavlink_msg_hil_rc_inputs_raw_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint16_t chan9_raw, uint16_t chan10_raw, uint16_t chan11_raw, uint16_t chan12_raw, uint8_t rssi)$/;"	f
mavlink_msg_hil_sensor_decode	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline void mavlink_msg_hil_sensor_decode(const mavlink_message_t* msg, mavlink_hil_sensor_t* hil_sensor)$/;"	f
mavlink_msg_hil_sensor_encode	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline uint16_t mavlink_msg_hil_sensor_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_sensor_t* hil_sensor)$/;"	f
mavlink_msg_hil_sensor_encode_chan	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline uint16_t mavlink_msg_hil_sensor_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_sensor_t* hil_sensor)$/;"	f
mavlink_msg_hil_sensor_get_abs_pressure	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_abs_pressure(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_diff_pressure	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_diff_pressure(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_fields_updated	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline uint32_t mavlink_msg_hil_sensor_get_fields_updated(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_pressure_alt	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_pressure_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_temperature	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline uint64_t mavlink_msg_hil_sensor_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_xacc	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_xgyro	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_xmag	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_yacc	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_ygyro	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_ymag	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_zacc	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_zgyro	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_zmag	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_pack	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline uint16_t mavlink_msg_hil_sensor_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure,$/;"	f
mavlink_msg_hil_sensor_pack_chan	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline uint16_t mavlink_msg_hil_sensor_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag,$/;"	f
mavlink_msg_hil_sensor_send	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline void mavlink_msg_hil_sensor_send(mavlink_channel_t chan, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure, float diff_pressure, float pressure_alt, float temperature, uint32_t fields_updated)$/;"	f
mavlink_msg_hil_sensor_send_buf	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^static inline void mavlink_msg_hil_sensor_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure, float diff_pressure, float pressure_alt, float temperature, uint32_t fields_updated)$/;"	f
mavlink_msg_hil_state_decode	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline void mavlink_msg_hil_state_decode(const mavlink_message_t* msg, mavlink_hil_state_t* hil_state)$/;"	f
mavlink_msg_hil_state_encode	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline uint16_t mavlink_msg_hil_state_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_state_t* hil_state)$/;"	f
mavlink_msg_hil_state_encode_chan	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline uint16_t mavlink_msg_hil_state_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_state_t* hil_state)$/;"	f
mavlink_msg_hil_state_get_alt	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline int32_t mavlink_msg_hil_state_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_lat	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline int32_t mavlink_msg_hil_state_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_lon	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline int32_t mavlink_msg_hil_state_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_pitch	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_pitchspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_pitchspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_roll	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_rollspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_rollspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline uint64_t mavlink_msg_hil_state_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_vx	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_vy	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_vz	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_xacc	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_yacc	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_yaw	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_yawspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_yawspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_zacc	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_pack	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline uint16_t mavlink_msg_hil_state_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt, int16_t vx,$/;"	f
mavlink_msg_hil_state_pack_chan	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline uint16_t mavlink_msg_hil_state_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt,$/;"	f
mavlink_msg_hil_state_quaternion_decode	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline void mavlink_msg_hil_state_quaternion_decode(const mavlink_message_t* msg, mavlink_hil_state_quaternion_t* hil_state_quaternion)$/;"	f
mavlink_msg_hil_state_quaternion_encode	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_state_quaternion_t* hil_state_quaternion)$/;"	f
mavlink_msg_hil_state_quaternion_encode_chan	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_state_quaternion_t* hil_state_quaternion)$/;"	f
mavlink_msg_hil_state_quaternion_get_alt	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline int32_t mavlink_msg_hil_state_quaternion_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_attitude_quaternion	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_get_attitude_quaternion(const mavlink_message_t* msg, float *attitude_quaternion)$/;"	f
mavlink_msg_hil_state_quaternion_get_ind_airspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_get_ind_airspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_lat	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline int32_t mavlink_msg_hil_state_quaternion_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_lon	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline int32_t mavlink_msg_hil_state_quaternion_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_pitchspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline float mavlink_msg_hil_state_quaternion_get_pitchspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_rollspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline float mavlink_msg_hil_state_quaternion_get_rollspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline uint64_t mavlink_msg_hil_state_quaternion_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_true_airspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_get_true_airspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_vx	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_vy	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_vz	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_xacc	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_yacc	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_yawspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline float mavlink_msg_hil_state_quaternion_get_yawspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_zacc	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_pack	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, const float *attitude_quaternion, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt,$/;"	f
mavlink_msg_hil_state_quaternion_pack_chan	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, const float *attitude_quaternion, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon,$/;"	f
mavlink_msg_hil_state_quaternion_send	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline void mavlink_msg_hil_state_quaternion_send(mavlink_channel_t chan, uint64_t time_usec, const float *attitude_quaternion, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt, int16_t vx, int16_t vy, int16_t vz, uint16_t ind_airspeed, uint16_t true_airspeed, int16_t xacc, int16_t yacc, int16_t zacc)$/;"	f
mavlink_msg_hil_state_quaternion_send_buf	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^static inline void mavlink_msg_hil_state_quaternion_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, const float *attitude_quaternion, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt, int16_t vx, int16_t vy, int16_t vz, uint16_t ind_airspeed, uint16_t true_airspeed, int16_t xacc, int16_t yacc, int16_t zacc)$/;"	f
mavlink_msg_hil_state_send	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline void mavlink_msg_hil_state_send(mavlink_channel_t chan, uint64_t time_usec, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt, int16_t vx, int16_t vy, int16_t vz, int16_t xacc, int16_t yacc, int16_t zacc)$/;"	f
mavlink_msg_hil_state_send_buf	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^static inline void mavlink_msg_hil_state_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt, int16_t vx, int16_t vy, int16_t vz, int16_t xacc, int16_t yacc, int16_t zacc)$/;"	f
mavlink_msg_local_position_ned_decode	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline void mavlink_msg_local_position_ned_decode(const mavlink_message_t* msg, mavlink_local_position_ned_t* local_position_ned)$/;"	f
mavlink_msg_local_position_ned_encode	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline uint16_t mavlink_msg_local_position_ned_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_local_position_ned_t* local_position_ned)$/;"	f
mavlink_msg_local_position_ned_encode_chan	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline uint16_t mavlink_msg_local_position_ned_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_local_position_ned_t* local_position_ned)$/;"	f
mavlink_msg_local_position_ned_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline uint32_t mavlink_msg_local_position_ned_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_vx	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_vy	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_vz	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_x	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_y	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_z	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_pack	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline uint16_t mavlink_msg_local_position_ned_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, float x, float y, float z, float vx, float vy, float vz)$/;"	f
mavlink_msg_local_position_ned_pack_chan	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline uint16_t mavlink_msg_local_position_ned_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, float x, float y, float z, float vx, float vy, float vz)$/;"	f
mavlink_msg_local_position_ned_send	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline void mavlink_msg_local_position_ned_send(mavlink_channel_t chan, uint32_t time_boot_ms, float x, float y, float z, float vx, float vy, float vz)$/;"	f
mavlink_msg_local_position_ned_send_buf	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^static inline void mavlink_msg_local_position_ned_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, float x, float y, float z, float vx, float vy, float vz)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_decode	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline void mavlink_msg_local_position_ned_system_global_offset_decode(const mavlink_message_t* msg, mavlink_local_position_ned_system_global_offset_t* local_position_ned_system_global_offset)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_encode	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint16_t mavlink_msg_local_position_ned_system_global_offset_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_local_position_ned_system_global_offset_t* local_position_ned_system_global_offset)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_encode_chan	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint16_t mavlink_msg_local_position_ned_system_global_offset_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_local_position_ned_system_global_offset_t* local_position_ned_system_global_offset)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_pitch	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_roll	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint32_t mavlink_msg_local_position_ned_system_global_offset_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_x	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_y	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_yaw	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_z	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_pack	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint16_t mavlink_msg_local_position_ned_system_global_offset_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_pack_chan	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint16_t mavlink_msg_local_position_ned_system_global_offset_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_send	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline void mavlink_msg_local_position_ned_system_global_offset_send(mavlink_channel_t chan, uint32_t time_boot_ms, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_send_buf	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline void mavlink_msg_local_position_ned_system_global_offset_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_local_position_setpoint_decode	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline void mavlink_msg_local_position_setpoint_decode(const mavlink_message_t* msg, mavlink_local_position_setpoint_t* local_position_setpoint)$/;"	f
mavlink_msg_local_position_setpoint_encode	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline uint16_t mavlink_msg_local_position_setpoint_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_local_position_setpoint_t* local_position_setpoint)$/;"	f
mavlink_msg_local_position_setpoint_encode_chan	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline uint16_t mavlink_msg_local_position_setpoint_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_local_position_setpoint_t* local_position_setpoint)$/;"	f
mavlink_msg_local_position_setpoint_get_coordinate_frame	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline uint8_t mavlink_msg_local_position_setpoint_get_coordinate_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_setpoint_get_x	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline float mavlink_msg_local_position_setpoint_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_setpoint_get_y	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline float mavlink_msg_local_position_setpoint_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_setpoint_get_yaw	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline float mavlink_msg_local_position_setpoint_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_setpoint_get_z	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline float mavlink_msg_local_position_setpoint_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_setpoint_pack	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline uint16_t mavlink_msg_local_position_setpoint_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t coordinate_frame, float x, float y, float z, float yaw)$/;"	f
mavlink_msg_local_position_setpoint_pack_chan	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline uint16_t mavlink_msg_local_position_setpoint_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t coordinate_frame, float x, float y, float z, float yaw)$/;"	f
mavlink_msg_local_position_setpoint_send	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline void mavlink_msg_local_position_setpoint_send(mavlink_channel_t chan, uint8_t coordinate_frame, float x, float y, float z, float yaw)$/;"	f
mavlink_msg_local_position_setpoint_send_buf	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^static inline void mavlink_msg_local_position_setpoint_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t coordinate_frame, float x, float y, float z, float yaw)$/;"	f
mavlink_msg_log_data_decode	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline void mavlink_msg_log_data_decode(const mavlink_message_t* msg, mavlink_log_data_t* log_data)$/;"	f
mavlink_msg_log_data_encode	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_data_t* log_data)$/;"	f
mavlink_msg_log_data_encode_chan	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_data_t* log_data)$/;"	f
mavlink_msg_log_data_get_count	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline uint8_t mavlink_msg_log_data_get_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_data_get_data	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_get_data(const mavlink_message_t* msg, uint8_t *data)$/;"	f
mavlink_msg_log_data_get_id	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_get_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_data_get_ofs	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline uint32_t mavlink_msg_log_data_get_ofs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_data_pack	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint16_t id, uint32_t ofs, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_log_data_pack_chan	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint16_t id, uint32_t ofs, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_log_data_send	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline void mavlink_msg_log_data_send(mavlink_channel_t chan, uint16_t id, uint32_t ofs, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_log_data_send_buf	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^static inline void mavlink_msg_log_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint16_t id, uint32_t ofs, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_log_entry_decode	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline void mavlink_msg_log_entry_decode(const mavlink_message_t* msg, mavlink_log_entry_t* log_entry)$/;"	f
mavlink_msg_log_entry_encode	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_entry_t* log_entry)$/;"	f
mavlink_msg_log_entry_encode_chan	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_entry_t* log_entry)$/;"	f
mavlink_msg_log_entry_get_id	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_get_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_get_last_log_num	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_get_last_log_num(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_get_num_logs	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_get_num_logs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_get_size	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline uint32_t mavlink_msg_log_entry_get_size(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_get_time_utc	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline uint32_t mavlink_msg_log_entry_get_time_utc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_pack	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint16_t id, uint16_t num_logs, uint16_t last_log_num, uint32_t time_utc, uint32_t size)$/;"	f
mavlink_msg_log_entry_pack_chan	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint16_t id, uint16_t num_logs, uint16_t last_log_num, uint32_t time_utc, uint32_t size)$/;"	f
mavlink_msg_log_entry_send	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline void mavlink_msg_log_entry_send(mavlink_channel_t chan, uint16_t id, uint16_t num_logs, uint16_t last_log_num, uint32_t time_utc, uint32_t size)$/;"	f
mavlink_msg_log_entry_send_buf	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^static inline void mavlink_msg_log_entry_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint16_t id, uint16_t num_logs, uint16_t last_log_num, uint32_t time_utc, uint32_t size)$/;"	f
mavlink_msg_log_erase_decode	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^static inline void mavlink_msg_log_erase_decode(const mavlink_message_t* msg, mavlink_log_erase_t* log_erase)$/;"	f
mavlink_msg_log_erase_encode	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^static inline uint16_t mavlink_msg_log_erase_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_erase_t* log_erase)$/;"	f
mavlink_msg_log_erase_encode_chan	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^static inline uint16_t mavlink_msg_log_erase_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_erase_t* log_erase)$/;"	f
mavlink_msg_log_erase_get_target_component	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^static inline uint8_t mavlink_msg_log_erase_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_erase_get_target_system	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^static inline uint8_t mavlink_msg_log_erase_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_erase_pack	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^static inline uint16_t mavlink_msg_log_erase_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_erase_pack_chan	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^static inline uint16_t mavlink_msg_log_erase_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_erase_send	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^static inline void mavlink_msg_log_erase_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_erase_send_buf	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^static inline void mavlink_msg_log_erase_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_request_data_decode	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline void mavlink_msg_log_request_data_decode(const mavlink_message_t* msg, mavlink_log_request_data_t* log_request_data)$/;"	f
mavlink_msg_log_request_data_encode	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_request_data_t* log_request_data)$/;"	f
mavlink_msg_log_request_data_encode_chan	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_request_data_t* log_request_data)$/;"	f
mavlink_msg_log_request_data_get_count	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline uint32_t mavlink_msg_log_request_data_get_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_get_id	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_get_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_get_ofs	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline uint32_t mavlink_msg_log_request_data_get_ofs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_get_target_component	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline uint8_t mavlink_msg_log_request_data_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_get_target_system	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline uint8_t mavlink_msg_log_request_data_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_pack	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t id, uint32_t ofs, uint32_t count)$/;"	f
mavlink_msg_log_request_data_pack_chan	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t id, uint32_t ofs, uint32_t count)$/;"	f
mavlink_msg_log_request_data_send	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline void mavlink_msg_log_request_data_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t id, uint32_t ofs, uint32_t count)$/;"	f
mavlink_msg_log_request_data_send_buf	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^static inline void mavlink_msg_log_request_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t id, uint32_t ofs, uint32_t count)$/;"	f
mavlink_msg_log_request_end_decode	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^static inline void mavlink_msg_log_request_end_decode(const mavlink_message_t* msg, mavlink_log_request_end_t* log_request_end)$/;"	f
mavlink_msg_log_request_end_encode	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^static inline uint16_t mavlink_msg_log_request_end_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_request_end_t* log_request_end)$/;"	f
mavlink_msg_log_request_end_encode_chan	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^static inline uint16_t mavlink_msg_log_request_end_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_request_end_t* log_request_end)$/;"	f
mavlink_msg_log_request_end_get_target_component	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^static inline uint8_t mavlink_msg_log_request_end_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_end_get_target_system	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^static inline uint8_t mavlink_msg_log_request_end_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_end_pack	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^static inline uint16_t mavlink_msg_log_request_end_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_request_end_pack_chan	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^static inline uint16_t mavlink_msg_log_request_end_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_request_end_send	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^static inline void mavlink_msg_log_request_end_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_request_end_send_buf	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^static inline void mavlink_msg_log_request_end_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_request_list_decode	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline void mavlink_msg_log_request_list_decode(const mavlink_message_t* msg, mavlink_log_request_list_t* log_request_list)$/;"	f
mavlink_msg_log_request_list_encode	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_request_list_t* log_request_list)$/;"	f
mavlink_msg_log_request_list_encode_chan	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_request_list_t* log_request_list)$/;"	f
mavlink_msg_log_request_list_get_end	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_get_end(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_list_get_start	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_get_start(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_list_get_target_component	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline uint8_t mavlink_msg_log_request_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_list_get_target_system	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline uint8_t mavlink_msg_log_request_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_list_pack	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t start, uint16_t end)$/;"	f
mavlink_msg_log_request_list_pack_chan	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t start, uint16_t end)$/;"	f
mavlink_msg_log_request_list_send	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline void mavlink_msg_log_request_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t start, uint16_t end)$/;"	f
mavlink_msg_log_request_list_send_buf	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^static inline void mavlink_msg_log_request_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t start, uint16_t end)$/;"	f
mavlink_msg_manual_control_decode	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline void mavlink_msg_manual_control_decode(const mavlink_message_t* msg, mavlink_manual_control_t* manual_control)$/;"	f
mavlink_msg_manual_control_encode	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_manual_control_t* manual_control)$/;"	f
mavlink_msg_manual_control_encode_chan	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_manual_control_t* manual_control)$/;"	f
mavlink_msg_manual_control_get_buttons	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_get_buttons(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_r	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline int16_t mavlink_msg_manual_control_get_r(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_target	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline uint8_t mavlink_msg_manual_control_get_target(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_x	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline int16_t mavlink_msg_manual_control_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_y	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline int16_t mavlink_msg_manual_control_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_z	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline int16_t mavlink_msg_manual_control_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_pack	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target, int16_t x, int16_t y, int16_t z, int16_t r, uint16_t buttons)$/;"	f
mavlink_msg_manual_control_pack_chan	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target, int16_t x, int16_t y, int16_t z, int16_t r, uint16_t buttons)$/;"	f
mavlink_msg_manual_control_send	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline void mavlink_msg_manual_control_send(mavlink_channel_t chan, uint8_t target, int16_t x, int16_t y, int16_t z, int16_t r, uint16_t buttons)$/;"	f
mavlink_msg_manual_control_send_buf	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^static inline void mavlink_msg_manual_control_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target, int16_t x, int16_t y, int16_t z, int16_t r, uint16_t buttons)$/;"	f
mavlink_msg_manual_setpoint_decode	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline void mavlink_msg_manual_setpoint_decode(const mavlink_message_t* msg, mavlink_manual_setpoint_t* manual_setpoint)$/;"	f
mavlink_msg_manual_setpoint_encode	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline uint16_t mavlink_msg_manual_setpoint_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_manual_setpoint_t* manual_setpoint)$/;"	f
mavlink_msg_manual_setpoint_encode_chan	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline uint16_t mavlink_msg_manual_setpoint_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_manual_setpoint_t* manual_setpoint)$/;"	f
mavlink_msg_manual_setpoint_get_manual_override_switch	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline uint8_t mavlink_msg_manual_setpoint_get_manual_override_switch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_mode_switch	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline uint8_t mavlink_msg_manual_setpoint_get_mode_switch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_pitch	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline float mavlink_msg_manual_setpoint_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_roll	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline float mavlink_msg_manual_setpoint_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_thrust	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline float mavlink_msg_manual_setpoint_get_thrust(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline uint32_t mavlink_msg_manual_setpoint_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_yaw	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline float mavlink_msg_manual_setpoint_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_pack	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline uint16_t mavlink_msg_manual_setpoint_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust, uint8_t mode_switch, uint8_t manual_override_switch)$/;"	f
mavlink_msg_manual_setpoint_pack_chan	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline uint16_t mavlink_msg_manual_setpoint_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust, uint8_t mode_switch, uint8_t manual_override_switch)$/;"	f
mavlink_msg_manual_setpoint_send	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline void mavlink_msg_manual_setpoint_send(mavlink_channel_t chan, uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust, uint8_t mode_switch, uint8_t manual_override_switch)$/;"	f
mavlink_msg_manual_setpoint_send_buf	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^static inline void mavlink_msg_manual_setpoint_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust, uint8_t mode_switch, uint8_t manual_override_switch)$/;"	f
mavlink_msg_memory_vect_decode	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline void mavlink_msg_memory_vect_decode(const mavlink_message_t* msg, mavlink_memory_vect_t* memory_vect)$/;"	f
mavlink_msg_memory_vect_encode	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_memory_vect_t* memory_vect)$/;"	f
mavlink_msg_memory_vect_encode_chan	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_memory_vect_t* memory_vect)$/;"	f
mavlink_msg_memory_vect_get_address	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_get_address(const mavlink_message_t* msg)$/;"	f
mavlink_msg_memory_vect_get_type	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline uint8_t mavlink_msg_memory_vect_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_memory_vect_get_value	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_get_value(const mavlink_message_t* msg, int8_t *value)$/;"	f
mavlink_msg_memory_vect_get_ver	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline uint8_t mavlink_msg_memory_vect_get_ver(const mavlink_message_t* msg)$/;"	f
mavlink_msg_memory_vect_pack	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint16_t address, uint8_t ver, uint8_t type, const int8_t *value)$/;"	f
mavlink_msg_memory_vect_pack_chan	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint16_t address, uint8_t ver, uint8_t type, const int8_t *value)$/;"	f
mavlink_msg_memory_vect_send	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline void mavlink_msg_memory_vect_send(mavlink_channel_t chan, uint16_t address, uint8_t ver, uint8_t type, const int8_t *value)$/;"	f
mavlink_msg_memory_vect_send_buf	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^static inline void mavlink_msg_memory_vect_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint16_t address, uint8_t ver, uint8_t type, const int8_t *value)$/;"	f
mavlink_msg_mission_ack_decode	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline void mavlink_msg_mission_ack_decode(const mavlink_message_t* msg, mavlink_mission_ack_t* mission_ack)$/;"	f
mavlink_msg_mission_ack_encode	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline uint16_t mavlink_msg_mission_ack_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_ack_t* mission_ack)$/;"	f
mavlink_msg_mission_ack_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline uint16_t mavlink_msg_mission_ack_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_ack_t* mission_ack)$/;"	f
mavlink_msg_mission_ack_get_target_component	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline uint8_t mavlink_msg_mission_ack_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_ack_get_target_system	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline uint8_t mavlink_msg_mission_ack_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_ack_get_type	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline uint8_t mavlink_msg_mission_ack_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_ack_pack	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline uint16_t mavlink_msg_mission_ack_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t type)$/;"	f
mavlink_msg_mission_ack_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline uint16_t mavlink_msg_mission_ack_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t type)$/;"	f
mavlink_msg_mission_ack_send	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline void mavlink_msg_mission_ack_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t type)$/;"	f
mavlink_msg_mission_ack_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^static inline void mavlink_msg_mission_ack_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t type)$/;"	f
mavlink_msg_mission_clear_all_decode	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^static inline void mavlink_msg_mission_clear_all_decode(const mavlink_message_t* msg, mavlink_mission_clear_all_t* mission_clear_all)$/;"	f
mavlink_msg_mission_clear_all_encode	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^static inline uint16_t mavlink_msg_mission_clear_all_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_clear_all_t* mission_clear_all)$/;"	f
mavlink_msg_mission_clear_all_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^static inline uint16_t mavlink_msg_mission_clear_all_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_clear_all_t* mission_clear_all)$/;"	f
mavlink_msg_mission_clear_all_get_target_component	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^static inline uint8_t mavlink_msg_mission_clear_all_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_clear_all_get_target_system	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^static inline uint8_t mavlink_msg_mission_clear_all_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_clear_all_pack	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^static inline uint16_t mavlink_msg_mission_clear_all_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_clear_all_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^static inline uint16_t mavlink_msg_mission_clear_all_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_clear_all_send	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^static inline void mavlink_msg_mission_clear_all_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_clear_all_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^static inline void mavlink_msg_mission_clear_all_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_count_decode	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline void mavlink_msg_mission_count_decode(const mavlink_message_t* msg, mavlink_mission_count_t* mission_count)$/;"	f
mavlink_msg_mission_count_encode	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_count_t* mission_count)$/;"	f
mavlink_msg_mission_count_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_count_t* mission_count)$/;"	f
mavlink_msg_mission_count_get_count	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_get_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_count_get_target_component	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline uint8_t mavlink_msg_mission_count_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_count_get_target_system	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline uint8_t mavlink_msg_mission_count_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_count_pack	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t count)$/;"	f
mavlink_msg_mission_count_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t count)$/;"	f
mavlink_msg_mission_count_send	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline void mavlink_msg_mission_count_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t count)$/;"	f
mavlink_msg_mission_count_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^static inline void mavlink_msg_mission_count_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t count)$/;"	f
mavlink_msg_mission_current_decode	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^static inline void mavlink_msg_mission_current_decode(const mavlink_message_t* msg, mavlink_mission_current_t* mission_current)$/;"	f
mavlink_msg_mission_current_encode	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_current_t* mission_current)$/;"	f
mavlink_msg_mission_current_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_current_t* mission_current)$/;"	f
mavlink_msg_mission_current_get_seq	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_current_pack	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint16_t seq)$/;"	f
mavlink_msg_mission_current_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint16_t seq)$/;"	f
mavlink_msg_mission_current_send	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^static inline void mavlink_msg_mission_current_send(mavlink_channel_t chan, uint16_t seq)$/;"	f
mavlink_msg_mission_current_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^static inline void mavlink_msg_mission_current_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint16_t seq)$/;"	f
mavlink_msg_mission_item_decode	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline void mavlink_msg_mission_item_decode(const mavlink_message_t* msg, mavlink_mission_item_t* mission_item)$/;"	f
mavlink_msg_mission_item_encode	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_item_t* mission_item)$/;"	f
mavlink_msg_mission_item_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_item_t* mission_item)$/;"	f
mavlink_msg_mission_item_get_autocontinue	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_autocontinue(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_command	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_get_command(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_current	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_current(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_frame	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_param1	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_param1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_param2	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_param2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_param3	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_param3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_param4	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_param4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_seq	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_target_component	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_target_system	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_x	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_y	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_z	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_pack	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t seq, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue, float param1, float param2,$/;"	f
mavlink_msg_mission_item_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t seq, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue,$/;"	f
mavlink_msg_mission_item_reached_decode	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^static inline void mavlink_msg_mission_item_reached_decode(const mavlink_message_t* msg, mavlink_mission_item_reached_t* mission_item_reached)$/;"	f
mavlink_msg_mission_item_reached_encode	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_item_reached_t* mission_item_reached)$/;"	f
mavlink_msg_mission_item_reached_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_item_reached_t* mission_item_reached)$/;"	f
mavlink_msg_mission_item_reached_get_seq	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_reached_pack	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint16_t seq)$/;"	f
mavlink_msg_mission_item_reached_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint16_t seq)$/;"	f
mavlink_msg_mission_item_reached_send	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^static inline void mavlink_msg_mission_item_reached_send(mavlink_channel_t chan, uint16_t seq)$/;"	f
mavlink_msg_mission_item_reached_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^static inline void mavlink_msg_mission_item_reached_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint16_t seq)$/;"	f
mavlink_msg_mission_item_send	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline void mavlink_msg_mission_item_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue, float param1, float param2, float param3, float param4, float x, float y, float z)$/;"	f
mavlink_msg_mission_item_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^static inline void mavlink_msg_mission_item_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue, float param1, float param2, float param3, float param4, float x, float y, float z)$/;"	f
mavlink_msg_mission_request_decode	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline void mavlink_msg_mission_request_decode(const mavlink_message_t* msg, mavlink_mission_request_t* mission_request)$/;"	f
mavlink_msg_mission_request_encode	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_request_t* mission_request)$/;"	f
mavlink_msg_mission_request_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_request_t* mission_request)$/;"	f
mavlink_msg_mission_request_get_seq	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_get_target_component	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline uint8_t mavlink_msg_mission_request_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_get_target_system	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline uint8_t mavlink_msg_mission_request_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_list_decode	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^static inline void mavlink_msg_mission_request_list_decode(const mavlink_message_t* msg, mavlink_mission_request_list_t* mission_request_list)$/;"	f
mavlink_msg_mission_request_list_encode	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^static inline uint16_t mavlink_msg_mission_request_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_request_list_t* mission_request_list)$/;"	f
mavlink_msg_mission_request_list_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^static inline uint16_t mavlink_msg_mission_request_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_request_list_t* mission_request_list)$/;"	f
mavlink_msg_mission_request_list_get_target_component	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^static inline uint8_t mavlink_msg_mission_request_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_list_get_target_system	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^static inline uint8_t mavlink_msg_mission_request_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_list_pack	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^static inline uint16_t mavlink_msg_mission_request_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_request_list_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^static inline uint16_t mavlink_msg_mission_request_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_request_list_send	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^static inline void mavlink_msg_mission_request_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_request_list_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^static inline void mavlink_msg_mission_request_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_request_pack	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_request_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_request_partial_list_decode	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline void mavlink_msg_mission_request_partial_list_decode(const mavlink_message_t* msg, mavlink_mission_request_partial_list_t* mission_request_partial_list)$/;"	f
mavlink_msg_mission_request_partial_list_encode	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline uint16_t mavlink_msg_mission_request_partial_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_request_partial_list_t* mission_request_partial_list)$/;"	f
mavlink_msg_mission_request_partial_list_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline uint16_t mavlink_msg_mission_request_partial_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_request_partial_list_t* mission_request_partial_list)$/;"	f
mavlink_msg_mission_request_partial_list_get_end_index	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline int16_t mavlink_msg_mission_request_partial_list_get_end_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_partial_list_get_start_index	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline int16_t mavlink_msg_mission_request_partial_list_get_start_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_partial_list_get_target_component	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline uint8_t mavlink_msg_mission_request_partial_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_partial_list_get_target_system	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline uint8_t mavlink_msg_mission_request_partial_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_partial_list_pack	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline uint16_t mavlink_msg_mission_request_partial_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_request_partial_list_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline uint16_t mavlink_msg_mission_request_partial_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_request_partial_list_send	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline void mavlink_msg_mission_request_partial_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_request_partial_list_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^static inline void mavlink_msg_mission_request_partial_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_request_send	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline void mavlink_msg_mission_request_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_request_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^static inline void mavlink_msg_mission_request_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_set_current_decode	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline void mavlink_msg_mission_set_current_decode(const mavlink_message_t* msg, mavlink_mission_set_current_t* mission_set_current)$/;"	f
mavlink_msg_mission_set_current_encode	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_set_current_t* mission_set_current)$/;"	f
mavlink_msg_mission_set_current_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_set_current_t* mission_set_current)$/;"	f
mavlink_msg_mission_set_current_get_seq	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_set_current_get_target_component	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline uint8_t mavlink_msg_mission_set_current_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_set_current_get_target_system	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline uint8_t mavlink_msg_mission_set_current_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_set_current_pack	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_set_current_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_set_current_send	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline void mavlink_msg_mission_set_current_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_set_current_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^static inline void mavlink_msg_mission_set_current_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_write_partial_list_decode	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline void mavlink_msg_mission_write_partial_list_decode(const mavlink_message_t* msg, mavlink_mission_write_partial_list_t* mission_write_partial_list)$/;"	f
mavlink_msg_mission_write_partial_list_encode	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline uint16_t mavlink_msg_mission_write_partial_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_write_partial_list_t* mission_write_partial_list)$/;"	f
mavlink_msg_mission_write_partial_list_encode_chan	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline uint16_t mavlink_msg_mission_write_partial_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_write_partial_list_t* mission_write_partial_list)$/;"	f
mavlink_msg_mission_write_partial_list_get_end_index	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline int16_t mavlink_msg_mission_write_partial_list_get_end_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_write_partial_list_get_start_index	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline int16_t mavlink_msg_mission_write_partial_list_get_start_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_write_partial_list_get_target_component	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline uint8_t mavlink_msg_mission_write_partial_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_write_partial_list_get_target_system	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline uint8_t mavlink_msg_mission_write_partial_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_write_partial_list_pack	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline uint16_t mavlink_msg_mission_write_partial_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_write_partial_list_pack_chan	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline uint16_t mavlink_msg_mission_write_partial_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_write_partial_list_send	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline void mavlink_msg_mission_write_partial_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_write_partial_list_send_buf	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^static inline void mavlink_msg_mission_write_partial_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_named_value_float_decode	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline void mavlink_msg_named_value_float_decode(const mavlink_message_t* msg, mavlink_named_value_float_t* named_value_float)$/;"	f
mavlink_msg_named_value_float_encode	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_named_value_float_t* named_value_float)$/;"	f
mavlink_msg_named_value_float_encode_chan	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_named_value_float_t* named_value_float)$/;"	f
mavlink_msg_named_value_float_get_name	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_get_name(const mavlink_message_t* msg, char *name)$/;"	f
mavlink_msg_named_value_float_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline uint32_t mavlink_msg_named_value_float_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_named_value_float_get_value	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline float mavlink_msg_named_value_float_get_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_named_value_float_pack	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, const char *name, float value)$/;"	f
mavlink_msg_named_value_float_pack_chan	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, const char *name, float value)$/;"	f
mavlink_msg_named_value_float_send	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline void mavlink_msg_named_value_float_send(mavlink_channel_t chan, uint32_t time_boot_ms, const char *name, float value)$/;"	f
mavlink_msg_named_value_float_send_buf	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^static inline void mavlink_msg_named_value_float_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, const char *name, float value)$/;"	f
mavlink_msg_named_value_int_decode	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline void mavlink_msg_named_value_int_decode(const mavlink_message_t* msg, mavlink_named_value_int_t* named_value_int)$/;"	f
mavlink_msg_named_value_int_encode	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_named_value_int_t* named_value_int)$/;"	f
mavlink_msg_named_value_int_encode_chan	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_named_value_int_t* named_value_int)$/;"	f
mavlink_msg_named_value_int_get_name	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_get_name(const mavlink_message_t* msg, char *name)$/;"	f
mavlink_msg_named_value_int_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline uint32_t mavlink_msg_named_value_int_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_named_value_int_get_value	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline int32_t mavlink_msg_named_value_int_get_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_named_value_int_pack	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, const char *name, int32_t value)$/;"	f
mavlink_msg_named_value_int_pack_chan	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, const char *name, int32_t value)$/;"	f
mavlink_msg_named_value_int_send	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline void mavlink_msg_named_value_int_send(mavlink_channel_t chan, uint32_t time_boot_ms, const char *name, int32_t value)$/;"	f
mavlink_msg_named_value_int_send_buf	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^static inline void mavlink_msg_named_value_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, const char *name, int32_t value)$/;"	f
mavlink_msg_nav_controller_output_decode	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline void mavlink_msg_nav_controller_output_decode(const mavlink_message_t* msg, mavlink_nav_controller_output_t* nav_controller_output)$/;"	f
mavlink_msg_nav_controller_output_encode	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_nav_controller_output_t* nav_controller_output)$/;"	f
mavlink_msg_nav_controller_output_encode_chan	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_nav_controller_output_t* nav_controller_output)$/;"	f
mavlink_msg_nav_controller_output_get_alt_error	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_alt_error(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_aspd_error	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_aspd_error(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_nav_bearing	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline int16_t mavlink_msg_nav_controller_output_get_nav_bearing(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_nav_pitch	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_nav_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_nav_roll	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_nav_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_target_bearing	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline int16_t mavlink_msg_nav_controller_output_get_target_bearing(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_wp_dist	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_get_wp_dist(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_xtrack_error	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_xtrack_error(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_pack	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, float nav_roll, float nav_pitch, int16_t nav_bearing, int16_t target_bearing, uint16_t wp_dist, float alt_error, float aspd_error, float xtrack_error)$/;"	f
mavlink_msg_nav_controller_output_pack_chan	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, float nav_roll, float nav_pitch, int16_t nav_bearing, int16_t target_bearing, uint16_t wp_dist, float alt_error, float aspd_error,$/;"	f
mavlink_msg_nav_controller_output_send	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline void mavlink_msg_nav_controller_output_send(mavlink_channel_t chan, float nav_roll, float nav_pitch, int16_t nav_bearing, int16_t target_bearing, uint16_t wp_dist, float alt_error, float aspd_error, float xtrack_error)$/;"	f
mavlink_msg_nav_controller_output_send_buf	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^static inline void mavlink_msg_nav_controller_output_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, float nav_roll, float nav_pitch, int16_t nav_bearing, int16_t target_bearing, uint16_t wp_dist, float alt_error, float aspd_error, float xtrack_error)$/;"	f
mavlink_msg_omnidirectional_flow_decode	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline void mavlink_msg_omnidirectional_flow_decode(const mavlink_message_t* msg, mavlink_omnidirectional_flow_t* omnidirectional_flow)$/;"	f
mavlink_msg_omnidirectional_flow_encode	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline uint16_t mavlink_msg_omnidirectional_flow_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_omnidirectional_flow_t* omnidirectional_flow)$/;"	f
mavlink_msg_omnidirectional_flow_encode_chan	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline uint16_t mavlink_msg_omnidirectional_flow_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_omnidirectional_flow_t* omnidirectional_flow)$/;"	f
mavlink_msg_omnidirectional_flow_get_front_distance_m	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline float mavlink_msg_omnidirectional_flow_get_front_distance_m(const mavlink_message_t* msg)$/;"	f
mavlink_msg_omnidirectional_flow_get_left	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline uint16_t mavlink_msg_omnidirectional_flow_get_left(const mavlink_message_t* msg, int16_t *left)$/;"	f
mavlink_msg_omnidirectional_flow_get_quality	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline uint8_t mavlink_msg_omnidirectional_flow_get_quality(const mavlink_message_t* msg)$/;"	f
mavlink_msg_omnidirectional_flow_get_right	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline uint16_t mavlink_msg_omnidirectional_flow_get_right(const mavlink_message_t* msg, int16_t *right)$/;"	f
mavlink_msg_omnidirectional_flow_get_sensor_id	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline uint8_t mavlink_msg_omnidirectional_flow_get_sensor_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_omnidirectional_flow_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline uint64_t mavlink_msg_omnidirectional_flow_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_omnidirectional_flow_pack	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline uint16_t mavlink_msg_omnidirectional_flow_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, uint8_t sensor_id, const int16_t *left, const int16_t *right, uint8_t quality, float front_distance_m)$/;"	f
mavlink_msg_omnidirectional_flow_pack_chan	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline uint16_t mavlink_msg_omnidirectional_flow_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, uint8_t sensor_id, const int16_t *left, const int16_t *right, uint8_t quality, float front_distance_m)$/;"	f
mavlink_msg_omnidirectional_flow_send	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline void mavlink_msg_omnidirectional_flow_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t sensor_id, const int16_t *left, const int16_t *right, uint8_t quality, float front_distance_m)$/;"	f
mavlink_msg_omnidirectional_flow_send_buf	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^static inline void mavlink_msg_omnidirectional_flow_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, uint8_t sensor_id, const int16_t *left, const int16_t *right, uint8_t quality, float front_distance_m)$/;"	f
mavlink_msg_optical_flow_decode	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline void mavlink_msg_optical_flow_decode(const mavlink_message_t* msg, mavlink_optical_flow_t* optical_flow)$/;"	f
mavlink_msg_optical_flow_encode	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline uint16_t mavlink_msg_optical_flow_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_optical_flow_t* optical_flow)$/;"	f
mavlink_msg_optical_flow_encode_chan	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline uint16_t mavlink_msg_optical_flow_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_optical_flow_t* optical_flow)$/;"	f
mavlink_msg_optical_flow_get_flow_comp_m_x	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline float mavlink_msg_optical_flow_get_flow_comp_m_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_flow_comp_m_y	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline float mavlink_msg_optical_flow_get_flow_comp_m_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_flow_x	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline int16_t mavlink_msg_optical_flow_get_flow_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_flow_y	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline int16_t mavlink_msg_optical_flow_get_flow_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_ground_distance	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline float mavlink_msg_optical_flow_get_ground_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_quality	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline uint8_t mavlink_msg_optical_flow_get_quality(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_sensor_id	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline uint8_t mavlink_msg_optical_flow_get_sensor_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline uint64_t mavlink_msg_optical_flow_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_pack	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline uint16_t mavlink_msg_optical_flow_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality, float ground_distance)$/;"	f
mavlink_msg_optical_flow_pack_chan	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline uint16_t mavlink_msg_optical_flow_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality,$/;"	f
mavlink_msg_optical_flow_send	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline void mavlink_msg_optical_flow_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality, float ground_distance)$/;"	f
mavlink_msg_optical_flow_send_buf	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^static inline void mavlink_msg_optical_flow_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality, float ground_distance)$/;"	f
mavlink_msg_param_request_list_decode	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^static inline void mavlink_msg_param_request_list_decode(const mavlink_message_t* msg, mavlink_param_request_list_t* param_request_list)$/;"	f
mavlink_msg_param_request_list_encode	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^static inline uint16_t mavlink_msg_param_request_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_param_request_list_t* param_request_list)$/;"	f
mavlink_msg_param_request_list_encode_chan	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^static inline uint16_t mavlink_msg_param_request_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_param_request_list_t* param_request_list)$/;"	f
mavlink_msg_param_request_list_get_target_component	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^static inline uint8_t mavlink_msg_param_request_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_list_get_target_system	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^static inline uint8_t mavlink_msg_param_request_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_list_pack	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^static inline uint16_t mavlink_msg_param_request_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_param_request_list_pack_chan	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^static inline uint16_t mavlink_msg_param_request_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_param_request_list_send	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^static inline void mavlink_msg_param_request_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_param_request_list_send_buf	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^static inline void mavlink_msg_param_request_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_param_request_read_decode	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline void mavlink_msg_param_request_read_decode(const mavlink_message_t* msg, mavlink_param_request_read_t* param_request_read)$/;"	f
mavlink_msg_param_request_read_encode	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_param_request_read_t* param_request_read)$/;"	f
mavlink_msg_param_request_read_encode_chan	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_param_request_read_t* param_request_read)$/;"	f
mavlink_msg_param_request_read_get_param_id	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_get_param_id(const mavlink_message_t* msg, char *param_id)$/;"	f
mavlink_msg_param_request_read_get_param_index	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline int16_t mavlink_msg_param_request_read_get_param_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_read_get_target_component	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline uint8_t mavlink_msg_param_request_read_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_read_get_target_system	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline uint8_t mavlink_msg_param_request_read_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_read_pack	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, const char *param_id, int16_t param_index)$/;"	f
mavlink_msg_param_request_read_pack_chan	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, const char *param_id, int16_t param_index)$/;"	f
mavlink_msg_param_request_read_send	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline void mavlink_msg_param_request_read_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, const char *param_id, int16_t param_index)$/;"	f
mavlink_msg_param_request_read_send_buf	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^static inline void mavlink_msg_param_request_read_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, const char *param_id, int16_t param_index)$/;"	f
mavlink_msg_param_set_decode	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline void mavlink_msg_param_set_decode(const mavlink_message_t* msg, mavlink_param_set_t* param_set)$/;"	f
mavlink_msg_param_set_encode	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_param_set_t* param_set)$/;"	f
mavlink_msg_param_set_encode_chan	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_param_set_t* param_set)$/;"	f
mavlink_msg_param_set_get_param_id	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_get_param_id(const mavlink_message_t* msg, char *param_id)$/;"	f
mavlink_msg_param_set_get_param_type	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline uint8_t mavlink_msg_param_set_get_param_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_set_get_param_value	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline float mavlink_msg_param_set_get_param_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_set_get_target_component	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline uint8_t mavlink_msg_param_set_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_set_get_target_system	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline uint8_t mavlink_msg_param_set_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_set_pack	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, const char *param_id, float param_value, uint8_t param_type)$/;"	f
mavlink_msg_param_set_pack_chan	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, const char *param_id, float param_value, uint8_t param_type)$/;"	f
mavlink_msg_param_set_send	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline void mavlink_msg_param_set_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, const char *param_id, float param_value, uint8_t param_type)$/;"	f
mavlink_msg_param_set_send_buf	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^static inline void mavlink_msg_param_set_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, const char *param_id, float param_value, uint8_t param_type)$/;"	f
mavlink_msg_param_value_decode	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline void mavlink_msg_param_value_decode(const mavlink_message_t* msg, mavlink_param_value_t* param_value)$/;"	f
mavlink_msg_param_value_encode	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_param_value_t* param_value)$/;"	f
mavlink_msg_param_value_encode_chan	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_param_value_t* param_value)$/;"	f
mavlink_msg_param_value_get_param_count	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_get_param_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_value_get_param_id	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_get_param_id(const mavlink_message_t* msg, char *param_id)$/;"	f
mavlink_msg_param_value_get_param_index	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_get_param_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_value_get_param_type	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline uint8_t mavlink_msg_param_value_get_param_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_value_get_param_value	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline float mavlink_msg_param_value_get_param_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_value_pack	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const char *param_id, float param_value, uint8_t param_type, uint16_t param_count, uint16_t param_index)$/;"	f
mavlink_msg_param_value_pack_chan	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const char *param_id, float param_value, uint8_t param_type, uint16_t param_count, uint16_t param_index)$/;"	f
mavlink_msg_param_value_send	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline void mavlink_msg_param_value_send(mavlink_channel_t chan, const char *param_id, float param_value, uint8_t param_type, uint16_t param_count, uint16_t param_index)$/;"	f
mavlink_msg_param_value_send_buf	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^static inline void mavlink_msg_param_value_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, const char *param_id, float param_value, uint8_t param_type, uint16_t param_count, uint16_t param_index)$/;"	f
mavlink_msg_ping_decode	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline void mavlink_msg_ping_decode(const mavlink_message_t* msg, mavlink_ping_t* ping)$/;"	f
mavlink_msg_ping_encode	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline uint16_t mavlink_msg_ping_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_ping_t* ping)$/;"	f
mavlink_msg_ping_encode_chan	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline uint16_t mavlink_msg_ping_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_ping_t* ping)$/;"	f
mavlink_msg_ping_get_seq	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline uint32_t mavlink_msg_ping_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_ping_get_target_component	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline uint8_t mavlink_msg_ping_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_ping_get_target_system	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline uint8_t mavlink_msg_ping_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_ping_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline uint64_t mavlink_msg_ping_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_ping_pack	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline uint16_t mavlink_msg_ping_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, uint32_t seq, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_ping_pack_chan	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline uint16_t mavlink_msg_ping_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, uint32_t seq, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_ping_send	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline void mavlink_msg_ping_send(mavlink_channel_t chan, uint64_t time_usec, uint32_t seq, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_ping_send_buf	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^static inline void mavlink_msg_ping_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, uint32_t seq, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_power_status_decode	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline void mavlink_msg_power_status_decode(const mavlink_message_t* msg, mavlink_power_status_t* power_status)$/;"	f
mavlink_msg_power_status_encode	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_power_status_t* power_status)$/;"	f
mavlink_msg_power_status_encode_chan	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_power_status_t* power_status)$/;"	f
mavlink_msg_power_status_get_Vcc	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_get_Vcc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_power_status_get_Vservo	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_get_Vservo(const mavlink_message_t* msg)$/;"	f
mavlink_msg_power_status_get_flags	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_get_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_power_status_pack	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint16_t Vcc, uint16_t Vservo, uint16_t flags)$/;"	f
mavlink_msg_power_status_pack_chan	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint16_t Vcc, uint16_t Vservo, uint16_t flags)$/;"	f
mavlink_msg_power_status_send	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline void mavlink_msg_power_status_send(mavlink_channel_t chan, uint16_t Vcc, uint16_t Vservo, uint16_t flags)$/;"	f
mavlink_msg_power_status_send_buf	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^static inline void mavlink_msg_power_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint16_t Vcc, uint16_t Vservo, uint16_t flags)$/;"	f
mavlink_msg_radio_status_decode	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline void mavlink_msg_radio_status_decode(const mavlink_message_t* msg, mavlink_radio_status_t* radio_status)$/;"	f
mavlink_msg_radio_status_encode	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_radio_status_t* radio_status)$/;"	f
mavlink_msg_radio_status_encode_chan	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_radio_status_t* radio_status)$/;"	f
mavlink_msg_radio_status_get_fixed	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_get_fixed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_noise	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_noise(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_remnoise	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_remnoise(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_remrssi	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_remrssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_rssi	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_rxerrors	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_get_rxerrors(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_txbuf	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_txbuf(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_pack	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t rssi, uint8_t remrssi, uint8_t txbuf, uint8_t noise, uint8_t remnoise, uint16_t rxerrors, uint16_t fixed)$/;"	f
mavlink_msg_radio_status_pack_chan	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t rssi, uint8_t remrssi, uint8_t txbuf, uint8_t noise, uint8_t remnoise, uint16_t rxerrors, uint16_t fixed)$/;"	f
mavlink_msg_radio_status_send	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline void mavlink_msg_radio_status_send(mavlink_channel_t chan, uint8_t rssi, uint8_t remrssi, uint8_t txbuf, uint8_t noise, uint8_t remnoise, uint16_t rxerrors, uint16_t fixed)$/;"	f
mavlink_msg_radio_status_send_buf	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^static inline void mavlink_msg_radio_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t rssi, uint8_t remrssi, uint8_t txbuf, uint8_t noise, uint8_t remnoise, uint16_t rxerrors, uint16_t fixed)$/;"	f
mavlink_msg_raw_imu_decode	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline void mavlink_msg_raw_imu_decode(const mavlink_message_t* msg, mavlink_raw_imu_t* raw_imu)$/;"	f
mavlink_msg_raw_imu_encode	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline uint16_t mavlink_msg_raw_imu_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_raw_imu_t* raw_imu)$/;"	f
mavlink_msg_raw_imu_encode_chan	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline uint16_t mavlink_msg_raw_imu_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_raw_imu_t* raw_imu)$/;"	f
mavlink_msg_raw_imu_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline uint64_t mavlink_msg_raw_imu_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_xacc	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_xgyro	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_xmag	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_yacc	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_ygyro	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_ymag	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_zacc	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_zgyro	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_zmag	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_pack	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline uint16_t mavlink_msg_raw_imu_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_raw_imu_pack_chan	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline uint16_t mavlink_msg_raw_imu_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_raw_imu_send	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline void mavlink_msg_raw_imu_send(mavlink_channel_t chan, uint64_t time_usec, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_raw_imu_send_buf	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^static inline void mavlink_msg_raw_imu_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_raw_pressure_decode	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline void mavlink_msg_raw_pressure_decode(const mavlink_message_t* msg, mavlink_raw_pressure_t* raw_pressure)$/;"	f
mavlink_msg_raw_pressure_encode	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline uint16_t mavlink_msg_raw_pressure_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_raw_pressure_t* raw_pressure)$/;"	f
mavlink_msg_raw_pressure_encode_chan	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline uint16_t mavlink_msg_raw_pressure_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_raw_pressure_t* raw_pressure)$/;"	f
mavlink_msg_raw_pressure_get_press_abs	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline int16_t mavlink_msg_raw_pressure_get_press_abs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_get_press_diff1	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline int16_t mavlink_msg_raw_pressure_get_press_diff1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_get_press_diff2	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline int16_t mavlink_msg_raw_pressure_get_press_diff2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_get_temperature	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline int16_t mavlink_msg_raw_pressure_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline uint64_t mavlink_msg_raw_pressure_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_pack	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline uint16_t mavlink_msg_raw_pressure_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_usec, int16_t press_abs, int16_t press_diff1, int16_t press_diff2, int16_t temperature)$/;"	f
mavlink_msg_raw_pressure_pack_chan	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline uint16_t mavlink_msg_raw_pressure_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_usec, int16_t press_abs, int16_t press_diff1, int16_t press_diff2, int16_t temperature)$/;"	f
mavlink_msg_raw_pressure_send	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline void mavlink_msg_raw_pressure_send(mavlink_channel_t chan, uint64_t time_usec, int16_t press_abs, int16_t press_diff1, int16_t press_diff2, int16_t temperature)$/;"	f
mavlink_msg_raw_pressure_send_buf	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^static inline void mavlink_msg_raw_pressure_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_usec, int16_t press_abs, int16_t press_diff1, int16_t press_diff2, int16_t temperature)$/;"	f
mavlink_msg_rc_channels_decode	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline void mavlink_msg_rc_channels_decode(const mavlink_message_t* msg, mavlink_rc_channels_t* rc_channels)$/;"	f
mavlink_msg_rc_channels_encode	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_rc_channels_t* rc_channels)$/;"	f
mavlink_msg_rc_channels_encode_chan	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_rc_channels_t* rc_channels)$/;"	f
mavlink_msg_rc_channels_get_chan10_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan10_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan11_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan11_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan12_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan12_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan13_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan13_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan14_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan14_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan15_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan15_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan16_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan16_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan17_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan17_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan18_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan18_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan1_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan2_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan3_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan4_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan5_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan6_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan7_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan8_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan9_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan9_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chancount	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint8_t mavlink_msg_rc_channels_get_chancount(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_rssi	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint8_t mavlink_msg_rc_channels_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint32_t mavlink_msg_rc_channels_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_decode	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline void mavlink_msg_rc_channels_override_decode(const mavlink_message_t* msg, mavlink_rc_channels_override_t* rc_channels_override)$/;"	f
mavlink_msg_rc_channels_override_encode	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_rc_channels_override_t* rc_channels_override)$/;"	f
mavlink_msg_rc_channels_override_encode_chan	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_rc_channels_override_t* rc_channels_override)$/;"	f
mavlink_msg_rc_channels_override_get_chan1_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan2_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan3_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan4_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan5_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan6_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan7_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan8_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_target_component	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint8_t mavlink_msg_rc_channels_override_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_target_system	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint8_t mavlink_msg_rc_channels_override_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_pack	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw,$/;"	f
mavlink_msg_rc_channels_override_pack_chan	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw,$/;"	f
mavlink_msg_rc_channels_override_send	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline void mavlink_msg_rc_channels_override_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw)$/;"	f
mavlink_msg_rc_channels_override_send_buf	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^static inline void mavlink_msg_rc_channels_override_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw)$/;"	f
mavlink_msg_rc_channels_pack	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t chancount, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw,$/;"	f
mavlink_msg_rc_channels_pack_chan	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t chancount, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw,$/;"	f
mavlink_msg_rc_channels_raw_decode	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline void mavlink_msg_rc_channels_raw_decode(const mavlink_message_t* msg, mavlink_rc_channels_raw_t* rc_channels_raw)$/;"	f
mavlink_msg_rc_channels_raw_encode	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_rc_channels_raw_t* rc_channels_raw)$/;"	f
mavlink_msg_rc_channels_raw_encode_chan	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_rc_channels_raw_t* rc_channels_raw)$/;"	f
mavlink_msg_rc_channels_raw_get_chan1_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan2_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan3_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan4_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan5_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan6_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan7_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan8_raw	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_port	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint8_t mavlink_msg_rc_channels_raw_get_port(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_rssi	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint8_t mavlink_msg_rc_channels_raw_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint32_t mavlink_msg_rc_channels_raw_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_pack	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t port, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw,$/;"	f
mavlink_msg_rc_channels_raw_pack_chan	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t port, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw,$/;"	f
mavlink_msg_rc_channels_raw_send	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline void mavlink_msg_rc_channels_raw_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t port, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_raw_send_buf	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^static inline void mavlink_msg_rc_channels_raw_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t port, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_scaled_decode	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline void mavlink_msg_rc_channels_scaled_decode(const mavlink_message_t* msg, mavlink_rc_channels_scaled_t* rc_channels_scaled)$/;"	f
mavlink_msg_rc_channels_scaled_encode	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline uint16_t mavlink_msg_rc_channels_scaled_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_rc_channels_scaled_t* rc_channels_scaled)$/;"	f
mavlink_msg_rc_channels_scaled_encode_chan	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline uint16_t mavlink_msg_rc_channels_scaled_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_rc_channels_scaled_t* rc_channels_scaled)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan1_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan1_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan2_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan2_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan3_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan3_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan4_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan4_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan5_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan5_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan6_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan6_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan7_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan7_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan8_scaled	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan8_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_port	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline uint8_t mavlink_msg_rc_channels_scaled_get_port(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_rssi	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline uint8_t mavlink_msg_rc_channels_scaled_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline uint32_t mavlink_msg_rc_channels_scaled_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_pack	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline uint16_t mavlink_msg_rc_channels_scaled_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t port, int16_t chan1_scaled, int16_t chan2_scaled, int16_t chan3_scaled, int16_t chan4_scaled, int16_t chan5_scaled,$/;"	f
mavlink_msg_rc_channels_scaled_pack_chan	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline uint16_t mavlink_msg_rc_channels_scaled_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, uint8_t port, int16_t chan1_scaled, int16_t chan2_scaled, int16_t chan3_scaled, int16_t chan4_scaled,$/;"	f
mavlink_msg_rc_channels_scaled_send	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline void mavlink_msg_rc_channels_scaled_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t port, int16_t chan1_scaled, int16_t chan2_scaled, int16_t chan3_scaled, int16_t chan4_scaled, int16_t chan5_scaled, int16_t chan6_scaled, int16_t chan7_scaled, int16_t chan8_scaled, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_scaled_send_buf	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^static inline void mavlink_msg_rc_channels_scaled_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t port, int16_t chan1_scaled, int16_t chan2_scaled, int16_t chan3_scaled, int16_t chan4_scaled, int16_t chan5_scaled, int16_t chan6_scaled, int16_t chan7_scaled, int16_t chan8_scaled, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_send	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline void mavlink_msg_rc_channels_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t chancount, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint16_t chan9_raw, uint16_t chan10_raw, uint16_t chan11_raw, uint16_t chan12_raw, uint16_t chan13_raw, uint16_t chan14_raw, uint16_t chan15_raw, uint16_t chan16_raw, uint16_t chan17_raw, uint16_t chan18_raw, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_send_buf	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^static inline void mavlink_msg_rc_channels_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t chancount, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint16_t chan9_raw, uint16_t chan10_raw, uint16_t chan11_raw, uint16_t chan12_raw, uint16_t chan13_raw, uint16_t chan14_raw, uint16_t chan15_raw, uint16_t chan16_raw, uint16_t chan17_raw, uint16_t chan18_raw, uint8_t rssi)$/;"	f
mavlink_msg_request_data_stream_decode	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline void mavlink_msg_request_data_stream_decode(const mavlink_message_t* msg, mavlink_request_data_stream_t* request_data_stream)$/;"	f
mavlink_msg_request_data_stream_encode	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_request_data_stream_t* request_data_stream)$/;"	f
mavlink_msg_request_data_stream_encode_chan	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_request_data_stream_t* request_data_stream)$/;"	f
mavlink_msg_request_data_stream_get_req_message_rate	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_get_req_message_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_get_req_stream_id	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline uint8_t mavlink_msg_request_data_stream_get_req_stream_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_get_start_stop	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline uint8_t mavlink_msg_request_data_stream_get_start_stop(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_get_target_component	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline uint8_t mavlink_msg_request_data_stream_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_get_target_system	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline uint8_t mavlink_msg_request_data_stream_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_pack	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t req_stream_id, uint16_t req_message_rate, uint8_t start_stop)$/;"	f
mavlink_msg_request_data_stream_pack_chan	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t req_stream_id, uint16_t req_message_rate, uint8_t start_stop)$/;"	f
mavlink_msg_request_data_stream_send	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline void mavlink_msg_request_data_stream_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t req_stream_id, uint16_t req_message_rate, uint8_t start_stop)$/;"	f
mavlink_msg_request_data_stream_send_buf	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^static inline void mavlink_msg_request_data_stream_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t req_stream_id, uint16_t req_message_rate, uint8_t start_stop)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_decode	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline void mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_decode(const mavlink_message_t* msg, mavlink_roll_pitch_yaw_rates_thrust_setpoint_t* roll_pitch_yaw_rates_thrust_setpoint)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_encode	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_roll_pitch_yaw_rates_thrust_setpoint_t* roll_pitch_yaw_rates_thrust_setpoint)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_encode_chan	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_roll_pitch_yaw_rates_thrust_setpoint_t* roll_pitch_yaw_rates_thrust_setpoint)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_pitch_rate	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_pitch_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_roll_rate	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_roll_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_thrust	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_thrust(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline uint32_t mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_yaw_rate	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_get_yaw_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_pack	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, float roll_rate, float pitch_rate, float yaw_rate, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_pack_chan	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, float roll_rate, float pitch_rate, float yaw_rate, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_send	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline void mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_send(mavlink_channel_t chan, uint32_t time_boot_ms, float roll_rate, float pitch_rate, float yaw_rate, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_send_buf	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^static inline void mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, float roll_rate, float pitch_rate, float yaw_rate, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_decode	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline void mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_decode(const mavlink_message_t* msg, mavlink_roll_pitch_yaw_speed_thrust_setpoint_t* roll_pitch_yaw_speed_thrust_setpoint)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_encode	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_roll_pitch_yaw_speed_thrust_setpoint_t* roll_pitch_yaw_speed_thrust_setpoint)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_encode_chan	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_roll_pitch_yaw_speed_thrust_setpoint_t* roll_pitch_yaw_speed_thrust_setpoint)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_pitch_speed	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_pitch_speed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_roll_speed	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_roll_speed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_thrust	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_thrust(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline uint32_t mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_yaw_speed	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_get_yaw_speed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_pack	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, float roll_speed, float pitch_speed, float yaw_speed, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_pack_chan	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, float roll_speed, float pitch_speed, float yaw_speed, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_send	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline void mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_send(mavlink_channel_t chan, uint32_t time_boot_ms, float roll_speed, float pitch_speed, float yaw_speed, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_send_buf	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^static inline void mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, float roll_speed, float pitch_speed, float yaw_speed, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_decode	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline void mavlink_msg_roll_pitch_yaw_thrust_setpoint_decode(const mavlink_message_t* msg, mavlink_roll_pitch_yaw_thrust_setpoint_t* roll_pitch_yaw_thrust_setpoint)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_encode	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_thrust_setpoint_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_roll_pitch_yaw_thrust_setpoint_t* roll_pitch_yaw_thrust_setpoint)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_encode_chan	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_thrust_setpoint_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_roll_pitch_yaw_thrust_setpoint_t* roll_pitch_yaw_thrust_setpoint)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_pitch	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_roll	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_thrust	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_thrust(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline uint32_t mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_yaw	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline float mavlink_msg_roll_pitch_yaw_thrust_setpoint_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_pack	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_thrust_setpoint_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_pack_chan	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline uint16_t mavlink_msg_roll_pitch_yaw_thrust_setpoint_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_send	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline void mavlink_msg_roll_pitch_yaw_thrust_setpoint_send(mavlink_channel_t chan, uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust)$/;"	f
mavlink_msg_roll_pitch_yaw_thrust_setpoint_send_buf	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^static inline void mavlink_msg_roll_pitch_yaw_thrust_setpoint_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust)$/;"	f
mavlink_msg_safety_allowed_area_decode	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline void mavlink_msg_safety_allowed_area_decode(const mavlink_message_t* msg, mavlink_safety_allowed_area_t* safety_allowed_area)$/;"	f
mavlink_msg_safety_allowed_area_encode	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_allowed_area_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_safety_allowed_area_t* safety_allowed_area)$/;"	f
mavlink_msg_safety_allowed_area_encode_chan	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_allowed_area_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_safety_allowed_area_t* safety_allowed_area)$/;"	f
mavlink_msg_safety_allowed_area_get_frame	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline uint8_t mavlink_msg_safety_allowed_area_get_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p1x	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p1x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p1y	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p1y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p1z	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p1z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p2x	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p2x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p2y	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p2y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p2z	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p2z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_pack	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_allowed_area_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_allowed_area_pack_chan	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_allowed_area_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_allowed_area_send	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline void mavlink_msg_safety_allowed_area_send(mavlink_channel_t chan, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_allowed_area_send_buf	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^static inline void mavlink_msg_safety_allowed_area_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_set_allowed_area_decode	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline void mavlink_msg_safety_set_allowed_area_decode(const mavlink_message_t* msg, mavlink_safety_set_allowed_area_t* safety_set_allowed_area)$/;"	f
mavlink_msg_safety_set_allowed_area_encode	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_set_allowed_area_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_safety_set_allowed_area_t* safety_set_allowed_area)$/;"	f
mavlink_msg_safety_set_allowed_area_encode_chan	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_set_allowed_area_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_safety_set_allowed_area_t* safety_set_allowed_area)$/;"	f
mavlink_msg_safety_set_allowed_area_get_frame	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint8_t mavlink_msg_safety_set_allowed_area_get_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p1x	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p1x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p1y	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p1y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p1z	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p1z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p2x	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p2x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p2y	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p2y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p2z	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p2z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_target_component	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint8_t mavlink_msg_safety_set_allowed_area_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_target_system	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint8_t mavlink_msg_safety_set_allowed_area_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_pack	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_set_allowed_area_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_set_allowed_area_pack_chan	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_set_allowed_area_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_set_allowed_area_send	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline void mavlink_msg_safety_set_allowed_area_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_set_allowed_area_send_buf	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^static inline void mavlink_msg_safety_set_allowed_area_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_scaled_imu2_decode	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline void mavlink_msg_scaled_imu2_decode(const mavlink_message_t* msg, mavlink_scaled_imu2_t* scaled_imu2)$/;"	f
mavlink_msg_scaled_imu2_encode	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline uint16_t mavlink_msg_scaled_imu2_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_scaled_imu2_t* scaled_imu2)$/;"	f
mavlink_msg_scaled_imu2_encode_chan	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline uint16_t mavlink_msg_scaled_imu2_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_scaled_imu2_t* scaled_imu2)$/;"	f
mavlink_msg_scaled_imu2_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline uint32_t mavlink_msg_scaled_imu2_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_xacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_xgyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_xmag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_yacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_ygyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_ymag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_zacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_zgyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_zmag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_pack	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline uint16_t mavlink_msg_scaled_imu2_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu2_pack_chan	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline uint16_t mavlink_msg_scaled_imu2_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag,$/;"	f
mavlink_msg_scaled_imu2_send	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline void mavlink_msg_scaled_imu2_send(mavlink_channel_t chan, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu2_send_buf	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^static inline void mavlink_msg_scaled_imu2_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu_decode	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline void mavlink_msg_scaled_imu_decode(const mavlink_message_t* msg, mavlink_scaled_imu_t* scaled_imu)$/;"	f
mavlink_msg_scaled_imu_encode	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline uint16_t mavlink_msg_scaled_imu_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_scaled_imu_t* scaled_imu)$/;"	f
mavlink_msg_scaled_imu_encode_chan	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline uint16_t mavlink_msg_scaled_imu_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_scaled_imu_t* scaled_imu)$/;"	f
mavlink_msg_scaled_imu_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline uint32_t mavlink_msg_scaled_imu_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_xacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_xgyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_xmag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_yacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_ygyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_ymag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_zacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_zgyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_zmag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_pack	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline uint16_t mavlink_msg_scaled_imu_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu_pack_chan	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline uint16_t mavlink_msg_scaled_imu_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag,$/;"	f
mavlink_msg_scaled_imu_send	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline void mavlink_msg_scaled_imu_send(mavlink_channel_t chan, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu_send_buf	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^static inline void mavlink_msg_scaled_imu_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_pressure_decode	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline void mavlink_msg_scaled_pressure_decode(const mavlink_message_t* msg, mavlink_scaled_pressure_t* scaled_pressure)$/;"	f
mavlink_msg_scaled_pressure_encode	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline uint16_t mavlink_msg_scaled_pressure_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_scaled_pressure_t* scaled_pressure)$/;"	f
mavlink_msg_scaled_pressure_encode_chan	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline uint16_t mavlink_msg_scaled_pressure_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_scaled_pressure_t* scaled_pressure)$/;"	f
mavlink_msg_scaled_pressure_get_press_abs	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline float mavlink_msg_scaled_pressure_get_press_abs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure_get_press_diff	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline float mavlink_msg_scaled_pressure_get_press_diff(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure_get_temperature	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline int16_t mavlink_msg_scaled_pressure_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline uint32_t mavlink_msg_scaled_pressure_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure_pack	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline uint16_t mavlink_msg_scaled_pressure_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_scaled_pressure_pack_chan	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline uint16_t mavlink_msg_scaled_pressure_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_scaled_pressure_send	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline void mavlink_msg_scaled_pressure_send(mavlink_channel_t chan, uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_scaled_pressure_send_buf	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^static inline void mavlink_msg_scaled_pressure_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_serial_control_decode	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline void mavlink_msg_serial_control_decode(const mavlink_message_t* msg, mavlink_serial_control_t* serial_control)$/;"	f
mavlink_msg_serial_control_encode	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_serial_control_t* serial_control)$/;"	f
mavlink_msg_serial_control_encode_chan	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_serial_control_t* serial_control)$/;"	f
mavlink_msg_serial_control_get_baudrate	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint32_t mavlink_msg_serial_control_get_baudrate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_get_count	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint8_t mavlink_msg_serial_control_get_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_get_data	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_get_data(const mavlink_message_t* msg, uint8_t *data)$/;"	f
mavlink_msg_serial_control_get_device	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint8_t mavlink_msg_serial_control_get_device(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_get_flags	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint8_t mavlink_msg_serial_control_get_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_get_timeout	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_get_timeout(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_pack	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t device, uint8_t flags, uint16_t timeout, uint32_t baudrate, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_serial_control_pack_chan	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t device, uint8_t flags, uint16_t timeout, uint32_t baudrate, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_serial_control_send	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline void mavlink_msg_serial_control_send(mavlink_channel_t chan, uint8_t device, uint8_t flags, uint16_t timeout, uint32_t baudrate, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_serial_control_send_buf	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^static inline void mavlink_msg_serial_control_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t device, uint8_t flags, uint16_t timeout, uint32_t baudrate, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_servo_output_raw_decode	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline void mavlink_msg_servo_output_raw_decode(const mavlink_message_t* msg, mavlink_servo_output_raw_t* servo_output_raw)$/;"	f
mavlink_msg_servo_output_raw_encode	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_servo_output_raw_t* servo_output_raw)$/;"	f
mavlink_msg_servo_output_raw_encode_chan	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_servo_output_raw_t* servo_output_raw)$/;"	f
mavlink_msg_servo_output_raw_get_port	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint8_t mavlink_msg_servo_output_raw_get_port(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo1_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo2_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo3_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo4_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo5_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo6_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo7_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo8_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_time_usec	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint32_t mavlink_msg_servo_output_raw_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_pack	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t time_usec, uint8_t port, uint16_t servo1_raw, uint16_t servo2_raw, uint16_t servo3_raw, uint16_t servo4_raw, uint16_t servo5_raw,$/;"	f
mavlink_msg_servo_output_raw_pack_chan	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t time_usec, uint8_t port, uint16_t servo1_raw, uint16_t servo2_raw, uint16_t servo3_raw, uint16_t servo4_raw, uint16_t servo5_raw,$/;"	f
mavlink_msg_servo_output_raw_send	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline void mavlink_msg_servo_output_raw_send(mavlink_channel_t chan, uint32_t time_usec, uint8_t port, uint16_t servo1_raw, uint16_t servo2_raw, uint16_t servo3_raw, uint16_t servo4_raw, uint16_t servo5_raw, uint16_t servo6_raw, uint16_t servo7_raw, uint16_t servo8_raw)$/;"	f
mavlink_msg_servo_output_raw_send_buf	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^static inline void mavlink_msg_servo_output_raw_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t time_usec, uint8_t port, uint16_t servo1_raw, uint16_t servo2_raw, uint16_t servo3_raw, uint16_t servo4_raw, uint16_t servo5_raw, uint16_t servo6_raw, uint16_t servo7_raw, uint16_t servo8_raw)$/;"	f
mavlink_msg_set_global_position_setpoint_int_decode	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline void mavlink_msg_set_global_position_setpoint_int_decode(const mavlink_message_t* msg, mavlink_set_global_position_setpoint_int_t* set_global_position_setpoint_int)$/;"	f
mavlink_msg_set_global_position_setpoint_int_encode	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline uint16_t mavlink_msg_set_global_position_setpoint_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_global_position_setpoint_int_t* set_global_position_setpoint_int)$/;"	f
mavlink_msg_set_global_position_setpoint_int_encode_chan	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline uint16_t mavlink_msg_set_global_position_setpoint_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_global_position_setpoint_int_t* set_global_position_setpoint_int)$/;"	f
mavlink_msg_set_global_position_setpoint_int_get_altitude	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline int32_t mavlink_msg_set_global_position_setpoint_int_get_altitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_global_position_setpoint_int_get_coordinate_frame	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline uint8_t mavlink_msg_set_global_position_setpoint_int_get_coordinate_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_global_position_setpoint_int_get_latitude	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline int32_t mavlink_msg_set_global_position_setpoint_int_get_latitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_global_position_setpoint_int_get_longitude	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline int32_t mavlink_msg_set_global_position_setpoint_int_get_longitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_global_position_setpoint_int_get_yaw	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline int16_t mavlink_msg_set_global_position_setpoint_int_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_global_position_setpoint_int_pack	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline uint16_t mavlink_msg_set_global_position_setpoint_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t coordinate_frame, int32_t latitude, int32_t longitude, int32_t altitude, int16_t yaw)$/;"	f
mavlink_msg_set_global_position_setpoint_int_pack_chan	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline uint16_t mavlink_msg_set_global_position_setpoint_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t coordinate_frame, int32_t latitude, int32_t longitude, int32_t altitude, int16_t yaw)$/;"	f
mavlink_msg_set_global_position_setpoint_int_send	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline void mavlink_msg_set_global_position_setpoint_int_send(mavlink_channel_t chan, uint8_t coordinate_frame, int32_t latitude, int32_t longitude, int32_t altitude, int16_t yaw)$/;"	f
mavlink_msg_set_global_position_setpoint_int_send_buf	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^static inline void mavlink_msg_set_global_position_setpoint_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t coordinate_frame, int32_t latitude, int32_t longitude, int32_t altitude, int16_t yaw)$/;"	f
mavlink_msg_set_gps_global_origin_decode	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline void mavlink_msg_set_gps_global_origin_decode(const mavlink_message_t* msg, mavlink_set_gps_global_origin_t* set_gps_global_origin)$/;"	f
mavlink_msg_set_gps_global_origin_encode	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline uint16_t mavlink_msg_set_gps_global_origin_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_gps_global_origin_t* set_gps_global_origin)$/;"	f
mavlink_msg_set_gps_global_origin_encode_chan	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline uint16_t mavlink_msg_set_gps_global_origin_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_gps_global_origin_t* set_gps_global_origin)$/;"	f
mavlink_msg_set_gps_global_origin_get_altitude	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline int32_t mavlink_msg_set_gps_global_origin_get_altitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_gps_global_origin_get_latitude	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline int32_t mavlink_msg_set_gps_global_origin_get_latitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_gps_global_origin_get_longitude	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline int32_t mavlink_msg_set_gps_global_origin_get_longitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_gps_global_origin_get_target_system	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline uint8_t mavlink_msg_set_gps_global_origin_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_gps_global_origin_pack	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline uint16_t mavlink_msg_set_gps_global_origin_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_set_gps_global_origin_pack_chan	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline uint16_t mavlink_msg_set_gps_global_origin_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_set_gps_global_origin_send	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline void mavlink_msg_set_gps_global_origin_send(mavlink_channel_t chan, uint8_t target_system, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_set_gps_global_origin_send_buf	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^static inline void mavlink_msg_set_gps_global_origin_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_set_local_position_setpoint_decode	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline void mavlink_msg_set_local_position_setpoint_decode(const mavlink_message_t* msg, mavlink_set_local_position_setpoint_t* set_local_position_setpoint)$/;"	f
mavlink_msg_set_local_position_setpoint_encode	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline uint16_t mavlink_msg_set_local_position_setpoint_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_local_position_setpoint_t* set_local_position_setpoint)$/;"	f
mavlink_msg_set_local_position_setpoint_encode_chan	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline uint16_t mavlink_msg_set_local_position_setpoint_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_local_position_setpoint_t* set_local_position_setpoint)$/;"	f
mavlink_msg_set_local_position_setpoint_get_coordinate_frame	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline uint8_t mavlink_msg_set_local_position_setpoint_get_coordinate_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_local_position_setpoint_get_target_component	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline uint8_t mavlink_msg_set_local_position_setpoint_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_local_position_setpoint_get_target_system	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline uint8_t mavlink_msg_set_local_position_setpoint_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_local_position_setpoint_get_x	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline float mavlink_msg_set_local_position_setpoint_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_local_position_setpoint_get_y	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline float mavlink_msg_set_local_position_setpoint_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_local_position_setpoint_get_yaw	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline float mavlink_msg_set_local_position_setpoint_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_local_position_setpoint_get_z	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline float mavlink_msg_set_local_position_setpoint_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_local_position_setpoint_pack	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline uint16_t mavlink_msg_set_local_position_setpoint_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t coordinate_frame, float x, float y, float z, float yaw)$/;"	f
mavlink_msg_set_local_position_setpoint_pack_chan	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline uint16_t mavlink_msg_set_local_position_setpoint_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, uint8_t coordinate_frame, float x, float y, float z, float yaw)$/;"	f
mavlink_msg_set_local_position_setpoint_send	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline void mavlink_msg_set_local_position_setpoint_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t coordinate_frame, float x, float y, float z, float yaw)$/;"	f
mavlink_msg_set_local_position_setpoint_send_buf	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^static inline void mavlink_msg_set_local_position_setpoint_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t coordinate_frame, float x, float y, float z, float yaw)$/;"	f
mavlink_msg_set_mode_decode	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline void mavlink_msg_set_mode_decode(const mavlink_message_t* msg, mavlink_set_mode_t* set_mode)$/;"	f
mavlink_msg_set_mode_encode	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline uint16_t mavlink_msg_set_mode_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_mode_t* set_mode)$/;"	f
mavlink_msg_set_mode_encode_chan	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline uint16_t mavlink_msg_set_mode_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_mode_t* set_mode)$/;"	f
mavlink_msg_set_mode_get_base_mode	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline uint8_t mavlink_msg_set_mode_get_base_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_mode_get_custom_mode	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline uint32_t mavlink_msg_set_mode_get_custom_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_mode_get_target_system	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline uint8_t mavlink_msg_set_mode_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_mode_pack	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline uint16_t mavlink_msg_set_mode_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t base_mode, uint32_t custom_mode)$/;"	f
mavlink_msg_set_mode_pack_chan	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline uint16_t mavlink_msg_set_mode_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t base_mode, uint32_t custom_mode)$/;"	f
mavlink_msg_set_mode_send	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline void mavlink_msg_set_mode_send(mavlink_channel_t chan, uint8_t target_system, uint8_t base_mode, uint32_t custom_mode)$/;"	f
mavlink_msg_set_mode_send_buf	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^static inline void mavlink_msg_set_mode_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t base_mode, uint32_t custom_mode)$/;"	f
mavlink_msg_set_quad_motors_setpoint_decode	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline void mavlink_msg_set_quad_motors_setpoint_decode(const mavlink_message_t* msg, mavlink_set_quad_motors_setpoint_t* set_quad_motors_setpoint)$/;"	f
mavlink_msg_set_quad_motors_setpoint_encode	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline uint16_t mavlink_msg_set_quad_motors_setpoint_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_quad_motors_setpoint_t* set_quad_motors_setpoint)$/;"	f
mavlink_msg_set_quad_motors_setpoint_encode_chan	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline uint16_t mavlink_msg_set_quad_motors_setpoint_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_quad_motors_setpoint_t* set_quad_motors_setpoint)$/;"	f
mavlink_msg_set_quad_motors_setpoint_get_motor_back_se	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline uint16_t mavlink_msg_set_quad_motors_setpoint_get_motor_back_se(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_quad_motors_setpoint_get_motor_front_nw	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline uint16_t mavlink_msg_set_quad_motors_setpoint_get_motor_front_nw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_quad_motors_setpoint_get_motor_left_sw	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline uint16_t mavlink_msg_set_quad_motors_setpoint_get_motor_left_sw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_quad_motors_setpoint_get_motor_right_ne	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline uint16_t mavlink_msg_set_quad_motors_setpoint_get_motor_right_ne(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_quad_motors_setpoint_get_target_system	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline uint8_t mavlink_msg_set_quad_motors_setpoint_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_quad_motors_setpoint_pack	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline uint16_t mavlink_msg_set_quad_motors_setpoint_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint16_t motor_front_nw, uint16_t motor_right_ne, uint16_t motor_back_se, uint16_t motor_left_sw)$/;"	f
mavlink_msg_set_quad_motors_setpoint_pack_chan	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline uint16_t mavlink_msg_set_quad_motors_setpoint_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint16_t motor_front_nw, uint16_t motor_right_ne, uint16_t motor_back_se, uint16_t motor_left_sw)$/;"	f
mavlink_msg_set_quad_motors_setpoint_send	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline void mavlink_msg_set_quad_motors_setpoint_send(mavlink_channel_t chan, uint8_t target_system, uint16_t motor_front_nw, uint16_t motor_right_ne, uint16_t motor_back_se, uint16_t motor_left_sw)$/;"	f
mavlink_msg_set_quad_motors_setpoint_send_buf	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^static inline void mavlink_msg_set_quad_motors_setpoint_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint16_t motor_front_nw, uint16_t motor_right_ne, uint16_t motor_back_se, uint16_t motor_left_sw)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_decode	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline void mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_decode(const mavlink_message_t* msg, mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t* set_quad_swarm_led_roll_pitch_yaw_thrust)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_encode	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t* set_quad_swarm_led_roll_pitch_yaw_thrust)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_encode_chan	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t* set_quad_swarm_led_roll_pitch_yaw_thrust)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_group	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint8_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_group(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_led_blue	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_led_blue(const mavlink_message_t* msg, uint8_t *led_blue)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_led_green	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_led_green(const mavlink_message_t* msg, uint8_t *led_green)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_led_red	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_led_red(const mavlink_message_t* msg, uint8_t *led_red)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_mode	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint8_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_pitch	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_pitch(const mavlink_message_t* msg, int16_t *pitch)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_roll	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_roll(const mavlink_message_t* msg, int16_t *roll)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_thrust	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_thrust(const mavlink_message_t* msg, uint16_t *thrust)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_yaw	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_get_yaw(const mavlink_message_t* msg, int16_t *yaw)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_pack	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t group, uint8_t mode, const uint8_t *led_red, const uint8_t *led_blue, const uint8_t *led_green, const int16_t *roll,$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_pack_chan	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t group, uint8_t mode, const uint8_t *led_red, const uint8_t *led_blue, const uint8_t *led_green,$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_send	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline void mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_send(mavlink_channel_t chan, uint8_t group, uint8_t mode, const uint8_t *led_red, const uint8_t *led_blue, const uint8_t *led_green, const int16_t *roll, const int16_t *pitch, const int16_t *yaw, const uint16_t *thrust)$/;"	f
mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_send_buf	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^static inline void mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t group, uint8_t mode, const uint8_t *led_red, const uint8_t *led_blue, const uint8_t *led_green, const int16_t *roll, const int16_t *pitch, const int16_t *yaw, const uint16_t *thrust)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_decode	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline void mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_decode(const mavlink_message_t* msg, mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t* set_quad_swarm_roll_pitch_yaw_thrust)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_encode	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t* set_quad_swarm_roll_pitch_yaw_thrust)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_encode_chan	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t* set_quad_swarm_roll_pitch_yaw_thrust)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_group	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint8_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_group(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_mode	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint8_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_pitch	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_pitch(const mavlink_message_t* msg, int16_t *pitch)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_roll	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_roll(const mavlink_message_t* msg, int16_t *roll)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_thrust	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_thrust(const mavlink_message_t* msg, uint16_t *thrust)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_yaw	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_get_yaw(const mavlink_message_t* msg, int16_t *yaw)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_pack	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t group, uint8_t mode, const int16_t *roll, const int16_t *pitch, const int16_t *yaw, const uint16_t *thrust)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_pack_chan	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t group, uint8_t mode, const int16_t *roll, const int16_t *pitch, const int16_t *yaw, const uint16_t *thrust)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_send	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline void mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_send(mavlink_channel_t chan, uint8_t group, uint8_t mode, const int16_t *roll, const int16_t *pitch, const int16_t *yaw, const uint16_t *thrust)$/;"	f
mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_send_buf	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^static inline void mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t group, uint8_t mode, const int16_t *roll, const int16_t *pitch, const int16_t *yaw, const uint16_t *thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_decode	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline void mavlink_msg_set_roll_pitch_yaw_speed_thrust_decode(const mavlink_message_t* msg, mavlink_set_roll_pitch_yaw_speed_thrust_t* set_roll_pitch_yaw_speed_thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_encode	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline uint16_t mavlink_msg_set_roll_pitch_yaw_speed_thrust_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_roll_pitch_yaw_speed_thrust_t* set_roll_pitch_yaw_speed_thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_encode_chan	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline uint16_t mavlink_msg_set_roll_pitch_yaw_speed_thrust_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_roll_pitch_yaw_speed_thrust_t* set_roll_pitch_yaw_speed_thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_pitch_speed	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline float mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_pitch_speed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_roll_speed	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline float mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_roll_speed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_target_component	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline uint8_t mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_target_system	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline uint8_t mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_thrust	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline float mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_thrust(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_yaw_speed	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline float mavlink_msg_set_roll_pitch_yaw_speed_thrust_get_yaw_speed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_pack	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline uint16_t mavlink_msg_set_roll_pitch_yaw_speed_thrust_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, float roll_speed, float pitch_speed, float yaw_speed, float thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_pack_chan	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline uint16_t mavlink_msg_set_roll_pitch_yaw_speed_thrust_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, float roll_speed, float pitch_speed, float yaw_speed, float thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_send	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline void mavlink_msg_set_roll_pitch_yaw_speed_thrust_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, float roll_speed, float pitch_speed, float yaw_speed, float thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_speed_thrust_send_buf	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^static inline void mavlink_msg_set_roll_pitch_yaw_speed_thrust_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, float roll_speed, float pitch_speed, float yaw_speed, float thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_decode	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline void mavlink_msg_set_roll_pitch_yaw_thrust_decode(const mavlink_message_t* msg, mavlink_set_roll_pitch_yaw_thrust_t* set_roll_pitch_yaw_thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_encode	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_roll_pitch_yaw_thrust_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_roll_pitch_yaw_thrust_t* set_roll_pitch_yaw_thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_encode_chan	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_roll_pitch_yaw_thrust_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_roll_pitch_yaw_thrust_t* set_roll_pitch_yaw_thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_get_pitch	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline float mavlink_msg_set_roll_pitch_yaw_thrust_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_get_roll	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline float mavlink_msg_set_roll_pitch_yaw_thrust_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_get_target_component	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline uint8_t mavlink_msg_set_roll_pitch_yaw_thrust_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_get_target_system	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline uint8_t mavlink_msg_set_roll_pitch_yaw_thrust_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_get_thrust	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline float mavlink_msg_set_roll_pitch_yaw_thrust_get_thrust(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_get_yaw	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline float mavlink_msg_set_roll_pitch_yaw_thrust_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_pack	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_roll_pitch_yaw_thrust_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, float roll, float pitch, float yaw, float thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_pack_chan	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline uint16_t mavlink_msg_set_roll_pitch_yaw_thrust_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, uint8_t target_component, float roll, float pitch, float yaw, float thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_send	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline void mavlink_msg_set_roll_pitch_yaw_thrust_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, float roll, float pitch, float yaw, float thrust)$/;"	f
mavlink_msg_set_roll_pitch_yaw_thrust_send_buf	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^static inline void mavlink_msg_set_roll_pitch_yaw_thrust_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, float roll, float pitch, float yaw, float thrust)$/;"	f
mavlink_msg_setpoint_6dof_decode	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline void mavlink_msg_setpoint_6dof_decode(const mavlink_message_t* msg, mavlink_setpoint_6dof_t* setpoint_6dof)$/;"	f
mavlink_msg_setpoint_6dof_encode	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline uint16_t mavlink_msg_setpoint_6dof_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_setpoint_6dof_t* setpoint_6dof)$/;"	f
mavlink_msg_setpoint_6dof_encode_chan	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline uint16_t mavlink_msg_setpoint_6dof_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_setpoint_6dof_t* setpoint_6dof)$/;"	f
mavlink_msg_setpoint_6dof_get_rot_x	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline float mavlink_msg_setpoint_6dof_get_rot_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_6dof_get_rot_y	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline float mavlink_msg_setpoint_6dof_get_rot_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_6dof_get_rot_z	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline float mavlink_msg_setpoint_6dof_get_rot_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_6dof_get_target_system	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline uint8_t mavlink_msg_setpoint_6dof_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_6dof_get_trans_x	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline float mavlink_msg_setpoint_6dof_get_trans_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_6dof_get_trans_y	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline float mavlink_msg_setpoint_6dof_get_trans_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_6dof_get_trans_z	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline float mavlink_msg_setpoint_6dof_get_trans_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_6dof_pack	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline uint16_t mavlink_msg_setpoint_6dof_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, float trans_x, float trans_y, float trans_z, float rot_x, float rot_y, float rot_z)$/;"	f
mavlink_msg_setpoint_6dof_pack_chan	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline uint16_t mavlink_msg_setpoint_6dof_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, float trans_x, float trans_y, float trans_z, float rot_x, float rot_y, float rot_z)$/;"	f
mavlink_msg_setpoint_6dof_send	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline void mavlink_msg_setpoint_6dof_send(mavlink_channel_t chan, uint8_t target_system, float trans_x, float trans_y, float trans_z, float rot_x, float rot_y, float rot_z)$/;"	f
mavlink_msg_setpoint_6dof_send_buf	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^static inline void mavlink_msg_setpoint_6dof_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, float trans_x, float trans_y, float trans_z, float rot_x, float rot_y, float rot_z)$/;"	f
mavlink_msg_setpoint_8dof_decode	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline void mavlink_msg_setpoint_8dof_decode(const mavlink_message_t* msg, mavlink_setpoint_8dof_t* setpoint_8dof)$/;"	f
mavlink_msg_setpoint_8dof_encode	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline uint16_t mavlink_msg_setpoint_8dof_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_setpoint_8dof_t* setpoint_8dof)$/;"	f
mavlink_msg_setpoint_8dof_encode_chan	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline uint16_t mavlink_msg_setpoint_8dof_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_setpoint_8dof_t* setpoint_8dof)$/;"	f
mavlink_msg_setpoint_8dof_get_target_system	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline uint8_t mavlink_msg_setpoint_8dof_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_8dof_get_val1	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline float mavlink_msg_setpoint_8dof_get_val1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_8dof_get_val2	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline float mavlink_msg_setpoint_8dof_get_val2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_8dof_get_val3	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline float mavlink_msg_setpoint_8dof_get_val3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_8dof_get_val4	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline float mavlink_msg_setpoint_8dof_get_val4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_8dof_get_val5	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline float mavlink_msg_setpoint_8dof_get_val5(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_8dof_get_val6	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline float mavlink_msg_setpoint_8dof_get_val6(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_8dof_get_val7	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline float mavlink_msg_setpoint_8dof_get_val7(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_8dof_get_val8	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline float mavlink_msg_setpoint_8dof_get_val8(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setpoint_8dof_pack	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline uint16_t mavlink_msg_setpoint_8dof_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t target_system, float val1, float val2, float val3, float val4, float val5, float val6, float val7, float val8)$/;"	f
mavlink_msg_setpoint_8dof_pack_chan	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline uint16_t mavlink_msg_setpoint_8dof_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t target_system, float val1, float val2, float val3, float val4, float val5, float val6, float val7, float val8)$/;"	f
mavlink_msg_setpoint_8dof_send	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline void mavlink_msg_setpoint_8dof_send(mavlink_channel_t chan, uint8_t target_system, float val1, float val2, float val3, float val4, float val5, float val6, float val7, float val8)$/;"	f
mavlink_msg_setpoint_8dof_send_buf	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^static inline void mavlink_msg_setpoint_8dof_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t target_system, float val1, float val2, float val3, float val4, float val5, float val6, float val7, float val8)$/;"	f
mavlink_msg_sim_state_decode	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline void mavlink_msg_sim_state_decode(const mavlink_message_t* msg, mavlink_sim_state_t* sim_state)$/;"	f
mavlink_msg_sim_state_encode	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline uint16_t mavlink_msg_sim_state_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_sim_state_t* sim_state)$/;"	f
mavlink_msg_sim_state_encode_chan	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline uint16_t mavlink_msg_sim_state_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_sim_state_t* sim_state)$/;"	f
mavlink_msg_sim_state_get_alt	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_lat	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_lon	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_pitch	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_q1	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_q1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_q2	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_q2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_q3	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_q3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_q4	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_q4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_roll	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_std_dev_horz	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_std_dev_horz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_std_dev_vert	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_std_dev_vert(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_vd	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_vd(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_ve	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_ve(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_vn	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_vn(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_xacc	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_xgyro	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_yacc	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_yaw	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_ygyro	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_zacc	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_zgyro	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_pack	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline uint16_t mavlink_msg_sim_state_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, float q1, float q2, float q3, float q4, float roll, float pitch, float yaw, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float lat,$/;"	f
mavlink_msg_sim_state_pack_chan	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline uint16_t mavlink_msg_sim_state_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, float q1, float q2, float q3, float q4, float roll, float pitch, float yaw, float xacc, float yacc, float zacc, float xgyro, float ygyro,$/;"	f
mavlink_msg_sim_state_send	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline void mavlink_msg_sim_state_send(mavlink_channel_t chan, float q1, float q2, float q3, float q4, float roll, float pitch, float yaw, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float lat, float lon, float alt, float std_dev_horz, float std_dev_vert, float vn, float ve, float vd)$/;"	f
mavlink_msg_sim_state_send_buf	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^static inline void mavlink_msg_sim_state_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, float q1, float q2, float q3, float q4, float roll, float pitch, float yaw, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float lat, float lon, float alt, float std_dev_horz, float std_dev_vert, float vn, float ve, float vd)$/;"	f
mavlink_msg_state_correction_decode	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline void mavlink_msg_state_correction_decode(const mavlink_message_t* msg, mavlink_state_correction_t* state_correction)$/;"	f
mavlink_msg_state_correction_encode	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline uint16_t mavlink_msg_state_correction_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_state_correction_t* state_correction)$/;"	f
mavlink_msg_state_correction_encode_chan	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline uint16_t mavlink_msg_state_correction_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_state_correction_t* state_correction)$/;"	f
mavlink_msg_state_correction_get_pitchErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline float mavlink_msg_state_correction_get_pitchErr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_state_correction_get_rollErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline float mavlink_msg_state_correction_get_rollErr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_state_correction_get_vxErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline float mavlink_msg_state_correction_get_vxErr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_state_correction_get_vyErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline float mavlink_msg_state_correction_get_vyErr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_state_correction_get_vzErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline float mavlink_msg_state_correction_get_vzErr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_state_correction_get_xErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline float mavlink_msg_state_correction_get_xErr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_state_correction_get_yErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline float mavlink_msg_state_correction_get_yErr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_state_correction_get_yawErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline float mavlink_msg_state_correction_get_yawErr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_state_correction_get_zErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline float mavlink_msg_state_correction_get_zErr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_state_correction_pack	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline uint16_t mavlink_msg_state_correction_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, float xErr, float yErr, float zErr, float rollErr, float pitchErr, float yawErr, float vxErr, float vyErr, float vzErr)$/;"	f
mavlink_msg_state_correction_pack_chan	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline uint16_t mavlink_msg_state_correction_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, float xErr, float yErr, float zErr, float rollErr, float pitchErr, float yawErr, float vxErr, float vyErr, float vzErr)$/;"	f
mavlink_msg_state_correction_send	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline void mavlink_msg_state_correction_send(mavlink_channel_t chan, float xErr, float yErr, float zErr, float rollErr, float pitchErr, float yawErr, float vxErr, float vyErr, float vzErr)$/;"	f
mavlink_msg_state_correction_send_buf	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^static inline void mavlink_msg_state_correction_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, float xErr, float yErr, float zErr, float rollErr, float pitchErr, float yawErr, float vxErr, float vyErr, float vzErr)$/;"	f
mavlink_msg_statustext_decode	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^static inline void mavlink_msg_statustext_decode(const mavlink_message_t* msg, mavlink_statustext_t* statustext)$/;"	f
mavlink_msg_statustext_encode	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_statustext_t* statustext)$/;"	f
mavlink_msg_statustext_encode_chan	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_statustext_t* statustext)$/;"	f
mavlink_msg_statustext_get_severity	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^static inline uint8_t mavlink_msg_statustext_get_severity(const mavlink_message_t* msg)$/;"	f
mavlink_msg_statustext_get_text	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_get_text(const mavlink_message_t* msg, char *text)$/;"	f
mavlink_msg_statustext_pack	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint8_t severity, const char *text)$/;"	f
mavlink_msg_statustext_pack_chan	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint8_t severity, const char *text)$/;"	f
mavlink_msg_statustext_send	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^static inline void mavlink_msg_statustext_send(mavlink_channel_t chan, uint8_t severity, const char *text)$/;"	f
mavlink_msg_statustext_send_buf	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^static inline void mavlink_msg_statustext_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint8_t severity, const char *text)$/;"	f
mavlink_msg_sys_status_decode	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline void mavlink_msg_sys_status_decode(const mavlink_message_t* msg, mavlink_sys_status_t* sys_status)$/;"	f
mavlink_msg_sys_status_encode	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_sys_status_t* sys_status)$/;"	f
mavlink_msg_sys_status_encode_chan	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_sys_status_t* sys_status)$/;"	f
mavlink_msg_sys_status_get_battery_remaining	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline int8_t mavlink_msg_sys_status_get_battery_remaining(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_current_battery	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline int16_t mavlink_msg_sys_status_get_current_battery(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_drop_rate_comm	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_drop_rate_comm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_comm	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_comm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_count1	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_count1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_count2	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_count2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_count3	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_count3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_count4	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_count4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_load	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_load(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_onboard_control_sensors_enabled	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint32_t mavlink_msg_sys_status_get_onboard_control_sensors_enabled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_onboard_control_sensors_health	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint32_t mavlink_msg_sys_status_get_onboard_control_sensors_health(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_onboard_control_sensors_present	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint32_t mavlink_msg_sys_status_get_onboard_control_sensors_present(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_voltage_battery	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_voltage_battery(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_pack	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint32_t onboard_control_sensors_present, uint32_t onboard_control_sensors_enabled, uint32_t onboard_control_sensors_health, uint16_t load,$/;"	f
mavlink_msg_sys_status_pack_chan	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint32_t onboard_control_sensors_present, uint32_t onboard_control_sensors_enabled, uint32_t onboard_control_sensors_health, uint16_t load,$/;"	f
mavlink_msg_sys_status_send	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline void mavlink_msg_sys_status_send(mavlink_channel_t chan, uint32_t onboard_control_sensors_present, uint32_t onboard_control_sensors_enabled, uint32_t onboard_control_sensors_health, uint16_t load, uint16_t voltage_battery, int16_t current_battery, int8_t battery_remaining, uint16_t drop_rate_comm, uint16_t errors_comm, uint16_t errors_count1, uint16_t errors_count2, uint16_t errors_count3, uint16_t errors_count4)$/;"	f
mavlink_msg_sys_status_send_buf	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^static inline void mavlink_msg_sys_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint32_t onboard_control_sensors_present, uint32_t onboard_control_sensors_enabled, uint32_t onboard_control_sensors_health, uint16_t load, uint16_t voltage_battery, int16_t current_battery, int8_t battery_remaining, uint16_t drop_rate_comm, uint16_t errors_comm, uint16_t errors_count1, uint16_t errors_count2, uint16_t errors_count3, uint16_t errors_count4)$/;"	f
mavlink_msg_system_time_decode	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^static inline void mavlink_msg_system_time_decode(const mavlink_message_t* msg, mavlink_system_time_t* system_time)$/;"	f
mavlink_msg_system_time_encode	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^static inline uint16_t mavlink_msg_system_time_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_system_time_t* system_time)$/;"	f
mavlink_msg_system_time_encode_chan	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^static inline uint16_t mavlink_msg_system_time_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_system_time_t* system_time)$/;"	f
mavlink_msg_system_time_get_time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^static inline uint32_t mavlink_msg_system_time_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_system_time_get_time_unix_usec	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^static inline uint64_t mavlink_msg_system_time_get_time_unix_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_system_time_pack	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^static inline uint16_t mavlink_msg_system_time_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t time_unix_usec, uint32_t time_boot_ms)$/;"	f
mavlink_msg_system_time_pack_chan	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^static inline uint16_t mavlink_msg_system_time_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t time_unix_usec, uint32_t time_boot_ms)$/;"	f
mavlink_msg_system_time_send	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^static inline void mavlink_msg_system_time_send(mavlink_channel_t chan, uint64_t time_unix_usec, uint32_t time_boot_ms)$/;"	f
mavlink_msg_system_time_send_buf	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^static inline void mavlink_msg_system_time_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t time_unix_usec, uint32_t time_boot_ms)$/;"	f
mavlink_msg_to_send_buffer	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER uint16_t mavlink_msg_to_send_buffer(uint8_t *buffer, const mavlink_message_t *msg)$/;"	f
mavlink_msg_vfr_hud_decode	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline void mavlink_msg_vfr_hud_decode(const mavlink_message_t* msg, mavlink_vfr_hud_t* vfr_hud)$/;"	f
mavlink_msg_vfr_hud_encode	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_vfr_hud_t* vfr_hud)$/;"	f
mavlink_msg_vfr_hud_encode_chan	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_vfr_hud_t* vfr_hud)$/;"	f
mavlink_msg_vfr_hud_get_airspeed	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline float mavlink_msg_vfr_hud_get_airspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_alt	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline float mavlink_msg_vfr_hud_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_climb	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline float mavlink_msg_vfr_hud_get_climb(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_groundspeed	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline float mavlink_msg_vfr_hud_get_groundspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_heading	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline int16_t mavlink_msg_vfr_hud_get_heading(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_throttle	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_get_throttle(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_pack	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, float airspeed, float groundspeed, int16_t heading, uint16_t throttle, float alt, float climb)$/;"	f
mavlink_msg_vfr_hud_pack_chan	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, float airspeed, float groundspeed, int16_t heading, uint16_t throttle, float alt, float climb)$/;"	f
mavlink_msg_vfr_hud_send	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline void mavlink_msg_vfr_hud_send(mavlink_channel_t chan, float airspeed, float groundspeed, int16_t heading, uint16_t throttle, float alt, float climb)$/;"	f
mavlink_msg_vfr_hud_send_buf	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^static inline void mavlink_msg_vfr_hud_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, float airspeed, float groundspeed, int16_t heading, uint16_t throttle, float alt, float climb)$/;"	f
mavlink_msg_vicon_position_estimate_decode	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline void mavlink_msg_vicon_position_estimate_decode(const mavlink_message_t* msg, mavlink_vicon_position_estimate_t* vicon_position_estimate)$/;"	f
mavlink_msg_vicon_position_estimate_encode	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline uint16_t mavlink_msg_vicon_position_estimate_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_vicon_position_estimate_t* vicon_position_estimate)$/;"	f
mavlink_msg_vicon_position_estimate_encode_chan	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline uint16_t mavlink_msg_vicon_position_estimate_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_vicon_position_estimate_t* vicon_position_estimate)$/;"	f
mavlink_msg_vicon_position_estimate_get_pitch	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_roll	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_usec	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline uint64_t mavlink_msg_vicon_position_estimate_get_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_x	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_y	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_yaw	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_z	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_pack	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline uint16_t mavlink_msg_vicon_position_estimate_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vicon_position_estimate_pack_chan	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline uint16_t mavlink_msg_vicon_position_estimate_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vicon_position_estimate_send	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline void mavlink_msg_vicon_position_estimate_send(mavlink_channel_t chan, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vicon_position_estimate_send_buf	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^static inline void mavlink_msg_vicon_position_estimate_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vision_position_estimate_decode	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline void mavlink_msg_vision_position_estimate_decode(const mavlink_message_t* msg, mavlink_vision_position_estimate_t* vision_position_estimate)$/;"	f
mavlink_msg_vision_position_estimate_encode	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_vision_position_estimate_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_vision_position_estimate_t* vision_position_estimate)$/;"	f
mavlink_msg_vision_position_estimate_encode_chan	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_vision_position_estimate_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_vision_position_estimate_t* vision_position_estimate)$/;"	f
mavlink_msg_vision_position_estimate_get_pitch	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_roll	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_usec	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline uint64_t mavlink_msg_vision_position_estimate_get_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_x	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_y	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_yaw	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_z	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_pack	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_vision_position_estimate_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vision_position_estimate_pack_chan	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_vision_position_estimate_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vision_position_estimate_send	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline void mavlink_msg_vision_position_estimate_send(mavlink_channel_t chan, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vision_position_estimate_send_buf	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^static inline void mavlink_msg_vision_position_estimate_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vision_speed_estimate_decode	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline void mavlink_msg_vision_speed_estimate_decode(const mavlink_message_t* msg, mavlink_vision_speed_estimate_t* vision_speed_estimate)$/;"	f
mavlink_msg_vision_speed_estimate_encode	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline uint16_t mavlink_msg_vision_speed_estimate_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_vision_speed_estimate_t* vision_speed_estimate)$/;"	f
mavlink_msg_vision_speed_estimate_encode_chan	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline uint16_t mavlink_msg_vision_speed_estimate_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_vision_speed_estimate_t* vision_speed_estimate)$/;"	f
mavlink_msg_vision_speed_estimate_get_usec	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline uint64_t mavlink_msg_vision_speed_estimate_get_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_speed_estimate_get_x	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline float mavlink_msg_vision_speed_estimate_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_speed_estimate_get_y	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline float mavlink_msg_vision_speed_estimate_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_speed_estimate_get_z	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline float mavlink_msg_vision_speed_estimate_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_speed_estimate_pack	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline uint16_t mavlink_msg_vision_speed_estimate_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, uint64_t usec, float x, float y, float z)$/;"	f
mavlink_msg_vision_speed_estimate_pack_chan	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline uint16_t mavlink_msg_vision_speed_estimate_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, uint64_t usec, float x, float y, float z)$/;"	f
mavlink_msg_vision_speed_estimate_send	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline void mavlink_msg_vision_speed_estimate_send(mavlink_channel_t chan, uint64_t usec, float x, float y, float z)$/;"	f
mavlink_msg_vision_speed_estimate_send_buf	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^static inline void mavlink_msg_vision_speed_estimate_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan, uint64_t usec, float x, float y, float z)$/;"	f
mavlink_named_value_float_t	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^} mavlink_named_value_float_t;$/;"	t	typeref:struct:__mavlink_named_value_float_t
mavlink_named_value_int_t	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^} mavlink_named_value_int_t;$/;"	t	typeref:struct:__mavlink_named_value_int_t
mavlink_nav_controller_output_t	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^} mavlink_nav_controller_output_t;$/;"	t	typeref:struct:__mavlink_nav_controller_output_t
mavlink_omnidirectional_flow_t	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^} mavlink_omnidirectional_flow_t;$/;"	t	typeref:struct:__mavlink_omnidirectional_flow_t
mavlink_optical_flow_t	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^} mavlink_optical_flow_t;$/;"	t	typeref:struct:__mavlink_optical_flow_t
mavlink_param_request_list_t	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^} mavlink_param_request_list_t;$/;"	t	typeref:struct:__mavlink_param_request_list_t
mavlink_param_request_read_t	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^} mavlink_param_request_read_t;$/;"	t	typeref:struct:__mavlink_param_request_read_t
mavlink_param_set_t	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^} mavlink_param_set_t;$/;"	t	typeref:struct:__mavlink_param_set_t
mavlink_param_union_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_param_union_t;$/;"	t	typeref:struct:param_union
mavlink_param_value_t	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^} mavlink_param_value_t;$/;"	t	typeref:struct:__mavlink_param_value_t
mavlink_parse_char	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER uint8_t mavlink_parse_char(uint8_t chan, uint8_t c, mavlink_message_t* r_message, mavlink_status_t* r_mavlink_status)$/;"	f
mavlink_parse_state_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_parse_state_t; \/\/\/< The state machine for the comm parser$/;"	t	typeref:enum:__anon4
mavlink_ping_t	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^} mavlink_ping_t;$/;"	t	typeref:struct:__mavlink_ping_t
mavlink_power_status_t	lib/mavlink/1.0/common/mavlink_msg_power_status.h	/^} mavlink_power_status_t;$/;"	t	typeref:struct:__mavlink_power_status_t
mavlink_quaternion_to_dcm	lib/mavlink/1.0/mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_quaternion_to_dcm(const float quaternion[4], float dcm[3][3])$/;"	f
mavlink_quaternion_to_euler	lib/mavlink/1.0/mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_quaternion_to_euler(const float quaternion[4], float* roll, float* pitch, float* yaw)$/;"	f
mavlink_radio_status_t	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^} mavlink_radio_status_t;$/;"	t	typeref:struct:__mavlink_radio_status_t
mavlink_raw_imu_t	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^} mavlink_raw_imu_t;$/;"	t	typeref:struct:__mavlink_raw_imu_t
mavlink_raw_pressure_t	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^} mavlink_raw_pressure_t;$/;"	t	typeref:struct:__mavlink_raw_pressure_t
mavlink_rc_channels_override_t	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^} mavlink_rc_channels_override_t;$/;"	t	typeref:struct:__mavlink_rc_channels_override_t
mavlink_rc_channels_raw_t	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^} mavlink_rc_channels_raw_t;$/;"	t	typeref:struct:__mavlink_rc_channels_raw_t
mavlink_rc_channels_scaled_t	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^} mavlink_rc_channels_scaled_t;$/;"	t	typeref:struct:__mavlink_rc_channels_scaled_t
mavlink_rc_channels_t	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^} mavlink_rc_channels_t;$/;"	t	typeref:struct:__mavlink_rc_channels_t
mavlink_request_data_stream_t	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^} mavlink_request_data_stream_t;$/;"	t	typeref:struct:__mavlink_request_data_stream_t
mavlink_reset_channel_status	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER void mavlink_reset_channel_status(uint8_t chan)$/;"	f
mavlink_roll_pitch_yaw_rates_thrust_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^} mavlink_roll_pitch_yaw_rates_thrust_setpoint_t;$/;"	t	typeref:struct:__mavlink_roll_pitch_yaw_rates_thrust_setpoint_t
mavlink_roll_pitch_yaw_speed_thrust_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^} mavlink_roll_pitch_yaw_speed_thrust_setpoint_t;$/;"	t	typeref:struct:__mavlink_roll_pitch_yaw_speed_thrust_setpoint_t
mavlink_roll_pitch_yaw_thrust_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^} mavlink_roll_pitch_yaw_thrust_setpoint_t;$/;"	t	typeref:struct:__mavlink_roll_pitch_yaw_thrust_setpoint_t
mavlink_safety_allowed_area_t	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^} mavlink_safety_allowed_area_t;$/;"	t	typeref:struct:__mavlink_safety_allowed_area_t
mavlink_safety_set_allowed_area_t	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^} mavlink_safety_set_allowed_area_t;$/;"	t	typeref:struct:__mavlink_safety_set_allowed_area_t
mavlink_scaled_imu2_t	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^} mavlink_scaled_imu2_t;$/;"	t	typeref:struct:__mavlink_scaled_imu2_t
mavlink_scaled_imu_t	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^} mavlink_scaled_imu_t;$/;"	t	typeref:struct:__mavlink_scaled_imu_t
mavlink_scaled_pressure_t	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^} mavlink_scaled_pressure_t;$/;"	t	typeref:struct:__mavlink_scaled_pressure_t
mavlink_serial_control_t	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^} mavlink_serial_control_t;$/;"	t	typeref:struct:__mavlink_serial_control_t
mavlink_servo_output_raw_t	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^} mavlink_servo_output_raw_t;$/;"	t	typeref:struct:__mavlink_servo_output_raw_t
mavlink_set_global_position_setpoint_int_t	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^} mavlink_set_global_position_setpoint_int_t;$/;"	t	typeref:struct:__mavlink_set_global_position_setpoint_int_t
mavlink_set_gps_global_origin_t	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^} mavlink_set_gps_global_origin_t;$/;"	t	typeref:struct:__mavlink_set_gps_global_origin_t
mavlink_set_local_position_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^} mavlink_set_local_position_setpoint_t;$/;"	t	typeref:struct:__mavlink_set_local_position_setpoint_t
mavlink_set_mode_t	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^} mavlink_set_mode_t;$/;"	t	typeref:struct:__mavlink_set_mode_t
mavlink_set_quad_motors_setpoint_t	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^} mavlink_set_quad_motors_setpoint_t;$/;"	t	typeref:struct:__mavlink_set_quad_motors_setpoint_t
mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^} mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t;$/;"	t	typeref:struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^} mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t;$/;"	t	typeref:struct:__mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t
mavlink_set_roll_pitch_yaw_speed_thrust_t	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^} mavlink_set_roll_pitch_yaw_speed_thrust_t;$/;"	t	typeref:struct:__mavlink_set_roll_pitch_yaw_speed_thrust_t
mavlink_set_roll_pitch_yaw_thrust_t	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^} mavlink_set_roll_pitch_yaw_thrust_t;$/;"	t	typeref:struct:__mavlink_set_roll_pitch_yaw_thrust_t
mavlink_setpoint_6dof_t	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^} mavlink_setpoint_6dof_t;$/;"	t	typeref:struct:__mavlink_setpoint_6dof_t
mavlink_setpoint_8dof_t	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^} mavlink_setpoint_8dof_t;$/;"	t	typeref:struct:__mavlink_setpoint_8dof_t
mavlink_sim_state_t	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^} mavlink_sim_state_t;$/;"	t	typeref:struct:__mavlink_sim_state_t
mavlink_start_checksum	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER void mavlink_start_checksum(mavlink_message_t* msg)$/;"	f
mavlink_state_correction_t	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^} mavlink_state_correction_t;$/;"	t	typeref:struct:__mavlink_state_correction_t
mavlink_status_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_status_t;$/;"	t	typeref:struct:__mavlink_status
mavlink_statustext_t	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^} mavlink_statustext_t;$/;"	t	typeref:struct:__mavlink_statustext_t
mavlink_sys_status_t	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^} mavlink_sys_status_t;$/;"	t	typeref:struct:__mavlink_sys_status_t
mavlink_system_t	lib/mavlink/1.0/mavlink_types.h	/^} mavlink_system_t;$/;"	t	typeref:struct:__mavlink_system
mavlink_system_time_t	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^} mavlink_system_time_t;$/;"	t	typeref:struct:__mavlink_system_time_t
mavlink_update_checksum	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER void mavlink_update_checksum(mavlink_message_t* msg, uint8_t c)$/;"	f
mavlink_version	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^    uint8_t mavlink_version; \/\/\/< MAVLink version, not writable by user, gets added by protocol because of magic data type: uint8_t_mavlink_version$/;"	m	struct:__mavlink_heartbeat_t
mavlink_vfr_hud_t	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^} mavlink_vfr_hud_t;$/;"	t	typeref:struct:__mavlink_vfr_hud_t
mavlink_vicon_position_estimate_t	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^} mavlink_vicon_position_estimate_t;$/;"	t	typeref:struct:__mavlink_vicon_position_estimate_t
mavlink_vision_position_estimate_t	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^} mavlink_vision_position_estimate_t;$/;"	t	typeref:struct:__mavlink_vision_position_estimate_t
mavlink_vision_speed_estimate_t	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^} mavlink_vision_speed_estimate_t;$/;"	t	typeref:struct:__mavlink_vision_speed_estimate_t
max_distance	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^    uint16_t max_distance; \/\/\/< Maximum distance the sensor can measure in centimeters$/;"	m	struct:__mavlink_distance_sensor_t
message_rate	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^    uint16_t message_rate; \/\/\/< The requested interval between two messages of this type$/;"	m	struct:__mavlink_data_stream_t
min_distance	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^    uint16_t min_distance; \/\/\/< Minimum distance the sensor can measure in centimeters$/;"	m	struct:__mavlink_distance_sensor_t
mode	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    uint8_t mode; \/\/\/< System mode (MAV_MODE)$/;"	m	struct:__mavlink_hil_controls_t
mode	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^    uint8_t mode; \/\/\/< ID of the flight mode (0 - 255, up to 256 modes supported)$/;"	m	struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
mode	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^    uint8_t mode; \/\/\/< ID of the flight mode (0 - 255, up to 256 modes supported)$/;"	m	struct:__mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t
mode	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t mode;    \/\/\/< Unused, can be used by user to store the system's mode$/;"	m	struct:__mavlink_system
mode_switch	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^    uint8_t mode_switch; \/\/\/< Flight mode switch position, 0.. 255$/;"	m	struct:__mavlink_manual_setpoint_t
motor_back_se	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^    uint16_t motor_back_se; \/\/\/< Back motor in + configuration, back right motor in x configuration$/;"	m	struct:__mavlink_set_quad_motors_setpoint_t
motor_front_nw	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^    uint16_t motor_front_nw; \/\/\/< Front motor in + configuration, front left motor in x configuration$/;"	m	struct:__mavlink_set_quad_motors_setpoint_t
motor_left_sw	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^    uint16_t motor_left_sw; \/\/\/< Left motor in + configuration, back left motor in x configuration$/;"	m	struct:__mavlink_set_quad_motors_setpoint_t
motor_right_ne	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^    uint16_t motor_right_ne; \/\/\/< Right motor in + configuration, front right motor in x configuration$/;"	m	struct:__mavlink_set_quad_motors_setpoint_t
msg_received	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t msg_received;               \/\/\/< Number of received messages$/;"	m	struct:__mavlink_status
msgid	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t msgid;   \/\/\/< ID of message in payload$/;"	m	struct:__mavlink_message
name	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^    char name[10]; \/\/\/< Name$/;"	m	struct:__mavlink_debug_vect_t
name	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^    char name[10]; \/\/\/< Name of the debug variable$/;"	m	struct:__mavlink_named_value_float_t
name	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^    char name[10]; \/\/\/< Name of the debug variable$/;"	m	struct:__mavlink_named_value_int_t
name	lib/mavlink/1.0/mavlink_types.h	/^    const char *name;                                      \/\/ name of the message$/;"	m	struct:__mavlink_message_info
name	lib/mavlink/1.0/mavlink_types.h	/^    const char *name;                 \/\/ name of this field$/;"	m	struct:__mavlink_field_info
nav_bearing	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^    int16_t nav_bearing; \/\/\/< Current desired heading in degrees$/;"	m	struct:__mavlink_nav_controller_output_t
nav_mode	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    uint8_t nav_mode; \/\/\/< Navigation mode (MAV_NAV_MODE)$/;"	m	struct:__mavlink_hil_controls_t
nav_mode	lib/mavlink/1.0/mavlink_types.h	/^    uint32_t nav_mode;    \/\/\/< Unused, can be used by user to store the system's navigation mode$/;"	m	struct:__mavlink_system
nav_pitch	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^    float nav_pitch; \/\/\/< Current desired pitch in degrees$/;"	m	struct:__mavlink_nav_controller_output_t
nav_roll	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^    float nav_roll; \/\/\/< Current desired roll in degrees$/;"	m	struct:__mavlink_nav_controller_output_t
noise	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^    uint8_t noise; \/\/\/< background noise level$/;"	m	struct:__mavlink_radio_status_t
num_fields	lib/mavlink/1.0/mavlink_types.h	/^    unsigned num_fields;                                   \/\/ how many fields in this message$/;"	m	struct:__mavlink_message_info
num_logs	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^    uint16_t num_logs; \/\/\/< Total number of logs$/;"	m	struct:__mavlink_log_entry_t
ofs	lib/mavlink/1.0/common/mavlink_msg_log_data.h	/^    uint32_t ofs; \/\/\/< Offset into the log$/;"	m	struct:__mavlink_log_data_t
ofs	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^    uint32_t ofs; \/\/\/< Offset into the log$/;"	m	struct:__mavlink_log_request_data_t
on_off	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^    uint8_t on_off; \/\/\/< 1 stream is enabled, 0 stream is stopped.$/;"	m	struct:__mavlink_data_stream_t
onboard_control_sensors_enabled	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint32_t onboard_control_sensors_enabled; \/\/\/< Bitmask showing which onboard controllers and sensors are enabled:  Value of 0: not enabled. Value of 1: enabled. Indices defined by ENUM MAV_SYS_STATUS_SENSOR$/;"	m	struct:__mavlink_sys_status_t
onboard_control_sensors_health	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint32_t onboard_control_sensors_health; \/\/\/< Bitmask showing which onboard controllers and sensors are operational or have an error:  Value of 0: not enabled. Value of 1: enabled. Indices defined by ENUM MAV_SYS_STATUS_SENSOR$/;"	m	struct:__mavlink_sys_status_t
onboard_control_sensors_present	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint32_t onboard_control_sensors_present; \/\/\/< Bitmask showing which onboard controllers and sensors are present. Value of 0: not present. Value of 1: present. Indices defined by ENUM MAV_SYS_STATUS_SENSOR$/;"	m	struct:__mavlink_sys_status_t
orientation	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^    uint8_t orientation; \/\/\/< Direction the sensor faces from FIXME enum.$/;"	m	struct:__mavlink_distance_sensor_t
p1x	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^    float p1x; \/\/\/< x position 1 \/ Latitude 1$/;"	m	struct:__mavlink_safety_allowed_area_t
p1x	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^    float p1x; \/\/\/< x position 1 \/ Latitude 1$/;"	m	struct:__mavlink_safety_set_allowed_area_t
p1y	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^    float p1y; \/\/\/< y position 1 \/ Longitude 1$/;"	m	struct:__mavlink_safety_allowed_area_t
p1y	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^    float p1y; \/\/\/< y position 1 \/ Longitude 1$/;"	m	struct:__mavlink_safety_set_allowed_area_t
p1z	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^    float p1z; \/\/\/< z position 1 \/ Altitude 1$/;"	m	struct:__mavlink_safety_allowed_area_t
p1z	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^    float p1z; \/\/\/< z position 1 \/ Altitude 1$/;"	m	struct:__mavlink_safety_set_allowed_area_t
p2x	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^    float p2x; \/\/\/< x position 2 \/ Latitude 2$/;"	m	struct:__mavlink_safety_allowed_area_t
p2x	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^    float p2x; \/\/\/< x position 2 \/ Latitude 2$/;"	m	struct:__mavlink_safety_set_allowed_area_t
p2y	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^    float p2y; \/\/\/< y position 2 \/ Longitude 2$/;"	m	struct:__mavlink_safety_allowed_area_t
p2y	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^    float p2y; \/\/\/< y position 2 \/ Longitude 2$/;"	m	struct:__mavlink_safety_set_allowed_area_t
p2z	lib/mavlink/1.0/common/mavlink_msg_safety_allowed_area.h	/^    float p2z; \/\/\/< z position 2 \/ Altitude 2$/;"	m	struct:__mavlink_safety_allowed_area_t
p2z	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^    float p2z; \/\/\/< z position 2 \/ Altitude 2$/;"	m	struct:__mavlink_safety_set_allowed_area_t
packet_idx	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t packet_idx;                 \/\/\/< Index in current packet$/;"	m	struct:__mavlink_status
packet_rx_drop_count	lib/mavlink/1.0/mavlink_types.h	/^    uint16_t packet_rx_drop_count;      \/\/\/< Number of packet drops$/;"	m	struct:__mavlink_status
packet_rx_success_count	lib/mavlink/1.0/mavlink_types.h	/^    uint16_t packet_rx_success_count;   \/\/\/< Received packets$/;"	m	struct:__mavlink_status
packets	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^    uint16_t packets; \/\/\/< number of packets beeing sent (set on ACK only)$/;"	m	struct:__mavlink_data_transmission_handshake_t
param1	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    float param1; \/\/\/< Parameter 1, as defined by MAV_CMD enum.$/;"	m	struct:__mavlink_command_long_t
param1	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    float param1; \/\/\/< PARAM1, see MAV_CMD enum$/;"	m	struct:__mavlink_mission_item_t
param2	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    float param2; \/\/\/< Parameter 2, as defined by MAV_CMD enum.$/;"	m	struct:__mavlink_command_long_t
param2	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    float param2; \/\/\/< PARAM2, see MAV_CMD enum$/;"	m	struct:__mavlink_mission_item_t
param3	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    float param3; \/\/\/< Parameter 3, as defined by MAV_CMD enum.$/;"	m	struct:__mavlink_command_long_t
param3	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    float param3; \/\/\/< PARAM3, see MAV_CMD enum$/;"	m	struct:__mavlink_mission_item_t
param4	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    float param4; \/\/\/< Parameter 4, as defined by MAV_CMD enum.$/;"	m	struct:__mavlink_command_long_t
param4	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    float param4; \/\/\/< PARAM4, see MAV_CMD enum$/;"	m	struct:__mavlink_mission_item_t
param5	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    float param5; \/\/\/< Parameter 5, as defined by MAV_CMD enum.$/;"	m	struct:__mavlink_command_long_t
param6	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    float param6; \/\/\/< Parameter 6, as defined by MAV_CMD enum.$/;"	m	struct:__mavlink_command_long_t
param7	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    float param7; \/\/\/< Parameter 7, as defined by MAV_CMD enum.$/;"	m	struct:__mavlink_command_long_t
param_count	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^    uint16_t param_count; \/\/\/< Total number of onboard parameters$/;"	m	struct:__mavlink_param_value_t
param_float	lib/mavlink/1.0/mavlink_types.h	/^        float param_float;$/;"	m	union:param_union::__anon1
param_id	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^    char param_id[16]; \/\/\/< Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string$/;"	m	struct:__mavlink_param_request_read_t
param_id	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^    char param_id[16]; \/\/\/< Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string$/;"	m	struct:__mavlink_param_set_t
param_id	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^    char param_id[16]; \/\/\/< Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string$/;"	m	struct:__mavlink_param_value_t
param_index	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^    int16_t param_index; \/\/\/< Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored)$/;"	m	struct:__mavlink_param_request_read_t
param_index	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^    uint16_t param_index; \/\/\/< Index of this onboard parameter$/;"	m	struct:__mavlink_param_value_t
param_int16	lib/mavlink/1.0/mavlink_types.h	/^        int16_t param_int16;$/;"	m	union:param_union::__anon1
param_int32	lib/mavlink/1.0/mavlink_types.h	/^        int32_t param_int32;$/;"	m	union:param_union::__anon1
param_int8	lib/mavlink/1.0/mavlink_types.h	/^        int8_t param_int8;$/;"	m	union:param_union::__anon1
param_type	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^    uint8_t param_type; \/\/\/< Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.$/;"	m	struct:__mavlink_param_set_t
param_type	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^    uint8_t param_type; \/\/\/< Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.$/;"	m	struct:__mavlink_param_value_t
param_uint16	lib/mavlink/1.0/mavlink_types.h	/^        uint16_t param_uint16;$/;"	m	union:param_union::__anon1
param_uint32	lib/mavlink/1.0/mavlink_types.h	/^        uint32_t param_uint32;$/;"	m	union:param_union::__anon1
param_uint8	lib/mavlink/1.0/mavlink_types.h	/^        uint8_t param_uint8;$/;"	m	union:param_union::__anon1
param_union	lib/mavlink/1.0/mavlink_types.h	/^typedef struct param_union {$/;"	s
param_value	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^    float param_value; \/\/\/< Onboard parameter value$/;"	m	struct:__mavlink_param_set_t
param_value	lib/mavlink/1.0/common/mavlink_msg_param_value.h	/^    float param_value; \/\/\/< Onboard parameter value$/;"	m	struct:__mavlink_param_value_t
parse_error	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t parse_error;                \/\/\/< Number of parse errors$/;"	m	struct:__mavlink_status
parse_state	lib/mavlink/1.0/mavlink_types.h	/^    mavlink_parse_state_t parse_state;  \/\/\/< Parsing state machine$/;"	m	struct:__mavlink_status
passkey	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^    char passkey[25]; \/\/\/< Password \/ Key, depending on version plaintext or encrypted. 25 or less characters, NULL terminated. The characters may involve A-Z, a-z, 0-9, and "!?,.-"$/;"	m	struct:__mavlink_change_operator_control_t
path	src/task3_mavpddl.h	/^ const char path[3][38]={$/;"	v
payload	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^    uint8_t payload; \/\/\/< payload size per packet (normally 253 byte, see DATA field size in message ENCAPSULATED_DATA) (set on ACK only)$/;"	m	struct:__mavlink_data_transmission_handshake_t
payload64	lib/mavlink/1.0/mavlink_types.h	/^    uint64_t payload64[(MAVLINK_MAX_PAYLOAD_LEN + MAVLINK_NUM_CHECKSUM_BYTES + 7) \/ 8];$/;"	m	struct:__mavlink_message
pitch	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^    float pitch; \/\/\/< Pitch angle (rad, -pi..+pi)$/;"	m	struct:__mavlink_attitude_t
pitch	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^    float pitch; \/\/\/< Pitch angle in rad$/;"	m	struct:__mavlink_global_vision_position_estimate_t
pitch	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    float pitch; \/\/\/< Pitch angle (rad)$/;"	m	struct:__mavlink_hil_state_t
pitch	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^    float pitch; \/\/\/< Pitch$/;"	m	struct:__mavlink_local_position_ned_system_global_offset_t
pitch	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^    float pitch; \/\/\/< Desired pitch rate in radians per second$/;"	m	struct:__mavlink_manual_setpoint_t
pitch	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^    float pitch; \/\/\/< Desired pitch angle in radians$/;"	m	struct:__mavlink_roll_pitch_yaw_thrust_setpoint_t
pitch	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^    int16_t pitch[4]; \/\/\/< Desired pitch angle in radians +-PI (+-INT16_MAX)$/;"	m	struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
pitch	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^    int16_t pitch[4]; \/\/\/< Desired pitch angle in radians +-PI (+-INT16_MAX)$/;"	m	struct:__mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t
pitch	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^    float pitch; \/\/\/< Desired pitch angle in radians$/;"	m	struct:__mavlink_set_roll_pitch_yaw_thrust_t
pitch	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float pitch; \/\/\/< Attitude pitch expressed as Euler angles, not recommended except for human-readable outputs$/;"	m	struct:__mavlink_sim_state_t
pitch	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^    float pitch; \/\/\/< Pitch angle in rad$/;"	m	struct:__mavlink_vicon_position_estimate_t
pitch	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^    float pitch; \/\/\/< Pitch angle in rad$/;"	m	struct:__mavlink_vision_position_estimate_t
pitchErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^    float pitchErr; \/\/\/< pitch error (radians)$/;"	m	struct:__mavlink_state_correction_t
pitch_elevator	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    float pitch_elevator; \/\/\/< Control output -1 .. 1$/;"	m	struct:__mavlink_hil_controls_t
pitch_rate	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^    float pitch_rate; \/\/\/< Desired pitch rate in radians per second$/;"	m	struct:__mavlink_roll_pitch_yaw_rates_thrust_setpoint_t
pitch_speed	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^    float pitch_speed; \/\/\/< Desired pitch angular speed in rad\/s$/;"	m	struct:__mavlink_roll_pitch_yaw_speed_thrust_setpoint_t
pitch_speed	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^    float pitch_speed; \/\/\/< Desired pitch angular speed in rad\/s$/;"	m	struct:__mavlink_set_roll_pitch_yaw_speed_thrust_t
pitchspeed	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^    float pitchspeed; \/\/\/< Pitch angular speed (rad\/s)$/;"	m	struct:__mavlink_attitude_t
pitchspeed	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^    float pitchspeed; \/\/\/< Pitch angular speed (rad\/s)$/;"	m	struct:__mavlink_attitude_quaternion_t
pitchspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    float pitchspeed; \/\/\/< Body frame pitch \/ theta angular speed (rad\/s)$/;"	m	struct:__mavlink_hil_state_t
pitchspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    float pitchspeed; \/\/\/< Body frame pitch \/ theta angular speed (rad\/s)$/;"	m	struct:__mavlink_hil_state_quaternion_t
port	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint8_t port; \/\/\/< Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.$/;"	m	struct:__mavlink_rc_channels_raw_t
port	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    uint8_t port; \/\/\/< Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.$/;"	m	struct:__mavlink_rc_channels_scaled_t
port	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint8_t port; \/\/\/< Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows to encode more than 8 servos.$/;"	m	struct:__mavlink_servo_output_raw_t
press_abs	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^    int16_t press_abs; \/\/\/< Absolute pressure (raw)$/;"	m	struct:__mavlink_raw_pressure_t
press_abs	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^    float press_abs; \/\/\/< Absolute pressure (hectopascal)$/;"	m	struct:__mavlink_scaled_pressure_t
press_diff	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^    float press_diff; \/\/\/< Differential pressure 1 (hectopascal)$/;"	m	struct:__mavlink_scaled_pressure_t
press_diff1	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^    int16_t press_diff1; \/\/\/< Differential pressure 1 (raw)$/;"	m	struct:__mavlink_raw_pressure_t
press_diff2	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^    int16_t press_diff2; \/\/\/< Differential pressure 2 (raw)$/;"	m	struct:__mavlink_raw_pressure_t
pressure_alt	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float pressure_alt; \/\/\/< Altitude calculated from pressure$/;"	m	struct:__mavlink_highres_imu_t
pressure_alt	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float pressure_alt; \/\/\/< Altitude calculated from pressure$/;"	m	struct:__mavlink_hil_sensor_t
print_format	lib/mavlink/1.0/mavlink_types.h	/^    const char *print_format;         \/\/ printing format hint, or NULL$/;"	m	struct:__mavlink_field_info
put_bitfield_n_by_index	lib/mavlink/1.0/mavlink_helpers.h	/^MAVLINK_HELPER uint8_t put_bitfield_n_by_index(int32_t b, uint8_t bits, uint8_t packet_index, uint8_t bit_index, uint8_t* r_bit_index, uint8_t* buffer)$/;"	f
q1	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^    float q1; \/\/\/< Quaternion component 1$/;"	m	struct:__mavlink_attitude_quaternion_t
q1	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float q1; \/\/\/< True attitude quaternion component 1$/;"	m	struct:__mavlink_sim_state_t
q2	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^    float q2; \/\/\/< Quaternion component 2$/;"	m	struct:__mavlink_attitude_quaternion_t
q2	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float q2; \/\/\/< True attitude quaternion component 2$/;"	m	struct:__mavlink_sim_state_t
q3	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^    float q3; \/\/\/< Quaternion component 3$/;"	m	struct:__mavlink_attitude_quaternion_t
q3	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float q3; \/\/\/< True attitude quaternion component 3$/;"	m	struct:__mavlink_sim_state_t
q4	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^    float q4; \/\/\/< Quaternion component 4$/;"	m	struct:__mavlink_attitude_quaternion_t
q4	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float q4; \/\/\/< True attitude quaternion component 4$/;"	m	struct:__mavlink_sim_state_t
quality	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^    uint8_t quality; \/\/\/< Optical flow quality \/ confidence. 0: bad, 255: maximum quality$/;"	m	struct:__mavlink_hil_optical_flow_t
quality	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^    uint8_t quality; \/\/\/< Optical flow quality \/ confidence. 0: bad, 255: maximum quality$/;"	m	struct:__mavlink_omnidirectional_flow_t
quality	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^    uint8_t quality; \/\/\/< Optical flow quality \/ confidence. 0: bad, 255: maximum quality$/;"	m	struct:__mavlink_optical_flow_t
r	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^    int16_t r; \/\/\/< R-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a twisting of the joystick, with counter-clockwise being 1000 and clockwise being -1000, and the yaw of a vehicle.$/;"	m	struct:__mavlink_manual_control_t
recbuf	src/task1_mavdata.h	/^   static uint8_t recbuf[BUFFER_LENGTH];$/;"	v
relative_alt	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^    int32_t relative_alt; \/\/\/< Altitude above ground in meters, expressed as * 1000 (millimeters)$/;"	m	struct:__mavlink_global_position_int_t
remnoise	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^    uint8_t remnoise; \/\/\/< remote background noise level$/;"	m	struct:__mavlink_radio_status_t
remrssi	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^    uint8_t remrssi; \/\/\/< remote signal strength$/;"	m	struct:__mavlink_radio_status_t
req_message_rate	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^    uint16_t req_message_rate; \/\/\/< The requested interval between two messages of this type$/;"	m	struct:__mavlink_request_data_stream_t
req_stream_id	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^    uint8_t req_stream_id; \/\/\/< The ID of the requested data stream$/;"	m	struct:__mavlink_request_data_stream_t
result	lib/mavlink/1.0/common/mavlink_msg_command_ack.h	/^    uint8_t result; \/\/\/< See MAV_RESULT enum$/;"	m	struct:__mavlink_command_ack_t
result	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^    uint8_t result; \/\/\/< 0: OK, 1: not permitted, 2: bad path \/ file name, 3: no space left on device$/;"	m	struct:__mavlink_file_transfer_res_t
right	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^    int16_t right[10]; \/\/\/< Flow in deci pixels (1 = 0.1 pixel) on right hemisphere$/;"	m	struct:__mavlink_omnidirectional_flow_t
roll	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^    float roll; \/\/\/< Roll angle (rad, -pi..+pi)$/;"	m	struct:__mavlink_attitude_t
roll	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^    float roll; \/\/\/< Roll angle in rad$/;"	m	struct:__mavlink_global_vision_position_estimate_t
roll	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    float roll; \/\/\/< Roll angle (rad)$/;"	m	struct:__mavlink_hil_state_t
roll	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^    float roll; \/\/\/< Roll$/;"	m	struct:__mavlink_local_position_ned_system_global_offset_t
roll	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^    float roll; \/\/\/< Desired roll rate in radians per second$/;"	m	struct:__mavlink_manual_setpoint_t
roll	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^    float roll; \/\/\/< Desired roll angle in radians$/;"	m	struct:__mavlink_roll_pitch_yaw_thrust_setpoint_t
roll	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^    int16_t roll[4]; \/\/\/< Desired roll angle in radians +-PI (+-INT16_MAX)$/;"	m	struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
roll	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^    int16_t roll[4]; \/\/\/< Desired roll angle in radians +-PI (+-INT16_MAX)$/;"	m	struct:__mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t
roll	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^    float roll; \/\/\/< Desired roll angle in radians$/;"	m	struct:__mavlink_set_roll_pitch_yaw_thrust_t
roll	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float roll; \/\/\/< Attitude roll expressed as Euler angles, not recommended except for human-readable outputs$/;"	m	struct:__mavlink_sim_state_t
roll	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^    float roll; \/\/\/< Roll angle in rad$/;"	m	struct:__mavlink_vicon_position_estimate_t
roll	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^    float roll; \/\/\/< Roll angle in rad$/;"	m	struct:__mavlink_vision_position_estimate_t
rollErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^    float rollErr; \/\/\/< roll error (radians)$/;"	m	struct:__mavlink_state_correction_t
roll_ailerons	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    float roll_ailerons; \/\/\/< Control output -1 .. 1$/;"	m	struct:__mavlink_hil_controls_t
roll_rate	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^    float roll_rate; \/\/\/< Desired roll rate in radians per second$/;"	m	struct:__mavlink_roll_pitch_yaw_rates_thrust_setpoint_t
roll_speed	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^    float roll_speed; \/\/\/< Desired roll angular speed in rad\/s$/;"	m	struct:__mavlink_roll_pitch_yaw_speed_thrust_setpoint_t
roll_speed	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^    float roll_speed; \/\/\/< Desired roll angular speed in rad\/s$/;"	m	struct:__mavlink_set_roll_pitch_yaw_speed_thrust_t
rollspeed	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^    float rollspeed; \/\/\/< Roll angular speed (rad\/s)$/;"	m	struct:__mavlink_attitude_t
rollspeed	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^    float rollspeed; \/\/\/< Roll angular speed (rad\/s)$/;"	m	struct:__mavlink_attitude_quaternion_t
rollspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    float rollspeed; \/\/\/< Body frame roll \/ phi angular speed (rad\/s)$/;"	m	struct:__mavlink_hil_state_t
rollspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    float rollspeed; \/\/\/< Body frame roll \/ phi angular speed (rad\/s)$/;"	m	struct:__mavlink_hil_state_quaternion_t
rot_x	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^    float rot_x; \/\/\/< Rotational Component in x$/;"	m	struct:__mavlink_setpoint_6dof_t
rot_y	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^    float rot_y; \/\/\/< Rotational Component in y$/;"	m	struct:__mavlink_setpoint_6dof_t
rot_z	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^    float rot_z; \/\/\/< Rotational Component in z$/;"	m	struct:__mavlink_setpoint_6dof_t
rssi	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint8_t rssi; \/\/\/< Receive signal strength indicator, 0: 0%, 255: 100%$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
rssi	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^    uint8_t rssi; \/\/\/< local signal strength$/;"	m	struct:__mavlink_radio_status_t
rssi	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint8_t rssi; \/\/\/< Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid\/unknown.$/;"	m	struct:__mavlink_rc_channels_t
rssi	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint8_t rssi; \/\/\/< Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid\/unknown.$/;"	m	struct:__mavlink_rc_channels_raw_t
rssi	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    uint8_t rssi; \/\/\/< Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid\/unknown.$/;"	m	struct:__mavlink_rc_channels_scaled_t
rxerrors	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^    uint16_t rxerrors; \/\/\/< receive errors$/;"	m	struct:__mavlink_radio_status_t
satellite_azimuth	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^    uint8_t satellite_azimuth[20]; \/\/\/< Direction of satellite, 0: 0 deg, 255: 360 deg.$/;"	m	struct:__mavlink_gps_status_t
satellite_elevation	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^    uint8_t satellite_elevation[20]; \/\/\/< Elevation (0: right on top of receiver, 90: on the horizon) of satellite$/;"	m	struct:__mavlink_gps_status_t
satellite_prn	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^    uint8_t satellite_prn[20]; \/\/\/< Global satellite ID$/;"	m	struct:__mavlink_gps_status_t
satellite_snr	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^    uint8_t satellite_snr[20]; \/\/\/< Signal to noise ratio of satellite$/;"	m	struct:__mavlink_gps_status_t
satellite_used	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^    uint8_t satellite_used[20]; \/\/\/< 0: Satellite not used, 1: used for localization$/;"	m	struct:__mavlink_gps_status_t
satellites_visible	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    uint8_t satellites_visible; \/\/\/< Number of satellites visible. If unknown, set to 255$/;"	m	struct:__mavlink_gps2_raw_t
satellites_visible	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    uint8_t satellites_visible; \/\/\/< Number of satellites visible. If unknown, set to 255$/;"	m	struct:__mavlink_gps_raw_int_t
satellites_visible	lib/mavlink/1.0/common/mavlink_msg_gps_status.h	/^    uint8_t satellites_visible; \/\/\/< Number of satellites visible$/;"	m	struct:__mavlink_gps_status_t
satellites_visible	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    uint8_t satellites_visible; \/\/\/< Number of satellites visible. If unknown, set to 255$/;"	m	struct:__mavlink_hil_gps_t
send_Task3_MavBuf	src/task3_mavpddl.h	/^ static uint8_t send_Task3_MavBuf[BUFFER_LENGTH_TASK3];$/;"	v
sendbuf	src/task1_mavdata.h	/^   static uint8_t sendbuf[BUFFER_LENGTH];$/;"	v
sendmsg1	src/main.c	/^mavlink_message_t sendmsg1;$/;"	v
sendmsg2	src/main.c	/^mavlink_message_t sendmsg2;$/;"	v
sendstatus1	src/main.c	/^mavlink_status_t sendstatus1;$/;"	v
sendstatus2	src/main.c	/^mavlink_status_t sendstatus2;$/;"	v
sensor_id	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^    uint8_t sensor_id; \/\/\/< Sensor ID$/;"	m	struct:__mavlink_hil_optical_flow_t
sensor_id	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^    uint8_t sensor_id; \/\/\/< Sensor ID$/;"	m	struct:__mavlink_omnidirectional_flow_t
sensor_id	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^    uint8_t sensor_id; \/\/\/< Sensor ID$/;"	m	struct:__mavlink_optical_flow_t
seq	lib/mavlink/1.0/common/mavlink_msg_mission_current.h	/^    uint16_t seq; \/\/\/< Sequence$/;"	m	struct:__mavlink_mission_current_t
seq	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    uint16_t seq; \/\/\/< Sequence$/;"	m	struct:__mavlink_mission_item_t
seq	lib/mavlink/1.0/common/mavlink_msg_mission_item_reached.h	/^    uint16_t seq; \/\/\/< Sequence$/;"	m	struct:__mavlink_mission_item_reached_t
seq	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^    uint16_t seq; \/\/\/< Sequence$/;"	m	struct:__mavlink_mission_request_t
seq	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^    uint16_t seq; \/\/\/< Sequence$/;"	m	struct:__mavlink_mission_set_current_t
seq	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^    uint32_t seq; \/\/\/< PING sequence$/;"	m	struct:__mavlink_ping_t
seq	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t seq;     \/\/\/< Sequence of packet$/;"	m	struct:__mavlink_message
seqnr	lib/mavlink/1.0/common/mavlink_msg_encapsulated_data.h	/^    uint16_t seqnr; \/\/\/< sequence number (starting with 0 on every transmission)$/;"	m	struct:__mavlink_encapsulated_data_t
serialClose	src/wiringSerial.c	/^void serialClose (const int fd)$/;"	f
serialDataAvail	src/wiringSerial.c	/^int serialDataAvail (const int fd)$/;"	f
serialFlush	src/wiringSerial.c	/^void serialFlush (const int fd)$/;"	f
serialGetchar	src/wiringSerial.c	/^int serialGetchar (const int fd)$/;"	f
serialOpen	src/wiringSerial.c	/^int serialOpen (const char *device, const int baud)$/;"	f
serialPrintf	src/wiringSerial.c	/^void serialPrintf (const int fd, const char *message, ...)$/;"	f
serialPutchar	src/wiringSerial.c	/^void serialPutchar (const int fd, const unsigned char c)$/;"	f
serialPuts	src/wiringSerial.c	/^void serialPuts (const int fd, const char *s)$/;"	f
servo1_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint16_t servo1_raw; \/\/\/< Servo output 1 value, in microseconds$/;"	m	struct:__mavlink_servo_output_raw_t
servo2_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint16_t servo2_raw; \/\/\/< Servo output 2 value, in microseconds$/;"	m	struct:__mavlink_servo_output_raw_t
servo3_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint16_t servo3_raw; \/\/\/< Servo output 3 value, in microseconds$/;"	m	struct:__mavlink_servo_output_raw_t
servo4_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint16_t servo4_raw; \/\/\/< Servo output 4 value, in microseconds$/;"	m	struct:__mavlink_servo_output_raw_t
servo5_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint16_t servo5_raw; \/\/\/< Servo output 5 value, in microseconds$/;"	m	struct:__mavlink_servo_output_raw_t
servo6_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint16_t servo6_raw; \/\/\/< Servo output 6 value, in microseconds$/;"	m	struct:__mavlink_servo_output_raw_t
servo7_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint16_t servo7_raw; \/\/\/< Servo output 7 value, in microseconds$/;"	m	struct:__mavlink_servo_output_raw_t
servo8_raw	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint16_t servo8_raw; \/\/\/< Servo output 8 value, in microseconds$/;"	m	struct:__mavlink_servo_output_raw_t
severity	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^    uint8_t severity; \/\/\/< Severity of status. Relies on the definitions within RFC-5424. See enum MAV_SEVERITY.$/;"	m	struct:__mavlink_statustext_t
size	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^    uint32_t size; \/\/\/< total data size in bytes (set on ACK only)$/;"	m	struct:__mavlink_data_transmission_handshake_t
size	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^    uint32_t size; \/\/\/< Size of the log (may be approximate) in bytes$/;"	m	struct:__mavlink_log_entry_t
start	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^    uint16_t start; \/\/\/< First log id (0 for first available)$/;"	m	struct:__mavlink_log_request_list_t
start_index	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^    int16_t start_index; \/\/\/< Start index, 0 by default$/;"	m	struct:__mavlink_mission_request_partial_list_t
start_index	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^    int16_t start_index; \/\/\/< Start index, 0 by default and smaller \/ equal to the largest index of the current onboard list.$/;"	m	struct:__mavlink_mission_write_partial_list_t
start_stop	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^    uint8_t start_stop; \/\/\/< 1 to start sending, 0 to stop sending.$/;"	m	struct:__mavlink_request_data_stream_t
state	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t state;   \/\/\/< Unused, can be used by user to store the system's state$/;"	m	struct:__mavlink_system
std_dev_horz	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float std_dev_horz; \/\/\/< Horizontal position standard deviation$/;"	m	struct:__mavlink_sim_state_t
std_dev_vert	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float std_dev_vert; \/\/\/< Vertical position standard deviation$/;"	m	struct:__mavlink_sim_state_t
stream_id	lib/mavlink/1.0/common/mavlink_msg_data_stream.h	/^    uint8_t stream_id; \/\/\/< The ID of the requested data stream$/;"	m	struct:__mavlink_data_stream_t
structure_offset	lib/mavlink/1.0/mavlink_types.h	/^    unsigned int structure_offset;    \/\/ offset in a C structure$/;"	m	struct:__mavlink_field_info
sysid	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t sysid;   \/\/\/< ID of message sender system\/aircraft$/;"	m	struct:__mavlink_message
sysid	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t sysid;   \/\/\/< Used by the MAVLink message_xx_send() convenience function$/;"	m	struct:__mavlink_system
system_status	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^    uint8_t system_status; \/\/\/< System status flag, see MAV_STATE ENUM$/;"	m	struct:__mavlink_heartbeat_t
target	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^    uint8_t target; \/\/\/< The system to be controlled.$/;"	m	struct:__mavlink_manual_control_t
target_bearing	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^    int16_t target_bearing; \/\/\/< Bearing to current MISSION\/target in degrees$/;"	m	struct:__mavlink_nav_controller_output_t
target_component	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    uint8_t target_component; \/\/\/< Component which should execute the command, 0 for all components$/;"	m	struct:__mavlink_command_long_t
target_component	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_gps_inject_data_t
target_component	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_log_erase_t
target_component	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_log_request_data_t
target_component	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_log_request_end_t
target_component	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_log_request_list_t
target_component	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_mission_ack_t
target_component	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_mission_clear_all_t
target_component	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_mission_count_t
target_component	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_mission_item_t
target_component	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_mission_request_t
target_component	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_mission_request_list_t
target_component	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_mission_request_partial_list_t
target_component	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_mission_set_current_t
target_component	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_mission_write_partial_list_t
target_component	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_param_request_list_t
target_component	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_param_request_read_t
target_component	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_param_set_t
target_component	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^    uint8_t target_component; \/\/\/< 0: request ping from all receiving components, if greater than 0: message is a ping response and number is the system id of the requesting system$/;"	m	struct:__mavlink_ping_t
target_component	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_rc_channels_override_t
target_component	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^    uint8_t target_component; \/\/\/< The target requested to send the message stream.$/;"	m	struct:__mavlink_request_data_stream_t
target_component	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_safety_set_allowed_area_t
target_component	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_set_local_position_setpoint_t
target_component	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_set_roll_pitch_yaw_speed_thrust_t
target_component	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^    uint8_t target_component; \/\/\/< Component ID$/;"	m	struct:__mavlink_set_roll_pitch_yaw_thrust_t
target_ip	src/main.c	/^char * target_ip="192.168.42.129";$/;"	v
target_system	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^    uint8_t target_system; \/\/\/< System the GCS requests control for$/;"	m	struct:__mavlink_change_operator_control_t
target_system	lib/mavlink/1.0/common/mavlink_msg_command_long.h	/^    uint8_t target_system; \/\/\/< System which should execute the command$/;"	m	struct:__mavlink_command_long_t
target_system	lib/mavlink/1.0/common/mavlink_msg_gps_inject_data.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_gps_inject_data_t
target_system	lib/mavlink/1.0/common/mavlink_msg_log_erase.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_log_erase_t
target_system	lib/mavlink/1.0/common/mavlink_msg_log_request_data.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_log_request_data_t
target_system	lib/mavlink/1.0/common/mavlink_msg_log_request_end.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_log_request_end_t
target_system	lib/mavlink/1.0/common/mavlink_msg_log_request_list.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_log_request_list_t
target_system	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_mission_ack_t
target_system	lib/mavlink/1.0/common/mavlink_msg_mission_clear_all.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_mission_clear_all_t
target_system	lib/mavlink/1.0/common/mavlink_msg_mission_count.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_mission_count_t
target_system	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_mission_item_t
target_system	lib/mavlink/1.0/common/mavlink_msg_mission_request.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_mission_request_t
target_system	lib/mavlink/1.0/common/mavlink_msg_mission_request_list.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_mission_request_list_t
target_system	lib/mavlink/1.0/common/mavlink_msg_mission_request_partial_list.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_mission_request_partial_list_t
target_system	lib/mavlink/1.0/common/mavlink_msg_mission_set_current.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_mission_set_current_t
target_system	lib/mavlink/1.0/common/mavlink_msg_mission_write_partial_list.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_mission_write_partial_list_t
target_system	lib/mavlink/1.0/common/mavlink_msg_param_request_list.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_param_request_list_t
target_system	lib/mavlink/1.0/common/mavlink_msg_param_request_read.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_param_request_read_t
target_system	lib/mavlink/1.0/common/mavlink_msg_param_set.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_param_set_t
target_system	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^    uint8_t target_system; \/\/\/< 0: request ping from all receiving systems, if greater than 0: message is a ping response and number is the system id of the requesting system$/;"	m	struct:__mavlink_ping_t
target_system	lib/mavlink/1.0/common/mavlink_msg_rc_channels_override.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_rc_channels_override_t
target_system	lib/mavlink/1.0/common/mavlink_msg_request_data_stream.h	/^    uint8_t target_system; \/\/\/< The target requested to send the message stream.$/;"	m	struct:__mavlink_request_data_stream_t
target_system	lib/mavlink/1.0/common/mavlink_msg_safety_set_allowed_area.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_safety_set_allowed_area_t
target_system	lib/mavlink/1.0/common/mavlink_msg_set_gps_global_origin.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_set_gps_global_origin_t
target_system	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_set_local_position_setpoint_t
target_system	lib/mavlink/1.0/common/mavlink_msg_set_mode.h	/^    uint8_t target_system; \/\/\/< The system setting the mode$/;"	m	struct:__mavlink_set_mode_t
target_system	lib/mavlink/1.0/common/mavlink_msg_set_quad_motors_setpoint.h	/^    uint8_t target_system; \/\/\/< System ID of the system that should set these motor commands$/;"	m	struct:__mavlink_set_quad_motors_setpoint_t
target_system	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_set_roll_pitch_yaw_speed_thrust_t
target_system	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_set_roll_pitch_yaw_thrust_t
target_system	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_setpoint_6dof_t
target_system	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^    uint8_t target_system; \/\/\/< System ID$/;"	m	struct:__mavlink_setpoint_8dof_t
task1_MavData	src/task1_mavdata.c	/^void task1_MavData(mavlink_message_t mav_smesg, mavlink_status_t mav_sstat)$/;"	f
task2_status_network	src/task2_videodata.c	/^void task2_status_network(char *hw_name,unsigned int *status)$/;"	f
task2_videdata	src/task2_videodata.c	/^void task2_videdata()    $/;"	f
task3_MavPack	src/task3_mavpddl.c	/^void task3_MavPack(mavlink_message_t* msg,uint8_t ind)$/;"	f
task3_MavPddl	src/task3_mavpddl.c	/^void task3_MavPddl(mavlink_message_t mav_smesg, mavlink_status_t mav_sstat)$/;"	f
task3_Ping	src/task3_mavpddl.c	/^unsigned int task3_Ping(const char *path)$/;"	f
task3_SendSerial	src/task3_mavpddl.c	/^void task3_SendSerial(const char *buf, uint16_t len)$/;"	f
temperature	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float temperature; \/\/\/< Temperature in degrees celsius$/;"	m	struct:__mavlink_highres_imu_t
temperature	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float temperature; \/\/\/< Temperature in degrees celsius$/;"	m	struct:__mavlink_hil_sensor_t
temperature	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^    int16_t temperature; \/\/\/< Raw Temperature measurement (raw)$/;"	m	struct:__mavlink_raw_pressure_t
temperature	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^    int16_t temperature; \/\/\/< Temperature measurement (0.01 degrees celsius)$/;"	m	struct:__mavlink_scaled_pressure_t
text	lib/mavlink/1.0/common/mavlink_msg_statustext.h	/^    char text[50]; \/\/\/< Status text message, without null termination character$/;"	m	struct:__mavlink_statustext_t
throttle	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    float throttle; \/\/\/< Throttle 0 .. 1$/;"	m	struct:__mavlink_hil_controls_t
throttle	lib/mavlink/1.0/common/mavlink_msg_vfr_hud.h	/^    uint16_t throttle; \/\/\/< Current throttle setting in integer percent, 0 to 100$/;"	m	struct:__mavlink_vfr_hud_t
thrust	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^    float thrust; \/\/\/< Collective thrust, normalized to 0 .. 1$/;"	m	struct:__mavlink_manual_setpoint_t
thrust	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^    float thrust; \/\/\/< Collective thrust, normalized to 0 .. 1$/;"	m	struct:__mavlink_roll_pitch_yaw_rates_thrust_setpoint_t
thrust	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^    float thrust; \/\/\/< Collective thrust, normalized to 0 .. 1$/;"	m	struct:__mavlink_roll_pitch_yaw_speed_thrust_setpoint_t
thrust	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^    float thrust; \/\/\/< Collective thrust, normalized to 0 .. 1$/;"	m	struct:__mavlink_roll_pitch_yaw_thrust_setpoint_t
thrust	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^    uint16_t thrust[4]; \/\/\/< Collective thrust, scaled to uint16 (0..UINT16_MAX)$/;"	m	struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
thrust	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^    uint16_t thrust[4]; \/\/\/< Collective thrust, scaled to uint16 (0..UINT16_MAX)$/;"	m	struct:__mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t
thrust	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^    float thrust; \/\/\/< Collective thrust, normalized to 0 .. 1$/;"	m	struct:__mavlink_set_roll_pitch_yaw_speed_thrust_t
thrust	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^    float thrust; \/\/\/< Collective thrust, normalized to 0 .. 1$/;"	m	struct:__mavlink_set_roll_pitch_yaw_thrust_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_attitude_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_attitude_quaternion_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_debug_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^    uint32_t time_boot_ms; \/\/\/< Time since system boot$/;"	m	struct:__mavlink_distance_sensor_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_global_position_int_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_local_position_ned_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_local_position_ned_system_global_offset_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp in milliseconds since system boot$/;"	m	struct:__mavlink_manual_setpoint_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_named_value_float_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_named_value_int_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_rc_channels.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_rc_channels_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_rc_channels_raw.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_rc_channels_raw_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_rc_channels_scaled.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_rc_channels_scaled_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp in milliseconds since system boot$/;"	m	struct:__mavlink_roll_pitch_yaw_rates_thrust_setpoint_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp in milliseconds since system boot$/;"	m	struct:__mavlink_roll_pitch_yaw_speed_thrust_setpoint_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp in milliseconds since system boot$/;"	m	struct:__mavlink_roll_pitch_yaw_thrust_setpoint_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_scaled_imu_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_scaled_imu2_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_scaled_pressure.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp (milliseconds since system boot)$/;"	m	struct:__mavlink_scaled_pressure_t
time_boot_ms	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^    uint32_t time_boot_ms; \/\/\/< Timestamp of the component clock since boot time in milliseconds.$/;"	m	struct:__mavlink_system_time_t
time_unix_usec	lib/mavlink/1.0/common/mavlink_msg_system_time.h	/^    uint64_t time_unix_usec; \/\/\/< Timestamp of the master clock in microseconds since UNIX epoch.$/;"	m	struct:__mavlink_system_time_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^    uint64_t time_usec; \/\/\/< Timestamp$/;"	m	struct:__mavlink_debug_vect_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds since UNIX epoch or microseconds since system boot)$/;"	m	struct:__mavlink_gps2_raw_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds since UNIX epoch or microseconds since system boot)$/;"	m	struct:__mavlink_gps_raw_int_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds, synced to UNIX time or since system boot)$/;"	m	struct:__mavlink_highres_imu_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds since UNIX epoch or microseconds since system boot)$/;"	m	struct:__mavlink_hil_controls_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds since UNIX epoch or microseconds since system boot)$/;"	m	struct:__mavlink_hil_gps_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_optical_flow.h	/^    uint64_t time_usec; \/\/\/< Timestamp (UNIX)$/;"	m	struct:__mavlink_hil_optical_flow_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_rc_inputs_raw.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds since UNIX epoch or microseconds since system boot)$/;"	m	struct:__mavlink_hil_rc_inputs_raw_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds, synced to UNIX time or since system boot)$/;"	m	struct:__mavlink_hil_sensor_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds since UNIX epoch or microseconds since system boot)$/;"	m	struct:__mavlink_hil_state_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds since UNIX epoch or microseconds since system boot)$/;"	m	struct:__mavlink_hil_state_quaternion_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_omnidirectional_flow.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds, synced to UNIX time or since system boot)$/;"	m	struct:__mavlink_omnidirectional_flow_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_optical_flow.h	/^    uint64_t time_usec; \/\/\/< Timestamp (UNIX)$/;"	m	struct:__mavlink_optical_flow_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_ping.h	/^    uint64_t time_usec; \/\/\/< Unix timestamp in microseconds$/;"	m	struct:__mavlink_ping_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds since UNIX epoch or microseconds since system boot)$/;"	m	struct:__mavlink_raw_imu_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_raw_pressure.h	/^    uint64_t time_usec; \/\/\/< Timestamp (microseconds since UNIX epoch or microseconds since system boot)$/;"	m	struct:__mavlink_raw_pressure_t
time_usec	lib/mavlink/1.0/common/mavlink_msg_servo_output_raw.h	/^    uint32_t time_usec; \/\/\/< Timestamp (microseconds since system boot)$/;"	m	struct:__mavlink_servo_output_raw_t
time_utc	lib/mavlink/1.0/common/mavlink_msg_log_entry.h	/^    uint32_t time_utc; \/\/\/< UTC timestamp of log in seconds since 1970, or 0 if not available$/;"	m	struct:__mavlink_log_entry_t
timeout	lib/mavlink/1.0/common/mavlink_msg_serial_control.h	/^    uint16_t timeout; \/\/\/< Timeout for reply data in milliseconds$/;"	m	struct:__mavlink_serial_control_t
trans_x	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^    float trans_x; \/\/\/< Translational Component in x$/;"	m	struct:__mavlink_setpoint_6dof_t
trans_y	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^    float trans_y; \/\/\/< Translational Component in y$/;"	m	struct:__mavlink_setpoint_6dof_t
trans_z	lib/mavlink/1.0/common/mavlink_msg_setpoint_6dof.h	/^    float trans_z; \/\/\/< Translational Component in z$/;"	m	struct:__mavlink_setpoint_6dof_t
transfer_uid	lib/mavlink/1.0/common/mavlink_msg_file_transfer_dir_list.h	/^    uint64_t transfer_uid; \/\/\/< Unique transfer ID$/;"	m	struct:__mavlink_file_transfer_dir_list_t
transfer_uid	lib/mavlink/1.0/common/mavlink_msg_file_transfer_res.h	/^    uint64_t transfer_uid; \/\/\/< Unique transfer ID$/;"	m	struct:__mavlink_file_transfer_res_t
transfer_uid	lib/mavlink/1.0/common/mavlink_msg_file_transfer_start.h	/^    uint64_t transfer_uid; \/\/\/< Unique transfer ID$/;"	m	struct:__mavlink_file_transfer_start_t
true_airspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    uint16_t true_airspeed; \/\/\/< True airspeed, expressed as m\/s * 100$/;"	m	struct:__mavlink_hil_state_quaternion_t
txbuf	lib/mavlink/1.0/common/mavlink_msg_radio_status.h	/^    uint8_t txbuf; \/\/\/< how full the tx buffer is as a percentage$/;"	m	struct:__mavlink_radio_status_t
type	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^    uint8_t type; \/\/\/< type of requested\/acknowledged data (as defined in ENUM DATA_TYPES in mavlink\/include\/mavlink_types.h)$/;"	m	struct:__mavlink_data_transmission_handshake_t
type	lib/mavlink/1.0/common/mavlink_msg_distance_sensor.h	/^    uint8_t type; \/\/\/< Type from MAV_DISTANCE_SENSOR enum.$/;"	m	struct:__mavlink_distance_sensor_t
type	lib/mavlink/1.0/common/mavlink_msg_heartbeat.h	/^    uint8_t type; \/\/\/< Type of the MAV (quadrotor, helicopter, etc., up to 15 types, defined in MAV_TYPE ENUM)$/;"	m	struct:__mavlink_heartbeat_t
type	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^    uint8_t type; \/\/\/< Type code of the memory variables. for ver = 1: 0=16 x int16_t, 1=16 x uint16_t, 2=16 x Q15, 3=16 x 1Q14$/;"	m	struct:__mavlink_memory_vect_t
type	lib/mavlink/1.0/common/mavlink_msg_mission_ack.h	/^    uint8_t type; \/\/\/< See MAV_MISSION_RESULT enum$/;"	m	struct:__mavlink_mission_ack_t
type	lib/mavlink/1.0/mavlink_types.h	/^    mavlink_message_type_t type;      \/\/ type of this field$/;"	m	struct:__mavlink_field_info
type	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t type;    \/\/\/< Unused, can be used by user to store the system's type$/;"	m	struct:__mavlink_system
type	lib/mavlink/1.0/mavlink_types.h	/^    uint8_t type;$/;"	m	struct:param_union
u32	src/task2_videodata.h	/^    typedef signed int u32;  $/;"	t
udpinit	src/task1_mavdata.c	/^int udpinit(char *target_addr,struct sockaddr_in *a, struct sockaddr_in *b)  \/\/a---gcAddr   b---locAddr$/;"	f
udpsock	src/init.h	/^ int udpsock;$/;"	v
uint16	lib/mavlink/1.0/mavlink_helpers.h	/^    uint16_t uint16;$/;"	m	union:__mavlink_bitfield
uint32	lib/mavlink/1.0/mavlink_helpers.h	/^    uint32_t uint32;$/;"	m	union:__mavlink_bitfield
uint8	lib/mavlink/1.0/mavlink_helpers.h	/^    uint8_t uint8;$/;"	m	union:__mavlink_bitfield
usec	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^    uint64_t usec; \/\/\/< Timestamp (microseconds, synced to UNIX time or since system boot)$/;"	m	struct:__mavlink_global_vision_position_estimate_t
usec	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^    uint64_t usec; \/\/\/< Timestamp (microseconds, synced to UNIX time or since system boot)$/;"	m	struct:__mavlink_vicon_position_estimate_t
usec	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^    uint64_t usec; \/\/\/< Timestamp (microseconds, synced to UNIX time or since system boot)$/;"	m	struct:__mavlink_vision_position_estimate_t
usec	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^    uint64_t usec; \/\/\/< Timestamp (microseconds, synced to UNIX time or since system boot)$/;"	m	struct:__mavlink_vision_speed_estimate_t
val1	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^    float val1; \/\/\/< Value 1$/;"	m	struct:__mavlink_setpoint_8dof_t
val2	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^    float val2; \/\/\/< Value 2$/;"	m	struct:__mavlink_setpoint_8dof_t
val3	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^    float val3; \/\/\/< Value 3$/;"	m	struct:__mavlink_setpoint_8dof_t
val4	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^    float val4; \/\/\/< Value 4$/;"	m	struct:__mavlink_setpoint_8dof_t
val5	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^    float val5; \/\/\/< Value 5$/;"	m	struct:__mavlink_setpoint_8dof_t
val6	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^    float val6; \/\/\/< Value 6$/;"	m	struct:__mavlink_setpoint_8dof_t
val7	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^    float val7; \/\/\/< Value 7$/;"	m	struct:__mavlink_setpoint_8dof_t
val8	lib/mavlink/1.0/common/mavlink_msg_setpoint_8dof.h	/^    float val8; \/\/\/< Value 8$/;"	m	struct:__mavlink_setpoint_8dof_t
value	lib/mavlink/1.0/common/mavlink_msg_debug.h	/^    float value; \/\/\/< DEBUG value$/;"	m	struct:__mavlink_debug_t
value	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^    int8_t value[32]; \/\/\/< Memory contents at specified address$/;"	m	struct:__mavlink_memory_vect_t
value	lib/mavlink/1.0/common/mavlink_msg_named_value_float.h	/^    float value; \/\/\/< Floating point value$/;"	m	struct:__mavlink_named_value_float_t
value	lib/mavlink/1.0/common/mavlink_msg_named_value_int.h	/^    int32_t value; \/\/\/< Signed integer value$/;"	m	struct:__mavlink_named_value_int_t
vd	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    int16_t vd; \/\/\/< GPS velocity in cm\/s in DOWN direction in earth-fixed NED frame$/;"	m	struct:__mavlink_hil_gps_t
vd	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float vd; \/\/\/< True velocity in m\/s in DOWN direction in earth-fixed NED frame$/;"	m	struct:__mavlink_sim_state_t
ve	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    int16_t ve; \/\/\/< GPS velocity in cm\/s in EAST direction in earth-fixed NED frame$/;"	m	struct:__mavlink_hil_gps_t
ve	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float ve; \/\/\/< True velocity in m\/s in EAST direction in earth-fixed NED frame$/;"	m	struct:__mavlink_sim_state_t
vel	lib/mavlink/1.0/common/mavlink_msg_gps2_raw.h	/^    uint16_t vel; \/\/\/< GPS ground speed (m\/s * 100). If unknown, set to: UINT16_MAX$/;"	m	struct:__mavlink_gps2_raw_t
vel	lib/mavlink/1.0/common/mavlink_msg_gps_raw_int.h	/^    uint16_t vel; \/\/\/< GPS ground speed (m\/s * 100). If unknown, set to: UINT16_MAX$/;"	m	struct:__mavlink_gps_raw_int_t
vel	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    uint16_t vel; \/\/\/< GPS ground speed (m\/s * 100). If unknown, set to: 65535$/;"	m	struct:__mavlink_hil_gps_t
ver	lib/mavlink/1.0/common/mavlink_msg_memory_vect.h	/^    uint8_t ver; \/\/\/< Version code of the type variable. 0=unknown, type ignored and assumed int16_t. 1=as below$/;"	m	struct:__mavlink_memory_vect_t
version	lib/mavlink/1.0/common/mavlink_msg_change_operator_control.h	/^    uint8_t version; \/\/\/< 0: key as plaintext, 1-255: future, different hashing\/encryption variants. The GCS should in general use the safest mode possible initially and then gradually move down the encryption level if it gets a NACK message indicating an encryption mismatch.$/;"	m	struct:__mavlink_change_operator_control_t
vn	lib/mavlink/1.0/common/mavlink_msg_hil_gps.h	/^    int16_t vn; \/\/\/< GPS velocity in cm\/s in NORTH direction in earth-fixed NED frame$/;"	m	struct:__mavlink_hil_gps_t
vn	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float vn; \/\/\/< True velocity in m\/s in NORTH direction in earth-fixed NED frame$/;"	m	struct:__mavlink_sim_state_t
voltage_battery	lib/mavlink/1.0/common/mavlink_msg_sys_status.h	/^    uint16_t voltage_battery; \/\/\/< Battery voltage, in millivolts (1 = 1 millivolt)$/;"	m	struct:__mavlink_sys_status_t
voltage_cell_1	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    uint16_t voltage_cell_1; \/\/\/< Battery voltage of cell 1, in millivolts (1 = 1 millivolt)$/;"	m	struct:__mavlink_battery_status_t
voltage_cell_2	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    uint16_t voltage_cell_2; \/\/\/< Battery voltage of cell 2, in millivolts (1 = 1 millivolt), -1: no cell$/;"	m	struct:__mavlink_battery_status_t
voltage_cell_3	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    uint16_t voltage_cell_3; \/\/\/< Battery voltage of cell 3, in millivolts (1 = 1 millivolt), -1: no cell$/;"	m	struct:__mavlink_battery_status_t
voltage_cell_4	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    uint16_t voltage_cell_4; \/\/\/< Battery voltage of cell 4, in millivolts (1 = 1 millivolt), -1: no cell$/;"	m	struct:__mavlink_battery_status_t
voltage_cell_5	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    uint16_t voltage_cell_5; \/\/\/< Battery voltage of cell 5, in millivolts (1 = 1 millivolt), -1: no cell$/;"	m	struct:__mavlink_battery_status_t
voltage_cell_6	lib/mavlink/1.0/common/mavlink_msg_battery_status.h	/^    uint16_t voltage_cell_6; \/\/\/< Battery voltage of cell 6, in millivolts (1 = 1 millivolt), -1: no cell$/;"	m	struct:__mavlink_battery_status_t
vx	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^    int16_t vx; \/\/\/< Ground X Speed (Latitude), expressed as m\/s * 100$/;"	m	struct:__mavlink_global_position_int_t
vx	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    int16_t vx; \/\/\/< Ground X Speed (Latitude), expressed as m\/s * 100$/;"	m	struct:__mavlink_hil_state_t
vx	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    int16_t vx; \/\/\/< Ground X Speed (Latitude), expressed as m\/s * 100$/;"	m	struct:__mavlink_hil_state_quaternion_t
vx	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^    float vx; \/\/\/< X Speed$/;"	m	struct:__mavlink_local_position_ned_t
vxErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^    float vxErr; \/\/\/< x velocity$/;"	m	struct:__mavlink_state_correction_t
vy	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^    int16_t vy; \/\/\/< Ground Y Speed (Longitude), expressed as m\/s * 100$/;"	m	struct:__mavlink_global_position_int_t
vy	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    int16_t vy; \/\/\/< Ground Y Speed (Longitude), expressed as m\/s * 100$/;"	m	struct:__mavlink_hil_state_t
vy	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    int16_t vy; \/\/\/< Ground Y Speed (Longitude), expressed as m\/s * 100$/;"	m	struct:__mavlink_hil_state_quaternion_t
vy	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^    float vy; \/\/\/< Y Speed$/;"	m	struct:__mavlink_local_position_ned_t
vyErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^    float vyErr; \/\/\/< y velocity$/;"	m	struct:__mavlink_state_correction_t
vz	lib/mavlink/1.0/common/mavlink_msg_global_position_int.h	/^    int16_t vz; \/\/\/< Ground Z Speed (Altitude), expressed as m\/s * 100$/;"	m	struct:__mavlink_global_position_int_t
vz	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    int16_t vz; \/\/\/< Ground Z Speed (Altitude), expressed as m\/s * 100$/;"	m	struct:__mavlink_hil_state_t
vz	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    int16_t vz; \/\/\/< Ground Z Speed (Altitude), expressed as m\/s * 100$/;"	m	struct:__mavlink_hil_state_quaternion_t
vz	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^    float vz; \/\/\/< Z Speed$/;"	m	struct:__mavlink_local_position_ned_t
vzErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^    float vzErr; \/\/\/< z velocity$/;"	m	struct:__mavlink_state_correction_t
width	lib/mavlink/1.0/common/mavlink_msg_data_transmission_handshake.h	/^    uint16_t width; \/\/\/< Width of a matrix or image$/;"	m	struct:__mavlink_data_transmission_handshake_t
wire_offset	lib/mavlink/1.0/mavlink_types.h	/^    unsigned int wire_offset;         \/\/ offset of each field in the payload$/;"	m	struct:__mavlink_field_info
wp_dist	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^    uint16_t wp_dist; \/\/\/< Distance to active MISSION in meters$/;"	m	struct:__mavlink_nav_controller_output_t
x	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^    float x; \/\/\/< x$/;"	m	struct:__mavlink_debug_vect_t
x	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^    float x; \/\/\/< Global X position$/;"	m	struct:__mavlink_global_vision_position_estimate_t
x	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^    float x; \/\/\/< X Position$/;"	m	struct:__mavlink_local_position_ned_t
x	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^    float x; \/\/\/< X Position$/;"	m	struct:__mavlink_local_position_ned_system_global_offset_t
x	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^    float x; \/\/\/< x position$/;"	m	struct:__mavlink_local_position_setpoint_t
x	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^    int16_t x; \/\/\/< X-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to forward(1000)-backward(-1000) movement on a joystick and the pitch of a vehicle.$/;"	m	struct:__mavlink_manual_control_t
x	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    float x; \/\/\/< PARAM5 \/ local: x position, global: latitude$/;"	m	struct:__mavlink_mission_item_t
x	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^    float x; \/\/\/< x position$/;"	m	struct:__mavlink_set_local_position_setpoint_t
x	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^    float x; \/\/\/< Global X position$/;"	m	struct:__mavlink_vicon_position_estimate_t
x	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^    float x; \/\/\/< Global X position$/;"	m	struct:__mavlink_vision_position_estimate_t
x	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^    float x; \/\/\/< Global X speed$/;"	m	struct:__mavlink_vision_speed_estimate_t
xErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^    float xErr; \/\/\/< x position error$/;"	m	struct:__mavlink_state_correction_t
xacc	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float xacc; \/\/\/< X acceleration (m\/s^2)$/;"	m	struct:__mavlink_highres_imu_t
xacc	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float xacc; \/\/\/< X acceleration (m\/s^2)$/;"	m	struct:__mavlink_hil_sensor_t
xacc	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    int16_t xacc; \/\/\/< X acceleration (mg)$/;"	m	struct:__mavlink_hil_state_t
xacc	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    int16_t xacc; \/\/\/< X acceleration (mg)$/;"	m	struct:__mavlink_hil_state_quaternion_t
xacc	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    int16_t xacc; \/\/\/< X acceleration (raw)$/;"	m	struct:__mavlink_raw_imu_t
xacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    int16_t xacc; \/\/\/< X acceleration (mg)$/;"	m	struct:__mavlink_scaled_imu_t
xacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    int16_t xacc; \/\/\/< X acceleration (mg)$/;"	m	struct:__mavlink_scaled_imu2_t
xacc	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float xacc; \/\/\/< X acceleration m\/s\/s$/;"	m	struct:__mavlink_sim_state_t
xgyro	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float xgyro; \/\/\/< Angular speed around X axis (rad \/ sec)$/;"	m	struct:__mavlink_highres_imu_t
xgyro	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float xgyro; \/\/\/< Angular speed around X axis in body frame (rad \/ sec)$/;"	m	struct:__mavlink_hil_sensor_t
xgyro	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    int16_t xgyro; \/\/\/< Angular speed around X axis (raw)$/;"	m	struct:__mavlink_raw_imu_t
xgyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    int16_t xgyro; \/\/\/< Angular speed around X axis (millirad \/sec)$/;"	m	struct:__mavlink_scaled_imu_t
xgyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    int16_t xgyro; \/\/\/< Angular speed around X axis (millirad \/sec)$/;"	m	struct:__mavlink_scaled_imu2_t
xgyro	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float xgyro; \/\/\/< Angular speed around X axis rad\/s$/;"	m	struct:__mavlink_sim_state_t
xmag	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float xmag; \/\/\/< X Magnetic field (Gauss)$/;"	m	struct:__mavlink_highres_imu_t
xmag	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float xmag; \/\/\/< X Magnetic field (Gauss)$/;"	m	struct:__mavlink_hil_sensor_t
xmag	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    int16_t xmag; \/\/\/< X Magnetic field (raw)$/;"	m	struct:__mavlink_raw_imu_t
xmag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    int16_t xmag; \/\/\/< X Magnetic field (milli tesla)$/;"	m	struct:__mavlink_scaled_imu_t
xmag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    int16_t xmag; \/\/\/< X Magnetic field (milli tesla)$/;"	m	struct:__mavlink_scaled_imu2_t
xtrack_error	lib/mavlink/1.0/common/mavlink_msg_nav_controller_output.h	/^    float xtrack_error; \/\/\/< Current crosstrack error on x-y plane in meters$/;"	m	struct:__mavlink_nav_controller_output_t
y	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^    float y; \/\/\/< y$/;"	m	struct:__mavlink_debug_vect_t
y	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^    float y; \/\/\/< Global Y position$/;"	m	struct:__mavlink_global_vision_position_estimate_t
y	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^    float y; \/\/\/< Y Position$/;"	m	struct:__mavlink_local_position_ned_t
y	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^    float y; \/\/\/< Y Position$/;"	m	struct:__mavlink_local_position_ned_system_global_offset_t
y	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^    float y; \/\/\/< y position$/;"	m	struct:__mavlink_local_position_setpoint_t
y	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^    int16_t y; \/\/\/< Y-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to left(-1000)-right(1000) movement on a joystick and the roll of a vehicle.$/;"	m	struct:__mavlink_manual_control_t
y	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    float y; \/\/\/< PARAM6 \/ y position: global: longitude$/;"	m	struct:__mavlink_mission_item_t
y	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^    float y; \/\/\/< y position$/;"	m	struct:__mavlink_set_local_position_setpoint_t
y	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^    float y; \/\/\/< Global Y position$/;"	m	struct:__mavlink_vicon_position_estimate_t
y	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^    float y; \/\/\/< Global Y position$/;"	m	struct:__mavlink_vision_position_estimate_t
y	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^    float y; \/\/\/< Global Y speed$/;"	m	struct:__mavlink_vision_speed_estimate_t
yErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^    float yErr; \/\/\/< y position error$/;"	m	struct:__mavlink_state_correction_t
yacc	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float yacc; \/\/\/< Y acceleration (m\/s^2)$/;"	m	struct:__mavlink_highres_imu_t
yacc	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float yacc; \/\/\/< Y acceleration (m\/s^2)$/;"	m	struct:__mavlink_hil_sensor_t
yacc	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    int16_t yacc; \/\/\/< Y acceleration (mg)$/;"	m	struct:__mavlink_hil_state_t
yacc	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    int16_t yacc; \/\/\/< Y acceleration (mg)$/;"	m	struct:__mavlink_hil_state_quaternion_t
yacc	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    int16_t yacc; \/\/\/< Y acceleration (raw)$/;"	m	struct:__mavlink_raw_imu_t
yacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    int16_t yacc; \/\/\/< Y acceleration (mg)$/;"	m	struct:__mavlink_scaled_imu_t
yacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    int16_t yacc; \/\/\/< Y acceleration (mg)$/;"	m	struct:__mavlink_scaled_imu2_t
yacc	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float yacc; \/\/\/< Y acceleration m\/s\/s$/;"	m	struct:__mavlink_sim_state_t
yaw	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^    float yaw; \/\/\/< Yaw angle (rad, -pi..+pi)$/;"	m	struct:__mavlink_attitude_t
yaw	lib/mavlink/1.0/common/mavlink_msg_global_position_setpoint_int.h	/^    int16_t yaw; \/\/\/< Desired yaw angle in degrees * 100$/;"	m	struct:__mavlink_global_position_setpoint_int_t
yaw	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^    float yaw; \/\/\/< Yaw angle in rad$/;"	m	struct:__mavlink_global_vision_position_estimate_t
yaw	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    float yaw; \/\/\/< Yaw angle (rad)$/;"	m	struct:__mavlink_hil_state_t
yaw	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^    float yaw; \/\/\/< Yaw$/;"	m	struct:__mavlink_local_position_ned_system_global_offset_t
yaw	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^    float yaw; \/\/\/< Desired yaw angle$/;"	m	struct:__mavlink_local_position_setpoint_t
yaw	lib/mavlink/1.0/common/mavlink_msg_manual_setpoint.h	/^    float yaw; \/\/\/< Desired yaw rate in radians per second$/;"	m	struct:__mavlink_manual_setpoint_t
yaw	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_thrust_setpoint.h	/^    float yaw; \/\/\/< Desired yaw angle in radians$/;"	m	struct:__mavlink_roll_pitch_yaw_thrust_setpoint_t
yaw	lib/mavlink/1.0/common/mavlink_msg_set_global_position_setpoint_int.h	/^    int16_t yaw; \/\/\/< Desired yaw angle in degrees * 100$/;"	m	struct:__mavlink_set_global_position_setpoint_int_t
yaw	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^    float yaw; \/\/\/< Desired yaw angle$/;"	m	struct:__mavlink_set_local_position_setpoint_t
yaw	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_led_roll_pitch_yaw_thrust.h	/^    int16_t yaw[4]; \/\/\/< Desired yaw angle in radians, scaled to int16 +-PI (+-INT16_MAX)$/;"	m	struct:__mavlink_set_quad_swarm_led_roll_pitch_yaw_thrust_t
yaw	lib/mavlink/1.0/common/mavlink_msg_set_quad_swarm_roll_pitch_yaw_thrust.h	/^    int16_t yaw[4]; \/\/\/< Desired yaw angle in radians, scaled to int16 +-PI (+-INT16_MAX)$/;"	m	struct:__mavlink_set_quad_swarm_roll_pitch_yaw_thrust_t
yaw	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_thrust.h	/^    float yaw; \/\/\/< Desired yaw angle in radians$/;"	m	struct:__mavlink_set_roll_pitch_yaw_thrust_t
yaw	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float yaw; \/\/\/< Attitude yaw expressed as Euler angles, not recommended except for human-readable outputs$/;"	m	struct:__mavlink_sim_state_t
yaw	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^    float yaw; \/\/\/< Yaw angle in rad$/;"	m	struct:__mavlink_vicon_position_estimate_t
yaw	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^    float yaw; \/\/\/< Yaw angle in rad$/;"	m	struct:__mavlink_vision_position_estimate_t
yawErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^    float yawErr; \/\/\/< yaw error (radians)$/;"	m	struct:__mavlink_state_correction_t
yaw_rate	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_rates_thrust_setpoint.h	/^    float yaw_rate; \/\/\/< Desired yaw rate in radians per second$/;"	m	struct:__mavlink_roll_pitch_yaw_rates_thrust_setpoint_t
yaw_rudder	lib/mavlink/1.0/common/mavlink_msg_hil_controls.h	/^    float yaw_rudder; \/\/\/< Control output -1 .. 1$/;"	m	struct:__mavlink_hil_controls_t
yaw_speed	lib/mavlink/1.0/common/mavlink_msg_roll_pitch_yaw_speed_thrust_setpoint.h	/^    float yaw_speed; \/\/\/< Desired yaw angular speed in rad\/s$/;"	m	struct:__mavlink_roll_pitch_yaw_speed_thrust_setpoint_t
yaw_speed	lib/mavlink/1.0/common/mavlink_msg_set_roll_pitch_yaw_speed_thrust.h	/^    float yaw_speed; \/\/\/< Desired yaw angular speed in rad\/s$/;"	m	struct:__mavlink_set_roll_pitch_yaw_speed_thrust_t
yawspeed	lib/mavlink/1.0/common/mavlink_msg_attitude.h	/^    float yawspeed; \/\/\/< Yaw angular speed (rad\/s)$/;"	m	struct:__mavlink_attitude_t
yawspeed	lib/mavlink/1.0/common/mavlink_msg_attitude_quaternion.h	/^    float yawspeed; \/\/\/< Yaw angular speed (rad\/s)$/;"	m	struct:__mavlink_attitude_quaternion_t
yawspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    float yawspeed; \/\/\/< Body frame yaw \/ psi angular speed (rad\/s)$/;"	m	struct:__mavlink_hil_state_t
yawspeed	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    float yawspeed; \/\/\/< Body frame yaw \/ psi angular speed (rad\/s)$/;"	m	struct:__mavlink_hil_state_quaternion_t
ygyro	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float ygyro; \/\/\/< Angular speed around Y axis (rad \/ sec)$/;"	m	struct:__mavlink_highres_imu_t
ygyro	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float ygyro; \/\/\/< Angular speed around Y axis in body frame (rad \/ sec)$/;"	m	struct:__mavlink_hil_sensor_t
ygyro	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    int16_t ygyro; \/\/\/< Angular speed around Y axis (raw)$/;"	m	struct:__mavlink_raw_imu_t
ygyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    int16_t ygyro; \/\/\/< Angular speed around Y axis (millirad \/sec)$/;"	m	struct:__mavlink_scaled_imu_t
ygyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    int16_t ygyro; \/\/\/< Angular speed around Y axis (millirad \/sec)$/;"	m	struct:__mavlink_scaled_imu2_t
ygyro	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float ygyro; \/\/\/< Angular speed around Y axis rad\/s$/;"	m	struct:__mavlink_sim_state_t
ymag	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float ymag; \/\/\/< Y Magnetic field (Gauss)$/;"	m	struct:__mavlink_highres_imu_t
ymag	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float ymag; \/\/\/< Y Magnetic field (Gauss)$/;"	m	struct:__mavlink_hil_sensor_t
ymag	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    int16_t ymag; \/\/\/< Y Magnetic field (raw)$/;"	m	struct:__mavlink_raw_imu_t
ymag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    int16_t ymag; \/\/\/< Y Magnetic field (milli tesla)$/;"	m	struct:__mavlink_scaled_imu_t
ymag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    int16_t ymag; \/\/\/< Y Magnetic field (milli tesla)$/;"	m	struct:__mavlink_scaled_imu2_t
z	lib/mavlink/1.0/common/mavlink_msg_debug_vect.h	/^    float z; \/\/\/< z$/;"	m	struct:__mavlink_debug_vect_t
z	lib/mavlink/1.0/common/mavlink_msg_global_vision_position_estimate.h	/^    float z; \/\/\/< Global Z position$/;"	m	struct:__mavlink_global_vision_position_estimate_t
z	lib/mavlink/1.0/common/mavlink_msg_local_position_ned.h	/^    float z; \/\/\/< Z Position$/;"	m	struct:__mavlink_local_position_ned_t
z	lib/mavlink/1.0/common/mavlink_msg_local_position_ned_system_global_offset.h	/^    float z; \/\/\/< Z Position$/;"	m	struct:__mavlink_local_position_ned_system_global_offset_t
z	lib/mavlink/1.0/common/mavlink_msg_local_position_setpoint.h	/^    float z; \/\/\/< z position$/;"	m	struct:__mavlink_local_position_setpoint_t
z	lib/mavlink/1.0/common/mavlink_msg_manual_control.h	/^    int16_t z; \/\/\/< Z-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a separate slider movement with maximum being 1000 and minimum being -1000 on a joystick and the thrust of a vehicle.$/;"	m	struct:__mavlink_manual_control_t
z	lib/mavlink/1.0/common/mavlink_msg_mission_item.h	/^    float z; \/\/\/< PARAM7 \/ z position: global: altitude (relative or absolute, depending on frame.$/;"	m	struct:__mavlink_mission_item_t
z	lib/mavlink/1.0/common/mavlink_msg_set_local_position_setpoint.h	/^    float z; \/\/\/< z position$/;"	m	struct:__mavlink_set_local_position_setpoint_t
z	lib/mavlink/1.0/common/mavlink_msg_vicon_position_estimate.h	/^    float z; \/\/\/< Global Z position$/;"	m	struct:__mavlink_vicon_position_estimate_t
z	lib/mavlink/1.0/common/mavlink_msg_vision_position_estimate.h	/^    float z; \/\/\/< Global Z position$/;"	m	struct:__mavlink_vision_position_estimate_t
z	lib/mavlink/1.0/common/mavlink_msg_vision_speed_estimate.h	/^    float z; \/\/\/< Global Z speed$/;"	m	struct:__mavlink_vision_speed_estimate_t
zErr	lib/mavlink/1.0/common/mavlink_msg_state_correction.h	/^    float zErr; \/\/\/< z position error$/;"	m	struct:__mavlink_state_correction_t
zacc	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float zacc; \/\/\/< Z acceleration (m\/s^2)$/;"	m	struct:__mavlink_highres_imu_t
zacc	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float zacc; \/\/\/< Z acceleration (m\/s^2)$/;"	m	struct:__mavlink_hil_sensor_t
zacc	lib/mavlink/1.0/common/mavlink_msg_hil_state.h	/^    int16_t zacc; \/\/\/< Z acceleration (mg)$/;"	m	struct:__mavlink_hil_state_t
zacc	lib/mavlink/1.0/common/mavlink_msg_hil_state_quaternion.h	/^    int16_t zacc; \/\/\/< Z acceleration (mg)$/;"	m	struct:__mavlink_hil_state_quaternion_t
zacc	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    int16_t zacc; \/\/\/< Z acceleration (raw)$/;"	m	struct:__mavlink_raw_imu_t
zacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    int16_t zacc; \/\/\/< Z acceleration (mg)$/;"	m	struct:__mavlink_scaled_imu_t
zacc	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    int16_t zacc; \/\/\/< Z acceleration (mg)$/;"	m	struct:__mavlink_scaled_imu2_t
zacc	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float zacc; \/\/\/< Z acceleration m\/s\/s$/;"	m	struct:__mavlink_sim_state_t
zgyro	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float zgyro; \/\/\/< Angular speed around Z axis (rad \/ sec)$/;"	m	struct:__mavlink_highres_imu_t
zgyro	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float zgyro; \/\/\/< Angular speed around Z axis in body frame (rad \/ sec)$/;"	m	struct:__mavlink_hil_sensor_t
zgyro	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    int16_t zgyro; \/\/\/< Angular speed around Z axis (raw)$/;"	m	struct:__mavlink_raw_imu_t
zgyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    int16_t zgyro; \/\/\/< Angular speed around Z axis (millirad \/sec)$/;"	m	struct:__mavlink_scaled_imu_t
zgyro	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    int16_t zgyro; \/\/\/< Angular speed around Z axis (millirad \/sec)$/;"	m	struct:__mavlink_scaled_imu2_t
zgyro	lib/mavlink/1.0/common/mavlink_msg_sim_state.h	/^    float zgyro; \/\/\/< Angular speed around Z axis rad\/s$/;"	m	struct:__mavlink_sim_state_t
zmag	lib/mavlink/1.0/common/mavlink_msg_highres_imu.h	/^    float zmag; \/\/\/< Z Magnetic field (Gauss)$/;"	m	struct:__mavlink_highres_imu_t
zmag	lib/mavlink/1.0/common/mavlink_msg_hil_sensor.h	/^    float zmag; \/\/\/< Z Magnetic field (Gauss)$/;"	m	struct:__mavlink_hil_sensor_t
zmag	lib/mavlink/1.0/common/mavlink_msg_raw_imu.h	/^    int16_t zmag; \/\/\/< Z Magnetic field (raw)$/;"	m	struct:__mavlink_raw_imu_t
zmag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu.h	/^    int16_t zmag; \/\/\/< Z Magnetic field (milli tesla)$/;"	m	struct:__mavlink_scaled_imu_t
zmag	lib/mavlink/1.0/common/mavlink_msg_scaled_imu2.h	/^    int16_t zmag; \/\/\/< Z Magnetic field (milli tesla)$/;"	m	struct:__mavlink_scaled_imu2_t
